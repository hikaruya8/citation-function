{"title": "Approximation and Exactness in Finite State Optimality Theory", "year": 2000, "citation_contexts": [{"raw_string": "john:form726 C. Douglas Johnson 1972 . Formal Aspects of Phonological Descriptions. Mouton, The Hague.", "citing_string": "Johnson 1972", "sentence": 0, "citation_type": "Positional", "cite_context": "Finite state methods have proven quite successful for encoding rule-based generative phonology  ( Johnson 1972  ,  Kaplan and Kay 1994 )  .", "citation_role": "Motivation", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "john:form726 C. Douglas Johnson 1972 . Formal Aspects of Phonological Descriptions. Mouton, The Hague.", "title": "Formal Aspects of Phonological Descriptions", "authors": ["C. Douglas Johnson"], "surnames": ["Johnson"], "paper_id": "External_DUMMY", "year": 1972}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_0", "subsection": 0}, {"raw_string": "kapl:regu948 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379.", "citing_string": "Kaplan and Kay 1994", "sentence": 0, "citation_type": "Positional", "cite_context": "Finite state methods have proven quite successful for encoding rule-based generative phonology  ( Johnson 1972  ,  Kaplan and Kay 1994 )  .", "citation_role": "Motivation", "is_self_cite": false, "cited_paper_id": "External_1120", "info": {"raw_string": "kapl:regu948 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379.", "title": "Regular models of phonological rule systems", "authors": ["Ronald Kaplan", "Martin Kay"], "surnames": ["Kaplan", "Kay"], "paper_id": "External_1120", "year": 1994}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_1", "subsection": 0}, {"raw_string": "kisseberth15 Charles Kisseberth 1970 . On the functional unity of phonological rules. Linguistic Inquiry, 1:291-306.", "citing_string": "Kisseberth 1970", "sentence": 2, "citation_type": "Positional", "cite_context": "While Optimality Theory ( OT ) has been successful in explaining certain phonological phenomena such as conspiracies  ( Kisseberth 1970 )  , it has been less successful for computation .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "kisseberth15 Charles Kisseberth 1970 . On the functional unity of phonological rules. Linguistic Inquiry, 1:291-306.", "title": "On the functional unity of phonological rules", "authors": ["kisseberth15 Charles Kisseberth"], "surnames": ["Kisseberth"], "paper_id": "External_DUMMY", "year": 1970}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_2", "subsection": 0}, {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "citing_string": "Frank and Satta 1998", "sentence": 3, "citation_type": "Positional", "cite_context": "The negative result of  ( Frank and Satta 1998 )  has shown that in the general case the method of counting constraint violations takes OT beyond the power of regular relations .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "title": "Optimality theory and the computational complexity of constraint violability", "authors": ["frank-satta3 Robert Frank", "Giorgio Satta"], "surnames": ["Frank", "Satta"], "paper_id": "External_DUMMY", "year": 1998}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_3", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 4, "citation_type": "Positional", "cite_context": "To handle such constraints ,  ( Karttunen 1998 )  has proposed a finite-state approximation that counts constraint violations up to a predetermined bound .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_4", "subsection": 0}, {"raw_string": "ellison2 Mark T. Ellison 1994 . Phonological derivation in optimality theory. In Proceedings of the 15th International Conference on Computational Linguistics (COLING), pages 1007-1013, Kyoto.", "citing_string": "Ellison 1994", "sentence": 5, "citation_type": "Positional", "cite_context": "Unlike previous approaches  ( Ellison 1994  ,  Walther 1996 )  ,  Karttunen (0000)  ' s approach is encoded entirely in the finite state calculus , with no extra-logical procedures for counting constraint violations .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "ellison2 Mark T. Ellison 1994 . Phonological derivation in optimality theory. In Proceedings of the 15th International Conference on Computational Linguistics (COLING), pages 1007-1013, Kyoto.", "title": "Phonological derivation in optimality theory", "authors": ["ellison2 Mark T. Ellison"], "surnames": ["Ellison"], "paper_id": "External_DUMMY", "year": 1994}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_5", "subsection": 0}, {"raw_string": "walther25 Markus Walther 1996 . OT simple - a construction-kit approach to optimality theory implementation. ROA-152-1096.", "citing_string": "Walther 1996", "sentence": 5, "citation_type": "Positional", "cite_context": "Unlike previous approaches  ( Ellison 1994  ,  Walther 1996 )  ,  Karttunen (0000)  ' s approach is encoded entirely in the finite state calculus , with no extra-logical procedures for counting constraint violations .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "walther25 Markus Walther 1996 . OT simple - a construction-kit approach to optimality theory implementation. ROA-152-1096.", "title": "OT simple - a construction-kit approach to optimality theory implementation", "authors": ["walther25 Markus Walther"], "surnames": ["Walther"], "paper_id": "External_DUMMY", "year": 1996}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_6", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 5, "citation_type": "Positional", "cite_context": "Unlike previous approaches  ( Ellison 1994  ,  Walther 1996 )  ,  Karttunen (0000)  ' s approach is encoded entirely in the finite state calculus , with no extra-logical procedures for counting constraint violations .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_7", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 8, "citation_type": "Positional", "cite_context": "As in  Karttunen (0000)  ' s counting approach , our approach uses purely finite state methods without extra-logical procedures .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_8", "subsection": 0}, {"raw_string": "ellison2 Mark T. Ellison 1994 . Phonological derivation in optimality theory. In Proceedings of the 15th International Conference on Computational Linguistics (COLING), pages 1007-1013, Kyoto.", "citing_string": "Ellison 1994", "sentence": 11, "citation_type": "Essential", "cite_context": "In this paper we will illustrate the matching approach and compare it with the counting approach on the basis of the  Prince (0000)  &  Smolensky (0000)  syllable structure example  ( Prince et al. 1993  ,  Ellison 1994  ,  Tesar 1995 )  , for each of the different constraint orderings identified in  Prince (0000)  &  Smolensky (0000)  .", "citation_role": "Uses", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "ellison2 Mark T. Ellison 1994 . Phonological derivation in optimality theory. In Proceedings of the 15th International Conference on Computational Linguistics (COLING), pages 1007-1013, Kyoto.", "title": "Phonological derivation in optimality theory", "authors": ["ellison2 Mark T. Ellison"], "surnames": ["Ellison"], "paper_id": "External_DUMMY", "year": 1994}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_9", "subsection": 0}, {"raw_string": "tesar21 Bruce Tesar 1995 . Computational Optimality Theory. Ph.D. thesis, University of Colorado, Boulder.", "citing_string": "Tesar 1995", "sentence": 11, "citation_type": "Essential", "cite_context": "In this paper we will illustrate the matching approach and compare it with the counting approach on the basis of the  Prince (0000)  &  Smolensky (0000)  syllable structure example  ( Prince et al. 1993  ,  Ellison 1994  ,  Tesar 1995 )  , for each of the different constraint orderings identified in  Prince (0000)  &  Smolensky (0000)  .", "citation_role": "Uses", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "tesar21 Bruce Tesar 1995 . Computational Optimality Theory. Ph.D. thesis, University of Colorado, Boulder.", "title": "Computational Optimality Theory", "authors": ["tesar21 Bruce Tesar"], "surnames": ["Tesar"], "paper_id": "External_DUMMY", "year": 1995}, "section": 0, "citation_id": "Teufel_0006038.cfc-scixml_10", "subsection": 0}, {"raw_string": "kapl:regu948 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379.", "citing_string": "Kaplan and Kay 1994", "sentence": 1, "citation_type": "Positional", "cite_context": "In particular , the work of  ( Kaplan and Kay 1994 )  has provided a compiler from classical generative phonology rewriting rules to finite state transducers .", "citation_role": "Motivation", "is_self_cite": false, "cited_paper_id": "External_1120", "info": {"raw_string": "kapl:regu948 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379.", "title": "Regular models of phonological rule systems", "authors": ["Ronald Kaplan", "Martin Kay"], "surnames": ["Kaplan", "Kay"], "paper_id": "External_1120", "year": 1994}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_11", "subsection": 1}, {"raw_string": "karttunen:9612 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz.", "citing_string": "Karttunen et al. 1996", "sentence": 6, "citation_type": "Positional", "cite_context": "Kaplan (0000)  &  Kay (0000)  ' s finite state calculus now exists in multiple implementations , the most well-known of which is that of  ( Karttunen et al. 1996 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:9612 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_12", "subsection": 1}, {"raw_string": "kart:9511 Lauri Karttunen 1995 . The replace operator. In 33th Annual Meeting of the Association for Computational Linguistics, M.I.T. Cambridge Mass.", "citing_string": "Karttunen 1995", "sentence": 11, "citation_type": "Positional", "cite_context": "The finite state calculus has proven to be a very useful tool for the development of higher-level finite state operators  ( Karttunen 1995  ,  Kempe and Karttunen 1996  ,  Karttunen 1996  ,  Gerdemann and Noord 1999 )  .", "citation_role": "Motivation", "is_self_cite": false, "cited_paper_id": "External_63749", "info": {"raw_string": "kart:9511 Lauri Karttunen 1995 . The replace operator. In 33th Annual Meeting of the Association for Computational Linguistics, M.I.T. Cambridge Mass.", "title": "The replace operator", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_63749", "year": 1995}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_13", "subsection": 1}, {"raw_string": "KempeKarttunen14 Andre Kempe and Lauri Karttunen 1996 . Parallel replacement in the finite-state calculus. In Proceedings of the 16th International Conference on Computational Linguistics (COLING), Copenhagen, Denmark.", "citing_string": "Kempe and Karttunen 1996", "sentence": 11, "citation_type": "Positional", "cite_context": "The finite state calculus has proven to be a very useful tool for the development of higher-level finite state operators  ( Karttunen 1995  ,  Kempe and Karttunen 1996  ,  Karttunen 1996  ,  Gerdemann and Noord 1999 )  .", "citation_role": "Motivation", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "KempeKarttunen14 Andre Kempe and Lauri Karttunen 1996 . Parallel replacement in the finite-state calculus. In Proceedings of the 16th International Conference on Computational Linguistics (COLING), Copenhagen, Denmark.", "title": "Parallel replacement in the finite-state calculus", "authors": ["KempeKarttunen14 Andre Kempe", "Lauri Karttunen"], "surnames": ["Kempe", "Karttunen"], "paper_id": "External_DUMMY", "year": 1996}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_14", "subsection": 1}, {"raw_string": "karttunen:9612 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz.", "citing_string": "Karttunen 1996", "sentence": 11, "citation_type": "Positional", "cite_context": "The finite state calculus has proven to be a very useful tool for the development of higher-level finite state operators  ( Karttunen 1995  ,  Kempe and Karttunen 1996  ,  Karttunen 1996  ,  Gerdemann and Noord 1999 )  .", "citation_role": "Motivation", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:9612 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_15", "subsection": 1}, {"raw_string": "karttunen:9612 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz.", "citing_string": "Karttunen 1996", "sentence": 13, "citation_type": "Positional", "cite_context": "( Karttunen 1996 )  , for example , introduces an algorithm for a leftmost-longest replacement operator .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:9612 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_16", "subsection": 1}, {"raw_string": "ellison2 Mark T. Ellison 1994 . Phonological derivation in optimality theory. In Proceedings of the 15th International Conference on Computational Linguistics (COLING), pages 1007-1013, Kyoto.", "citing_string": "Ellison 1994", "sentence": 1, "citation_type": "Positional", "cite_context": "If , as claimed in  ( Ellison 1994 )  , Gen is a regular relation and if each constraint can be implemented as an identity transducer , then optimality theory analyses could be implemented as in fig.  CREF  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "ellison2 Mark T. Ellison 1994 . Phonological derivation in optimality theory. In Proceedings of the 15th International Conference on Computational Linguistics (COLING), pages 1007-1013, Kyoto.", "title": "Phonological derivation in optimality theory", "authors": ["ellison2 Mark T. Ellison"], "surnames": ["Ellison"], "paper_id": "External_DUMMY", "year": 1994}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_17", "subsection": 2}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 3, "citation_type": "Positional", "cite_context": "( Karttunen 1998 )  treats this problem by providing a new operator for lenient composition , which is defined in terms of the auxiliary operation of priority union .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_18", "subsection": 2}, {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "citing_string": "Frank and Satta 1998", "sentence": 14, "citation_type": "Positional", "cite_context": "As  ( Frank and Satta 1998 )  have shown , an OT describes a regular relation under the assumptions that Gen is a regular relation , and each of the constraints is a regular relation which maps a candidate string to a natural number ( indicating the number of constraint violations in that candidate ) , where the range of each constraint is finite .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "title": "Optimality theory and the computational complexity of constraint violability", "authors": ["frank-satta3 Robert Frank", "Giorgio Satta"], "surnames": ["Frank", "Satta"], "paper_id": "External_DUMMY", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_19", "subsection": 2}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 1, "citation_type": "Essential", "cite_context": "This section is heavily based on  ( Karttunen 1998 )  , which the reader should consult for more explanation and examples .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_20", "subsection": 3}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 8, "citation_type": "Essential", "cite_context": "Following  Karttunen (0000)  , Gen is formalized as in fig.  CREF  .", "citation_role": "Uses", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_21", "subsection": 3}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 13, "citation_type": "Positional", "cite_context": "In the definitions for the constraints , we will deviate somewhat from  Karttunen (0000)  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_22", "subsection": 3}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 15, "citation_type": "Essential", "cite_context": "It turns out to be easier for our extension of  Karttunen (0000)  ' s formalization below , as well as for our alternative approach , if we return to the concept of a constraint as introduced by  Prince (0000)  and  Smolensky (0000)  where a constraint adds marks in the candidate string at the position where the string violates the constraint .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_23", "subsection": 3}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 28, "citation_type": "Positional", "cite_context": "First , we discuss the approach of  ( Karttunen 1998 )  , based on the lenient composition operator .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_0006038.cfc-scixml_24", "subsection": 3}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 0, "citation_type": "Essential", "cite_context": "In the approach of  ( Karttunen 1998 )  , a candidate set is leniently composed with the set of strings which satisfy a given constraint .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 2, "citation_id": "Teufel_0006038.cfc-scixml_25", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 1, "citation_type": "Positional", "cite_context": "Since we have defined a constraint as a transducer which marks candidate strings , we need to alter the definitions somewhat , but the resulting transducers are equivalent to the transducers produced by  ( Karttunen 1998 )  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 2, "citation_id": "Teufel_0006038.cfc-scixml_26", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 6, "citation_type": "Positional", "cite_context": "Using the optimality operator , we can then combine Gen and the various constraints as in the following example ( equivalent to figure 14 of  ( Karttunen 1998 )  ) : ", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 2, "citation_id": "Teufel_0006038.cfc-scixml_27", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 11, "citation_type": "Positional", "cite_context": "Karttunen (0000)  recognizes this problem and proposes to have a sequence of constraints Parse0 , Parse1 , Parse2 ...ParseN , where each ParseX constraint requires that candidates not contain more than X unparsed constituents .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 2, "citation_id": "Teufel_0006038.cfc-scixml_28", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen ( 0000 )", "sentence": 13, "citation_type": "Positional", "cite_context": "Our notation is somewhat different , but equivalent to the notation used by  Karttunen (0000)  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 2, "citation_id": "Teufel_0006038.cfc-scixml_29", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 18, "citation_type": "Positional", "cite_context": "This improves upon the result of  ( Karttunen 1998 )  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 3, "citation_id": "Teufel_0006038.cfc-scixml_30", "subsection": 2}, {"raw_string": "mccarthy-prince16 John McCarthy and Alan Prince 1995 . Faithfulness and reduplicative identity. In Jill Beckman, Laura Walsh Dickey, and Suzanne Urbanczyk, editors, Papers in Optimality Theory, pages 249-384. Graduate Linguistic Student Association, Amherst, Mass. University of Massachusetts Occasional Papers in Linguistics 18.", "citing_string": "McCarthy and Prince 1995", "sentence": 0, "citation_type": "Positional", "cite_context": "It might be objected that the  Prince (0000)  and  Smolensky (0000)  syllable structure example is a particularly simple containment theory analysis and that other varieties of OT such as correspondence theory  ( McCarthy and Prince 1995 )  are beyond the scope of matching .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "mccarthy-prince16 John McCarthy and Alan Prince 1995 . Faithfulness and reduplicative identity. In Jill Beckman, Laura Walsh Dickey, and Suzanne Urbanczyk, editors, Papers in Optimality Theory, pages 249-384. Graduate Linguistic Student Association, Amherst, Mass. University of Massachusetts Occasional Papers in Linguistics 18.", "title": "Faithfulness and reduplicative identity", "authors": ["mccarthy-prince16 John McCarthy", "Alan Prince"], "surnames": ["McCarthy", "Prince"], "paper_id": "External_DUMMY", "year": 1995}, "section": 3, "citation_id": "Teufel_0006038.cfc-scixml_31", "subsection": 3}, {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "citing_string": "Frank and Satta 1998", "sentence": 4, "citation_type": "Essential", "cite_context": "Correspondence theory is beyond the scope of this paper , however a simple example of an OT where Gen modifies the input is provided by the problem described in  equation  ;  CREF  ( from  ( Frank and Satta 1998 )  ) .", "citation_role": "Uses", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "title": "Optimality theory and the computational complexity of constraint violability", "authors": ["frank-satta3 Robert Frank", "Giorgio Satta"], "surnames": ["Frank", "Satta"], "paper_id": "External_DUMMY", "year": 1998}, "section": 3, "citation_id": "Teufel_0006038.cfc-scixml_32", "subsection": 3}, {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "citing_string": "Frank and Satta 1998", "sentence": 11, "citation_type": "Positional", "cite_context": "In discussing the impact of their result ,  ( Frank and Satta 1998 )  suggest that the OT formal system is too rich in generative capacity .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frank-satta3 Robert Frank and Giorgio Satta 1998 . Optimality theory and the computational complexity of constraint violability. Computational Linguistics, 24:307-315.", "title": "Optimality theory and the computational complexity of constraint violability", "authors": ["frank-satta3 Robert Frank", "Giorgio Satta"], "surnames": ["Frank", "Satta"], "paper_id": "External_DUMMY", "year": 1998}, "section": 3, "citation_id": "Teufel_0006038.cfc-scixml_33", "subsection": 3}, {"raw_string": "blattner-head1 Meera Blattner and Tom Head 1977 . Single-valued a-transducers. Journal of Computer and System Sciences, 15(3):328-353.", "citing_string": "Blattner and Head 1977", "sentence": 9, "citation_type": "Positional", "cite_context": "The question of whether a given transducer is ambiguous is shown to be decidable in  ( Blattner and Head 1977 )  ; and an efficient algorithm is proposed in  ( Roche and Schabes 1997 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "blattner-head1 Meera Blattner and Tom Head 1977 . Single-valued a-transducers. Journal of Computer and System Sciences, 15(3):328-353.", "title": "Single-valued a-transducers", "authors": ["blattner-head1 Meera Blattner", "Tom Head"], "surnames": ["Blattner", "Head"], "paper_id": "External_DUMMY", "year": 1977}, "section": 4, "citation_id": "Teufel_0006038.cfc-scixml_34", "subsection": 0}, {"raw_string": "roch:lang9720 Emmanuel Roche and Yves Schabes 1997 . Introduction. In Emmanuel Roche and Yves Schabes, editors, Finite-State Language Processing. MIT Press, Cambridge, Mass.", "citing_string": "Roche and Schabes 1997", "sentence": 9, "citation_type": "Positional", "cite_context": "The question of whether a given transducer is ambiguous is shown to be decidable in  ( Blattner and Head 1977 )  ; and an efficient algorithm is proposed in  ( Roche and Schabes 1997 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "roch:lang9720 Emmanuel Roche and Yves Schabes 1997 . Introduction. In Emmanuel Roche and Yves Schabes, editors, Finite-State Language Processing. MIT Press, Cambridge, Mass.", "title": "Introduction", "authors": ["Emmanuel Roche", "Yves Schabes"], "surnames": ["Roche", "Schabes"], "paper_id": "External_DUMMY", "year": 1997}, "section": 4, "citation_id": "Teufel_0006038.cfc-scixml_35", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 0, "citation_type": "Positional", "cite_context": "We have presented a new approach for implementing OT which is based on matching rather than the counting approach of  ( Karttunen 1998 )  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 5, "citation_id": "Teufel_0006038.cfc-scixml_36", "subsection": 0}, {"raw_string": "hermans995 Ben Hermans and Marc van Oostendorp editors. 1999 . The Derivational Residue in Phonological Optimality Theory, volume 28 of Linguistik Aktuell/Linguistics Today. John Benjamins, Amsterdam/Philadelphia.", "citing_string": "Hermans and Oostendorp 1999", "sentence": 7, "citation_type": "Positional", "cite_context": "Another line of further research will be the proper integration of finite state OT with non-OT phonological rules as discussed , for example , in papers collected in  ( Hermans and Oostendorp 1999 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "hermans995 Ben Hermans and Marc van Oostendorp editors. 1999 . The Derivational Residue in Phonological Optimality Theory, volume 28 of Linguistik Aktuell/Linguistics Today. John Benjamins, Amsterdam/Philadelphia.", "title": "The Derivational Residue in Phonological Optimality Theory, volume 28 of Linguistik Aktuell/Linguistics Today", "authors": ["hermans995 Ben Hermans", "Marc van Oostendorp"], "surnames": ["Hermans", "Oostendorp"], "paper_id": "External_DUMMY", "year": 1999}, "section": 5, "citation_id": "Teufel_0006038.cfc-scixml_37", "subsection": 0}, {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "citing_string": "Karttunen 1998", "sentence": 9, "citation_type": "Positional", "cite_context": "( Karttunen 1998 )  suggests that the Constraint Grammar approach of  ( Karlsson et al. 1995 )  could be implemented using lenient composition .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9813 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara.", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 5, "citation_id": "Teufel_0006038.cfc-scixml_38", "subsection": 0}, {"raw_string": "karlsson959 Fred Karlsson , Atro Voutilainen , Juha Heikkilae , and Arto Anttila 1995 . Constraint Grammar: A Language-Independent Framework for Parsing Unrestricted Text. Mouton de Gruyter, Berlin/New York.", "citing_string": "Karlsson et al. 1995", "sentence": 9, "citation_type": "Positional", "cite_context": "( Karttunen 1998 )  suggests that the Constraint Grammar approach of  ( Karlsson et al. 1995 )  could be implemented using lenient composition .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "karlsson959 Fred Karlsson , Atro Voutilainen , Juha Heikkilae , and Arto Anttila 1995 . Constraint Grammar: A Language-Independent Framework for Parsing Unrestricted Text. Mouton de Gruyter, Berlin/New York.", "title": "Constraint Grammar: A Language-Independent Framework for Parsing Unrestricted Text", "authors": ["karlsson959 Fred Karlsson", "Atro Voutilainen", "Juha Heikkilae", "Arto Anttila"], "surnames": ["Karlsson", "Voutilainen", "Heikkilae", "Anttila"], "paper_id": "External_DUMMY", "year": 1995}, "section": 5, "citation_id": "Teufel_0006038.cfc-scixml_39", "subsection": 0}, {"raw_string": "oflazer9918 Kemal Oflazer 1999 . Dependency parsing with an extended finite state approach. In 37th Annual Meeting of the Association for Computational Linguistics, pages 254-260.", "citing_string": "Oflazer 1999", "sentence": 11, "citation_type": "Positional", "cite_context": "Recently ,  ( Oflazer 1999 )  has presented an implementation of Dependency syntax which also uses lenient composition with the counting approach .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "oflazer9918 Kemal Oflazer 1999 . Dependency parsing with an extended finite state approach. In 37th Annual Meeting of the Association for Computational Linguistics, pages 254-260.", "title": "Dependency parsing with an extended finite state approach", "authors": ["oflazer9918 Kemal Oflazer"], "surnames": ["Oflazer"], "paper_id": "External_DUMMY", "year": 1999}, "section": 5, "citation_id": "Teufel_0006038.cfc-scixml_40", "subsection": 0}], "paper_id": "External_35735", "authors": ["Dale Gerdemann", "Gertjan van Noord"], "sections": [{"num": 0, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 6, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "Finite", "ArgType": null, "before": ""}, {"index": 2, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 7], "characterOffsetBegin": 7, "originalText": "state", "ArgType": null, "before": " "}, {"index": 3, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 13, "originalText": "methods", "ArgType": "subj", "before": " "}, {"index": 4, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 25, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "have", "ArgType": null, "before": " "}, {"index": 5, "word": "proven", "lemma": "prove", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 32, "segment_span": [0, 7], "tense": "N", "characterOffsetBegin": 26, "originalText": "proven", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "quite", "lemma": "quite", "after": " ", "pos": "RB", "characterOffsetEnd": 38, "segment_span": [0, 7], "characterOffsetBegin": 33, "originalText": "quite", "ArgType": null, "before": " "}, {"index": 7, "word": "successful", "lemma": "successful", "after": " ", "pos": "JJ", "characterOffsetEnd": 49, "segment_span": [0, 7], "characterOffsetBegin": 39, "originalText": "successful", "ArgType": null, "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [7, 21], "characterOffsetBegin": 50, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "encoding", "lemma": "encode", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 62, "segment_span": [7, 21], "tense": "G", "characterOffsetBegin": 54, "originalText": "encoding", "ArgType": null, "before": " "}, {"index": 10, "word": "rule-based", "lemma": "rule-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [7, 21], "characterOffsetBegin": 63, "originalText": "rule-based", "ArgType": null, "before": " "}, {"index": 11, "word": "generative", "lemma": "generative", "after": " ", "pos": "JJ", "characterOffsetEnd": 84, "segment_span": [7, 21], "characterOffsetBegin": 74, "originalText": "generative", "ArgType": null, "before": " "}, {"index": 12, "word": "phonology", "lemma": "phonology", "after": "  ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [7, 21], "characterOffsetBegin": 85, "originalText": "phonology", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 97, "segment_span": [7, 21], "characterOffsetBegin": 96, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 14, "word": "Johnson", "lemma": "Johnson", "after": " ", "pos": "NNP", "characterOffsetEnd": 105, "segment_span": [7, 21], "characterOffsetBegin": 98, "originalText": "Johnson", "ArgType": null, "before": " "}, {"index": 15, "word": "1972", "lemma": "1972", "after": "  ", "pos": "CD", "characterOffsetEnd": 110, "segment_span": [7, 21], "characterOffsetBegin": 106, "originalText": "1972", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 113, "segment_span": [7, 21], "characterOffsetBegin": 112, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 17, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 121, "segment_span": [7, 21], "characterOffsetBegin": 115, "originalText": "Kaplan", "ArgType": null, "before": "  "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 125, "segment_span": [7, 21], "characterOffsetBegin": 122, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 129, "segment_span": [7, 21], "characterOffsetBegin": 126, "originalText": "Kay", "ArgType": null, "before": " "}, {"index": 20, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 134, "segment_span": [7, 21], "characterOffsetBegin": 130, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 136, "segment_span": [7, 21], "characterOffsetBegin": 135, "originalText": ")", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 139, "characterOffsetBegin": 138, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Finite state methods have proven quite successful for encoding rule-based generative phonology ( Johnson 1972 , Kaplan and Kay 1994 ) ."}, {"tokens": [{"index": 1, "word": "Recently", "lemma": "recently", "after": " ", "pos": "RB", "characterOffsetEnd": 8, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "Recently", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 10, "segment_span": [0, 22], "characterOffsetBegin": 9, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 18, "segment_span": [0, 22], "characterOffsetBegin": 11, "originalText": "however", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 20, "segment_span": [0, 22], "characterOffsetBegin": 19, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "Optimality", "lemma": "Optimality", "after": " ", "pos": "NNP", "characterOffsetEnd": 31, "segment_span": [0, 22], "characterOffsetBegin": 21, "originalText": "Optimality", "ArgType": null, "before": " "}, {"index": 6, "word": "Theory", "lemma": "Theory", "after": "  ", "pos": "NNP", "characterOffsetEnd": 38, "segment_span": [0, 22], "characterOffsetBegin": 32, "originalText": "Theory", "ArgType": "subj", "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 41, "segment_span": [0, 22], "characterOffsetBegin": 40, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 8, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 48, "segment_span": [0, 22], "characterOffsetBegin": 42, "originalText": "Prince", "ArgType": null, "before": " "}, {"index": 9, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 51, "segment_span": [0, 22], "characterOffsetBegin": 49, "originalText": "et", "ArgType": null, "before": " "}, {"index": 10, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 55, "segment_span": [0, 22], "characterOffsetBegin": 52, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 11, "word": "1993", "lemma": "1993", "after": " ", "pos": "CD", "characterOffsetEnd": 60, "segment_span": [0, 22], "characterOffsetBegin": 56, "originalText": "1993", "ArgType": null, "before": " "}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 62, "segment_span": [0, 22], "characterOffsetBegin": 61, "originalText": ")", "ArgType": null, "before": " "}, {"index": 13, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 67, "segment_span": [0, 22], "characterOffsetBegin": 64, "originalText": "has", "ArgType": null, "before": "  "}, {"index": 14, "word": "emphasized", "lemma": "emphasize", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 78, "segment_span": [0, 22], "tense": "N", "characterOffsetBegin": 68, "originalText": "emphasized", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 15, "word": "phonological", "lemma": "phonological", "after": " ", "pos": "JJ", "characterOffsetEnd": 91, "segment_span": [0, 22], "characterOffsetBegin": 79, "originalText": "phonological", "ArgType": null, "before": " "}, {"index": 16, "word": "accounts", "lemma": "account", "after": " ", "pos": "NNS", "characterOffsetEnd": 100, "segment_span": [0, 22], "characterOffsetBegin": 92, "originalText": "accounts", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 105, "segment_span": [0, 22], "characterOffsetBegin": 101, "originalText": "with", "ArgType": null, "before": " "}, {"index": 18, "word": "default", "lemma": "default", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [0, 22], "characterOffsetBegin": 106, "originalText": "default", "ArgType": null, "before": " "}, {"index": 19, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 125, "segment_span": [0, 22], "characterOffsetBegin": 114, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 20, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 128, "segment_span": [0, 22], "characterOffsetBegin": 126, "originalText": "on", "ArgType": null, "before": " "}, {"index": 21, "word": "surface", "lemma": "surface", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [0, 22], "characterOffsetBegin": 129, "originalText": "surface", "ArgType": null, "before": " "}, {"index": 22, "word": "forms", "lemma": "form", "after": " ", "pos": "NNS", "characterOffsetEnd": 142, "segment_span": [0, 22], "characterOffsetBegin": 137, "originalText": "forms", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 144, "characterOffsetBegin": 143, "originalText": ".", "ArgType": null, "before": " "}], "text": "Recently , however , Optimality Theory ( Prince et al. 1993 ) has emphasized phonological accounts with default constraints on surface forms ."}, {"tokens": [{"index": 1, "word": "While", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "While", "ArgType": null, "before": ""}, {"index": 2, "word": "Optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 9], "characterOffsetBegin": 6, "originalText": "Optimality", "ArgType": null, "before": " "}, {"index": 3, "word": "Theory", "lemma": "Theory", "after": " ", "pos": "NNP", "characterOffsetEnd": 23, "segment_span": [0, 9], "characterOffsetBegin": 17, "originalText": "Theory", "ArgType": "subj", "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 25, "segment_span": [0, 9], "characterOffsetBegin": 24, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 26, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 30, "segment_span": [0, 9], "characterOffsetBegin": 29, "originalText": ")", "ArgType": null, "before": " "}, {"index": 7, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 34, "segment_span": [0, 9], "characterOffsetBegin": 31, "originalText": "has", "ArgType": null, "before": " "}, {"index": 8, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 39, "segment_span": [0, 9], "characterOffsetBegin": 35, "originalText": "been", "ArgType": null, "before": " "}, {"index": 9, "word": "successful", "lemma": "successful", "after": " ", "pos": "JJ", "characterOffsetEnd": 50, "segment_span": [0, 9], "has_aux": true, "characterOffsetBegin": 40, "originalText": "successful", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [9, 21], "characterOffsetBegin": 51, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "explaining", "lemma": "explain", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 64, "segment_span": [9, 21], "tense": "G", "characterOffsetBegin": 54, "originalText": "explaining", "ArgType": null, "before": " "}, {"index": 12, "word": "certain", "lemma": "certain", "after": " ", "pos": "JJ", "characterOffsetEnd": 72, "segment_span": [9, 21], "characterOffsetBegin": 65, "originalText": "certain", "ArgType": null, "before": " "}, {"index": 13, "word": "phonological", "lemma": "phonological", "after": " ", "pos": "JJ", "characterOffsetEnd": 85, "segment_span": [9, 21], "characterOffsetBegin": 73, "originalText": "phonological", "ArgType": null, "before": " "}, {"index": 14, "word": "phenomena", "lemma": "phenomenon", "after": " ", "pos": "NNS", "characterOffsetEnd": 95, "segment_span": [9, 21], "characterOffsetBegin": 86, "originalText": "phenomena", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 100, "segment_span": [9, 21], "characterOffsetBegin": 96, "originalText": "such", "ArgType": null, "before": " "}, {"index": 16, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [9, 21], "characterOffsetBegin": 101, "originalText": "as", "ArgType": null, "before": " "}, {"index": 17, "word": "conspiracies", "lemma": "conspiracy", "after": "  ", "pos": "NNS", "characterOffsetEnd": 116, "segment_span": [9, 21], "characterOffsetBegin": 104, "originalText": "conspiracies", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 119, "segment_span": [9, 21], "characterOffsetBegin": 118, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 19, "word": "Kisseberth", "lemma": "kisseberth", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [9, 21], "characterOffsetBegin": 120, "originalText": "Kisseberth", "ArgType": null, "before": " "}, {"index": 20, "word": "1970", "lemma": "1970", "after": " ", "pos": "CD", "characterOffsetEnd": 135, "segment_span": [9, 21], "characterOffsetBegin": 131, "originalText": "1970", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 137, "segment_span": [9, 21], "characterOffsetBegin": 136, "originalText": ")", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 140, "segment_span": [21, 29], "characterOffsetBegin": 139, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 23, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 143, "segment_span": [21, 29], "characterOffsetBegin": 141, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 24, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 147, "segment_span": [21, 29], "characterOffsetBegin": 144, "originalText": "has", "ArgType": null, "before": " "}, {"index": 25, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 152, "segment_span": [21, 29], "characterOffsetBegin": 148, "originalText": "been", "ArgType": null, "before": " "}, {"index": 26, "word": "less", "lemma": "less", "after": " ", "pos": "JJR", "characterOffsetEnd": 157, "segment_span": [21, 29], "characterOffsetBegin": 153, "originalText": "less", "ArgType": null, "before": " "}, {"index": 27, "word": "successful", "lemma": "successful", "after": " ", "pos": "JJ", "characterOffsetEnd": 168, "segment_span": [21, 29], "has_aux": true, "characterOffsetBegin": 158, "originalText": "successful", "ArgType": "verb", "before": " "}, {"index": 28, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 172, "segment_span": [21, 29], "characterOffsetBegin": 169, "originalText": "for", "ArgType": null, "before": " "}, {"index": 29, "word": "computation", "lemma": "computation", "after": " ", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [21, 29], "characterOffsetBegin": 173, "originalText": "computation", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 186, "characterOffsetBegin": 185, "originalText": ".", "ArgType": null, "before": " "}], "text": "While Optimality Theory ( OT ) has been successful in explaining certain phonological phenomena such as conspiracies ( Kisseberth 1970 ) , it has been less successful for computation ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "negative", "lemma": "negative", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "negative", "ArgType": null, "before": " "}, {"index": 3, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 12], "characterOffsetBegin": 13, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 12], "characterOffsetBegin": 20, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 25, "segment_span": [0, 12], "characterOffsetBegin": 24, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 6, "word": "Frank", "lemma": "Frank", "after": " ", "pos": "NNP", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 26, "originalText": "Frank", "ArgType": null, "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 35, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "Satta", "lemma": "Satta", "after": " ", "pos": "NNP", "characterOffsetEnd": 41, "segment_span": [0, 12], "characterOffsetBegin": 36, "originalText": "Satta", "ArgType": null, "before": " "}, {"index": 9, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 46, "segment_span": [0, 12], "characterOffsetBegin": 42, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 48, "segment_span": [0, 12], "characterOffsetBegin": 47, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 53, "segment_span": [0, 12], "characterOffsetBegin": 50, "originalText": "has", "ArgType": null, "before": "  "}, {"index": 12, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 59, "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 54, "originalText": "shown", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 13, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [12, 31], "characterOffsetBegin": 60, "originalText": "that", "ArgType": null, "before": " "}, {"index": 14, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [12, 31], "characterOffsetBegin": 65, "originalText": "in", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [12, 31], "characterOffsetBegin": 68, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 79, "segment_span": [12, 31], "characterOffsetBegin": 72, "originalText": "general", "ArgType": null, "before": " "}, {"index": 17, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [12, 31], "characterOffsetBegin": 80, "originalText": "case", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [12, 31], "characterOffsetBegin": 85, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "method", "lemma": "method", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [12, 31], "characterOffsetBegin": 89, "originalText": "method", "ArgType": "subj", "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 98, "segment_span": [12, 31], "characterOffsetBegin": 96, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 107, "segment_span": [12, 31], "characterOffsetBegin": 99, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 22, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [12, 31], "characterOffsetBegin": 108, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 23, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 129, "segment_span": [12, 31], "characterOffsetBegin": 119, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "takes", "lemma": "take", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 135, "segment_span": [12, 31], "tense": "Z", "characterOffsetBegin": 130, "originalText": "takes", "ArgType": null, "before": " "}, {"index": 25, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 138, "segment_span": [12, 31], "characterOffsetBegin": 136, "originalText": "OT", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "beyond", "lemma": "beyond", "after": " ", "pos": "IN", "characterOffsetEnd": 145, "segment_span": [12, 31], "characterOffsetBegin": 139, "originalText": "beyond", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 149, "segment_span": [12, 31], "characterOffsetBegin": 146, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "power", "lemma": "power", "after": " ", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [12, 31], "characterOffsetBegin": 150, "originalText": "power", "ArgType": null, "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 158, "segment_span": [12, 31], "characterOffsetBegin": 156, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 166, "segment_span": [12, 31], "characterOffsetBegin": 159, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 31, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 176, "segment_span": [12, 31], "characterOffsetBegin": 167, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 178, "characterOffsetBegin": 177, "originalText": ".", "ArgType": null, "before": " "}], "text": "The negative result of ( Frank and Satta 1998 ) has shown that in the general case the method of counting constraint violations takes OT beyond the power of regular relations ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "handle", "lemma": "handle", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 9, "segment_span": [0, 14], "tense": "B", "characterOffsetBegin": 3, "originalText": "handle", "ArgType": null, "before": " "}, {"index": 3, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 14], "characterOffsetBegin": 10, "originalText": "such", "ArgType": null, "before": " "}, {"index": 4, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 14], "characterOffsetBegin": 15, "originalText": "constraints", "ArgType": "dobj", "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 28, "segment_span": [0, 14], "characterOffsetBegin": 27, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 31, "segment_span": [0, 14], "characterOffsetBegin": 30, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 7, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 41, "segment_span": [0, 14], "characterOffsetBegin": 32, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 8, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 46, "segment_span": [0, 14], "characterOffsetBegin": 42, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 48, "segment_span": [0, 14], "characterOffsetBegin": 47, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 53, "segment_span": [0, 14], "characterOffsetBegin": 50, "originalText": "has", "ArgType": null, "before": "  "}, {"index": 11, "word": "proposed", "lemma": "propose", "after": " ", "pos": "VBN", "characterOffsetEnd": 62, "segment_span": [0, 14], "characterOffsetBegin": 54, "originalText": "proposed", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [0, 14], "characterOffsetBegin": 63, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "finite-state", "lemma": "finite-state", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [0, 14], "characterOffsetBegin": 65, "originalText": "finite-state", "ArgType": null, "before": " "}, {"index": 14, "word": "approximation", "lemma": "approximation", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 14], "characterOffsetBegin": 78, "originalText": "approximation", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 96, "segment_span": [14, 23], "characterOffsetBegin": 92, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 16, "word": "counts", "lemma": "count", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 103, "segment_span": [14, 23], "tense": "Z", "characterOffsetBegin": 97, "originalText": "counts", "ArgType": null, "before": " "}, {"index": 17, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [14, 23], "characterOffsetBegin": 104, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 18, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 125, "segment_span": [14, 23], "characterOffsetBegin": 115, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "up", "lemma": "up", "after": " ", "pos": "IN", "characterOffsetEnd": 128, "segment_span": [14, 23], "characterOffsetBegin": 126, "originalText": "up", "ArgType": null, "before": " "}, {"index": 20, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 131, "segment_span": [14, 23], "characterOffsetBegin": 129, "originalText": "to", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 133, "segment_span": [14, 23], "characterOffsetBegin": 132, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "predetermined", "lemma": "predetermined", "after": " ", "pos": "JJ", "characterOffsetEnd": 147, "segment_span": [14, 23], "characterOffsetBegin": 134, "originalText": "predetermined", "ArgType": null, "before": " "}, {"index": 23, "word": "bound", "lemma": "bind", "after": " ", "pos": "VBN", "characterOffsetEnd": 153, "segment_span": [14, 23], "characterOffsetBegin": 148, "originalText": "bound", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 155, "characterOffsetBegin": 154, "originalText": ".", "ArgType": null, "before": " "}], "text": "To handle such constraints , ( Karttunen 1998 ) has proposed a finite-state approximation that counts constraint violations up to a predetermined bound ."}, {"tokens": [{"index": 1, "word": "Unlike", "lemma": "unlike", "after": " ", "pos": "IN", "characterOffsetEnd": 6, "segment_span": [0, 35], "characterOffsetBegin": 0, "originalText": "Unlike", "ArgType": null, "before": ""}, {"index": 2, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 15, "segment_span": [0, 35], "characterOffsetBegin": 7, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 3, "word": "approaches", "lemma": "approach", "after": "  ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 35], "characterOffsetBegin": 16, "originalText": "approaches", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 29, "segment_span": [0, 35], "characterOffsetBegin": 28, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 5, "word": "Ellison", "lemma": "Ellison", "after": " ", "pos": "NNP", "characterOffsetEnd": 37, "segment_span": [0, 35], "characterOffsetBegin": 30, "originalText": "Ellison", "ArgType": null, "before": " "}, {"index": 6, "word": "1994", "lemma": "1994", "after": "  ", "pos": "CD", "characterOffsetEnd": 42, "segment_span": [0, 35], "characterOffsetBegin": 38, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 45, "segment_span": [0, 35], "characterOffsetBegin": 44, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 8, "word": "Walther", "lemma": "Walther", "after": " ", "pos": "NNP", "characterOffsetEnd": 54, "segment_span": [0, 35], "characterOffsetBegin": 47, "originalText": "Walther", "ArgType": null, "before": "  "}, {"index": 9, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 59, "segment_span": [0, 35], "characterOffsetBegin": 55, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 61, "segment_span": [0, 35], "characterOffsetBegin": 60, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 64, "segment_span": [0, 35], "characterOffsetBegin": 63, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 12, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 75, "segment_span": [0, 35], "characterOffsetBegin": 66, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 77, "segment_span": [0, 35], "characterOffsetBegin": 76, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 81, "segment_span": [0, 35], "characterOffsetBegin": 77, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 82, "segment_span": [0, 35], "characterOffsetBegin": 81, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 85, "segment_span": [0, 35], "characterOffsetBegin": 84, "originalText": "'", "ArgType": null, "before": "  "}, {"index": 17, "word": "s", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 87, "segment_span": [0, 35], "characterOffsetBegin": 86, "originalText": "s", "ArgType": null, "before": " "}, {"index": 18, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [0, 35], "characterOffsetBegin": 88, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 19, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 99, "segment_span": [0, 35], "characterOffsetBegin": 97, "originalText": "is", "ArgType": null, "before": " "}, {"index": 20, "word": "encoded", "is_pass": true, "lemma": "encode", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 107, "segment_span": [0, 35], "tense": "N", "characterOffsetBegin": 100, "originalText": "encoded", "ArgType": null, "before": " "}, {"index": 21, "word": "entirely", "lemma": "entirely", "after": " ", "pos": "RB", "characterOffsetEnd": 116, "segment_span": [0, 35], "characterOffsetBegin": 108, "originalText": "entirely", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 119, "segment_span": [0, 35], "characterOffsetBegin": 117, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 123, "segment_span": [0, 35], "characterOffsetBegin": 120, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [0, 35], "characterOffsetBegin": 124, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 25, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [0, 35], "characterOffsetBegin": 131, "originalText": "state", "ArgType": null, "before": " "}, {"index": 26, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [0, 35], "characterOffsetBegin": 137, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 147, "segment_span": [0, 35], "characterOffsetBegin": 146, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 152, "segment_span": [0, 35], "characterOffsetBegin": 148, "originalText": "with", "ArgType": null, "before": " "}, {"index": 29, "word": "no", "lemma": "no", "after": " ", "pos": "DT", "characterOffsetEnd": 155, "segment_span": [0, 35], "characterOffsetBegin": 153, "originalText": "no", "ArgType": null, "before": " "}, {"index": 30, "word": "extra-logical", "lemma": "extra-logical", "after": " ", "pos": "JJ", "characterOffsetEnd": 169, "segment_span": [0, 35], "characterOffsetBegin": 156, "originalText": "extra-logical", "ArgType": null, "before": " "}, {"index": 31, "word": "procedures", "lemma": "procedure", "after": " ", "pos": "NNS", "characterOffsetEnd": 180, "segment_span": [0, 35], "characterOffsetBegin": 170, "originalText": "procedures", "ArgType": null, "before": " "}, {"index": 32, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 184, "segment_span": [0, 35], "characterOffsetBegin": 181, "originalText": "for", "ArgType": null, "before": " "}, {"index": 33, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 193, "segment_span": [0, 35], "characterOffsetBegin": 185, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 34, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 204, "segment_span": [0, 35], "characterOffsetBegin": 194, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 35, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 215, "segment_span": [0, 35], "characterOffsetBegin": 205, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 217, "characterOffsetBegin": 216, "originalText": ".", "ArgType": null, "before": " "}], "text": "Unlike previous approaches ( Ellison 1994 , Walther 1996 ) , Karttunen ( 0000 ) ' s approach is encoded entirely in the finite state calculus , with no extra-logical procedures for counting constraint violations ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 23, "segment_span": [0, 10], "characterOffsetBegin": 19, "originalText": "will", "ArgType": null, "before": " "}, {"index": 7, "word": "present", "lemma": "present", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 31, "segment_span": [0, 10], "tense": "B", "characterOffsetBegin": 24, "originalText": "present", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 10], "characterOffsetBegin": 32, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 10], "characterOffsetBegin": 34, "originalText": "new", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 38, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 51, "segment_span": [10, 16], "characterOffsetBegin": 47, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 12, "word": "seeks", "lemma": "seek", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 57, "segment_span": [10, 16], "tense": "Z", "characterOffsetBegin": 52, "originalText": "seeks", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 60, "segment_span": [10, 16], "characterOffsetBegin": 58, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "minimize", "lemma": "minimize", "after": " ", "pos": "VB", "characterOffsetEnd": 69, "segment_span": [10, 16], "characterOffsetBegin": 61, "originalText": "minimize", "ArgType": null, "before": " "}, {"index": 15, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [10, 16], "characterOffsetBegin": 70, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 16, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 91, "segment_span": [10, 16], "characterOffsetBegin": 81, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "without", "lemma": "without", "after": " ", "pos": "IN", "characterOffsetEnd": 99, "segment_span": [16, 18], "characterOffsetBegin": 92, "originalText": "without", "ArgType": null, "before": " "}, {"index": 18, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 108, "segment_span": [16, 18], "tense": "G", "characterOffsetBegin": 100, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 110, "characterOffsetBegin": 109, "originalText": ".", "ArgType": null, "before": " "}], "text": "In this paper , we will present a new approach that seeks to minimize constraint violations without counting ."}, {"tokens": [{"index": 1, "word": "Rather", "lemma": "rather", "after": " ", "pos": "RB", "characterOffsetEnd": 6, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "Rather", "ArgType": null, "before": ""}, {"index": 2, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 11, "segment_span": [0, 3], "characterOffsetBegin": 7, "originalText": "than", "ArgType": null, "before": " "}, {"index": 3, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 3], "tense": "G", "characterOffsetBegin": 12, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 22, "segment_span": [3, 20], "characterOffsetBegin": 21, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 26, "segment_span": [3, 20], "characterOffsetBegin": 23, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [3, 20], "characterOffsetBegin": 27, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 7, "word": "employs", "lemma": "employ", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 43, "segment_span": [3, 20], "tense": "Z", "characterOffsetBegin": 36, "originalText": "employs", "ArgType": "verb", "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [3, 20], "characterOffsetBegin": 44, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [3, 20], "characterOffsetBegin": 46, "originalText": "filter", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 58, "segment_span": [3, 20], "characterOffsetBegin": 53, "originalText": "based", "ArgType": null, "before": " "}, {"index": 11, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [3, 20], "characterOffsetBegin": 59, "originalText": "on", "ArgType": null, "before": " "}, {"index": 12, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 70, "segment_span": [3, 20], "characterOffsetBegin": 62, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 13, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [3, 20], "characterOffsetBegin": 71, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 14, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 92, "segment_span": [3, 20], "characterOffsetBegin": 82, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 15, "word": "against", "lemma": "against", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [3, 20], "characterOffsetBegin": 93, "originalText": "against", "ArgType": null, "before": " "}, {"index": 16, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 111, "segment_span": [3, 20], "characterOffsetBegin": 101, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 114, "segment_span": [3, 20], "characterOffsetBegin": 112, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "alternatively", "lemma": "alternatively", "after": " ", "pos": "RB", "characterOffsetEnd": 128, "segment_span": [3, 20], "characterOffsetBegin": 115, "originalText": "alternatively", "ArgType": null, "before": " "}, {"index": 19, "word": "derivable", "lemma": "derivable", "after": " ", "pos": "JJ", "characterOffsetEnd": 138, "segment_span": [3, 20], "characterOffsetBegin": 129, "originalText": "derivable", "ArgType": null, "before": " "}, {"index": 20, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 146, "segment_span": [3, 20], "characterOffsetBegin": 139, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 148, "characterOffsetBegin": 147, "originalText": ".", "ArgType": null, "before": " "}], "text": "Rather than counting , our approach employs a filter based on matching constraint violations against violations in alternatively derivable strings ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 21], "characterOffsetBegin": 3, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 16, "segment_span": [0, 21], "characterOffsetBegin": 7, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 18, "segment_span": [0, 21], "characterOffsetBegin": 17, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 22, "segment_span": [0, 21], "characterOffsetBegin": 18, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 23, "segment_span": [0, 21], "characterOffsetBegin": 22, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 26, "segment_span": [0, 21], "characterOffsetBegin": 25, "originalText": "'", "ArgType": null, "before": "  "}, {"index": 8, "word": "s", "lemma": "s", "after": " ", "pos": "NNS", "characterOffsetEnd": 28, "segment_span": [0, 21], "characterOffsetBegin": 27, "originalText": "s", "ArgType": null, "before": " "}, {"index": 9, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 37, "segment_span": [0, 21], "characterOffsetBegin": 29, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 21], "characterOffsetBegin": 38, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 48, "segment_span": [0, 21], "characterOffsetBegin": 47, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 52, "segment_span": [0, 21], "characterOffsetBegin": 49, "originalText": "our", "ArgType": null, "before": " "}, {"index": 13, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 21], "characterOffsetBegin": 53, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 14, "word": "uses", "lemma": "use", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 66, "segment_span": [0, 21], "tense": "Z", "characterOffsetBegin": 62, "originalText": "uses", "ArgType": "verb", "before": " "}, {"index": 15, "word": "purely", "lemma": "purely", "after": " ", "pos": "RB", "characterOffsetEnd": 73, "segment_span": [0, 21], "characterOffsetBegin": 67, "originalText": "purely", "ArgType": null, "before": " "}, {"index": 16, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [0, 21], "characterOffsetBegin": 74, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 17, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 21], "characterOffsetBegin": 81, "originalText": "state", "ArgType": null, "before": " "}, {"index": 18, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 94, "segment_span": [0, 21], "characterOffsetBegin": 87, "originalText": "methods", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "without", "lemma": "without", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 21], "characterOffsetBegin": 95, "originalText": "without", "ArgType": null, "before": " "}, {"index": 20, "word": "extra-logical", "lemma": "extra-logical", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [0, 21], "characterOffsetBegin": 103, "originalText": "extra-logical", "ArgType": null, "before": " "}, {"index": 21, "word": "procedures", "lemma": "procedure", "after": " ", "pos": "NNS", "characterOffsetEnd": 127, "segment_span": [0, 21], "characterOffsetBegin": 117, "originalText": "procedures", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": " "}], "text": "As in Karttunen ( 0000 ) ' s counting approach , our approach uses purely finite state methods without extra-logical procedures ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "show", "lemma": "show", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 2], "tense": "P", "characterOffsetBegin": 3, "originalText": "show", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [2, 22], "characterOffsetBegin": 8, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 16, "segment_span": [2, 22], "characterOffsetBegin": 13, "originalText": "our", "ArgType": null, "before": " "}, {"index": 5, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 25, "segment_span": [2, 22], "characterOffsetBegin": 17, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [2, 22], "characterOffsetBegin": 26, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 37, "segment_span": [2, 22], "characterOffsetBegin": 35, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "superior", "lemma": "superior", "after": " ", "pos": "JJ", "characterOffsetEnd": 46, "segment_span": [2, 22], "characterOffsetBegin": 38, "originalText": "superior", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 49, "segment_span": [2, 22], "characterOffsetBegin": 47, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 53, "segment_span": [2, 22], "characterOffsetBegin": 50, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 62, "segment_span": [2, 22], "characterOffsetBegin": 54, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 12, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [2, 22], "characterOffsetBegin": 63, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [2, 22], "characterOffsetBegin": 72, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 80, "segment_span": [2, 22], "characterOffsetBegin": 76, "originalText": "both", "ArgType": null, "before": " "}, {"index": 15, "word": "size", "lemma": "size", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [2, 22], "characterOffsetBegin": 81, "originalText": "size", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [2, 22], "characterOffsetBegin": 86, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 98, "segment_span": [2, 22], "characterOffsetBegin": 89, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 18, "word": "automata", "lemma": "automata", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [2, 22], "characterOffsetBegin": 99, "originalText": "automata", "ArgType": null, "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 111, "segment_span": [2, 22], "characterOffsetBegin": 108, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "closeness", "lemma": "closeness", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [2, 22], "characterOffsetBegin": 112, "originalText": "closeness", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [2, 22], "characterOffsetBegin": 122, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "approximation", "lemma": "approximation", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [2, 22], "characterOffsetBegin": 125, "originalText": "approximation", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 140, "characterOffsetBegin": 139, "originalText": ".", "ArgType": null, "before": " "}], "text": "We show that our matching approach is superior to the counting approach for both size of resulting automata and closeness of approximation ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 11], "characterOffsetBegin": 13, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 4, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 25, "segment_span": [0, 11], "characterOffsetBegin": 22, "originalText": "can", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [0, 11], "characterOffsetBegin": 26, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "fact", "lemma": "fact", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 11], "characterOffsetBegin": 29, "originalText": "fact", "ArgType": null, "before": " "}, {"index": 7, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 41, "segment_span": [0, 11], "characterOffsetBegin": 34, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 8, "word": "model", "lemma": "model", "after": " ", "pos": "JJ", "characterOffsetEnd": 47, "segment_span": [0, 11], "characterOffsetBegin": 42, "originalText": "model", "ArgType": null, "before": " "}, {"index": 9, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 48, "originalText": "many", "ArgType": null, "before": " "}, {"index": 10, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 11, "word": "analyses", "lemma": "analysis", "after": " ", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 11], "characterOffsetBegin": 56, "originalText": "analyses", "ArgType": null, "before": " "}, {"index": 12, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 70, "segment_span": [11, 32], "characterOffsetBegin": 65, "originalText": "where", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [11, 32], "characterOffsetBegin": 71, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 83, "segment_span": [11, 32], "characterOffsetBegin": 75, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 15, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [11, 32], "characterOffsetBegin": 84, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 16, "word": "yields", "lemma": "yield", "after": " ", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [11, 32], "characterOffsetBegin": 93, "originalText": "yields", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 104, "segment_span": [11, 32], "characterOffsetBegin": 100, "originalText": "only", "ArgType": null, "before": " "}, {"index": 18, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 107, "segment_span": [11, 32], "characterOffsetBegin": 105, "originalText": "an", "ArgType": null, "before": " "}, {"index": 19, "word": "approximation", "lemma": "approximation", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [11, 32], "characterOffsetBegin": 108, "originalText": "approximation", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 123, "segment_span": [11, 32], "characterOffsetBegin": 122, "originalText": ";", "ArgType": null, "before": " "}, {"index": 21, "word": "yet", "lemma": "yet", "after": " ", "pos": "RB", "characterOffsetEnd": 127, "segment_span": [11, 32], "characterOffsetBegin": 124, "originalText": "yet", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 129, "segment_span": [11, 32], "characterOffsetBegin": 128, "originalText": ",", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 133, "segment_span": [11, 32], "characterOffsetBegin": 130, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "size", "lemma": "size", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [11, 32], "characterOffsetBegin": 134, "originalText": "size", "ArgType": "subj", "before": " "}, {"index": 25, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [11, 32], "characterOffsetBegin": 139, "originalText": "of", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 145, "segment_span": [11, 32], "characterOffsetBegin": 142, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 155, "segment_span": [11, 32], "characterOffsetBegin": 146, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 28, "word": "automaton", "lemma": "automaton", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [11, 32], "characterOffsetBegin": 156, "originalText": "automaton", "ArgType": null, "before": " "}, {"index": 29, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 168, "segment_span": [11, 32], "characterOffsetBegin": 166, "originalText": "is", "ArgType": null, "before": " "}, {"index": 30, "word": "typically", "lemma": "typically", "after": " ", "pos": "RB", "characterOffsetEnd": 178, "segment_span": [11, 32], "characterOffsetBegin": 169, "originalText": "typically", "ArgType": null, "before": " "}, {"index": 31, "word": "much", "lemma": "much", "after": " ", "pos": "RB", "characterOffsetEnd": 183, "segment_span": [11, 32], "characterOffsetBegin": 179, "originalText": "much", "ArgType": null, "before": " "}, {"index": 32, "word": "smaller", "lemma": "smaller", "after": " ", "pos": "JJR", "characterOffsetEnd": 191, "segment_span": [11, 32], "characterOffsetBegin": 184, "originalText": "smaller", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 193, "characterOffsetBegin": 192, "originalText": ".", "ArgType": null, "before": " "}], "text": "The matching approach can in fact exactly model many OT analyses where the counting approach yields only an approximation ; yet , the size of the resulting automaton is typically much smaller ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 16, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 21, "segment_span": [0, 10], "characterOffsetBegin": 17, "originalText": "will", "ArgType": null, "before": " "}, {"index": 6, "word": "illustrate", "lemma": "illustrate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 32, "segment_span": [0, 10], "tense": "B", "characterOffsetBegin": 22, "originalText": "illustrate", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [0, 10], "characterOffsetBegin": 33, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [0, 10], "characterOffsetBegin": 37, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 9, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 10], "characterOffsetBegin": 46, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 58, "segment_span": [0, 10], "characterOffsetBegin": 55, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "compare", "lemma": "compare", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 66, "segment_span": [10, 64], "tense": "B", "characterOffsetBegin": 59, "originalText": "compare", "ArgType": null, "before": " "}, {"index": 12, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 69, "segment_span": [10, 64], "characterOffsetBegin": 67, "originalText": "it", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 74, "segment_span": [10, 64], "characterOffsetBegin": 70, "originalText": "with", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [10, 64], "characterOffsetBegin": 75, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 87, "segment_span": [10, 64], "characterOffsetBegin": 79, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 16, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [10, 64], "characterOffsetBegin": 88, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 17, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 99, "segment_span": [10, 64], "characterOffsetBegin": 97, "originalText": "on", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 103, "segment_span": [10, 64], "characterOffsetBegin": 100, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "basis", "lemma": "basis", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [10, 64], "characterOffsetBegin": 104, "originalText": "basis", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 112, "segment_span": [10, 64], "characterOffsetBegin": 110, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": "  ", "pos": "DT", "characterOffsetEnd": 116, "segment_span": [10, 64], "characterOffsetBegin": 113, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 124, "segment_span": [10, 64], "characterOffsetBegin": 118, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 126, "segment_span": [10, 64], "characterOffsetBegin": 125, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 130, "segment_span": [10, 64], "characterOffsetBegin": 126, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 131, "segment_span": [10, 64], "characterOffsetBegin": 130, "originalText": ")", "ArgType": null, "before": ""}, {"index": 26, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 134, "segment_span": [10, 64], "characterOffsetBegin": 133, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 27, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 145, "segment_span": [10, 64], "characterOffsetBegin": 136, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 147, "segment_span": [10, 64], "characterOffsetBegin": 146, "originalText": "(", "ArgType": null, "before": " "}, {"index": 29, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 151, "segment_span": [10, 64], "characterOffsetBegin": 147, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 152, "segment_span": [10, 64], "characterOffsetBegin": 151, "originalText": ")", "ArgType": null, "before": ""}, {"index": 31, "word": "syllable", "lemma": "syllable", "after": " ", "pos": "JJ", "characterOffsetEnd": 162, "segment_span": [10, 64], "characterOffsetBegin": 154, "originalText": "syllable", "ArgType": null, "before": "  "}, {"index": 32, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [10, 64], "characterOffsetBegin": 163, "originalText": "structure", "ArgType": null, "before": " "}, {"index": 33, "word": "example", "lemma": "example", "after": "  ", "pos": "NN", "characterOffsetEnd": 180, "segment_span": [10, 64], "characterOffsetBegin": 173, "originalText": "example", "ArgType": "dobj", "before": " "}, {"index": 34, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 183, "segment_span": [10, 64], "characterOffsetBegin": 182, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 35, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 190, "segment_span": [10, 64], "characterOffsetBegin": 184, "originalText": "Prince", "ArgType": null, "before": " "}, {"index": 36, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 193, "segment_span": [10, 64], "characterOffsetBegin": 191, "originalText": "et", "ArgType": null, "before": " "}, {"index": 37, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 197, "segment_span": [10, 64], "characterOffsetBegin": 194, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 38, "word": "1993", "lemma": "1993", "after": "  ", "pos": "CD", "characterOffsetEnd": 202, "segment_span": [10, 64], "characterOffsetBegin": 198, "originalText": "1993", "ArgType": null, "before": " "}, {"index": 39, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 205, "segment_span": [10, 64], "characterOffsetBegin": 204, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 40, "word": "Ellison", "lemma": "Ellison", "after": " ", "pos": "NNP", "characterOffsetEnd": 214, "segment_span": [10, 64], "characterOffsetBegin": 207, "originalText": "Ellison", "ArgType": null, "before": "  "}, {"index": 41, "word": "1994", "lemma": "1994", "after": "  ", "pos": "CD", "characterOffsetEnd": 219, "segment_span": [10, 64], "characterOffsetBegin": 215, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 42, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 222, "segment_span": [10, 64], "characterOffsetBegin": 221, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 43, "word": "Tesar", "lemma": "Tesar", "after": " ", "pos": "NNP", "characterOffsetEnd": 229, "segment_span": [10, 64], "characterOffsetBegin": 224, "originalText": "Tesar", "ArgType": null, "before": "  "}, {"index": 44, "word": "1995", "lemma": "1995", "after": " ", "pos": "CD", "characterOffsetEnd": 234, "segment_span": [10, 64], "characterOffsetBegin": 230, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 45, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 236, "segment_span": [10, 64], "characterOffsetBegin": 235, "originalText": ")", "ArgType": null, "before": " "}, {"index": 46, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 239, "segment_span": [10, 64], "characterOffsetBegin": 238, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 47, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 243, "segment_span": [10, 64], "characterOffsetBegin": 240, "originalText": "for", "ArgType": null, "before": " "}, {"index": 48, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 248, "segment_span": [10, 64], "characterOffsetBegin": 244, "originalText": "each", "ArgType": null, "before": " "}, {"index": 49, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 251, "segment_span": [10, 64], "characterOffsetBegin": 249, "originalText": "of", "ArgType": null, "before": " "}, {"index": 50, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 255, "segment_span": [10, 64], "characterOffsetBegin": 252, "originalText": "the", "ArgType": null, "before": " "}, {"index": 51, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 265, "segment_span": [10, 64], "characterOffsetBegin": 256, "originalText": "different", "ArgType": null, "before": " "}, {"index": 52, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 276, "segment_span": [10, 64], "characterOffsetBegin": 266, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 53, "word": "orderings", "lemma": "ordering", "after": " ", "pos": "NNS", "characterOffsetEnd": 286, "segment_span": [10, 64], "characterOffsetBegin": 277, "originalText": "orderings", "ArgType": null, "before": " "}, {"index": 54, "word": "identified", "lemma": "identify", "after": " ", "pos": "VBN", "characterOffsetEnd": 297, "segment_span": [10, 64], "characterOffsetBegin": 287, "originalText": "identified", "ArgType": null, "before": " "}, {"index": 55, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 300, "segment_span": [10, 64], "characterOffsetBegin": 298, "originalText": "in", "ArgType": null, "before": " "}, {"index": 56, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 308, "segment_span": [10, 64], "characterOffsetBegin": 302, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 57, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 310, "segment_span": [10, 64], "characterOffsetBegin": 309, "originalText": "(", "ArgType": null, "before": " "}, {"index": 58, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 314, "segment_span": [10, 64], "characterOffsetBegin": 310, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 59, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 315, "segment_span": [10, 64], "characterOffsetBegin": 314, "originalText": ")", "ArgType": null, "before": ""}, {"index": 60, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 318, "segment_span": [10, 64], "characterOffsetBegin": 317, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 61, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 329, "segment_span": [10, 64], "characterOffsetBegin": 320, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 62, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 331, "segment_span": [10, 64], "characterOffsetBegin": 330, "originalText": "(", "ArgType": null, "before": " "}, {"index": 63, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 335, "segment_span": [10, 64], "characterOffsetBegin": 331, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 64, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 336, "segment_span": [10, 64], "characterOffsetBegin": 335, "originalText": ")", "ArgType": null, "before": ""}, {"index": 65, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 339, "characterOffsetBegin": 338, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In this paper we will illustrate the matching approach and compare it with the counting approach on the basis of the Prince ( 0000 ) & Smolensky ( 0000 ) syllable structure example ( Prince et al. 1993 , Ellison 1994 , Tesar 1995 ) , for each of the different constraint orderings identified in Prince ( 0000 ) & Smolensky ( 0000 ) ."}]}], "title": "Introduction"}, {"num": 1, "subsections": [{"title": "", "num": 0, "sentences": []}, {"title": "Finite State Calculus", "num": 1, "sentences": [{"tokens": [{"index": 1, "word": "Finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 6, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "Finite", "ArgType": null, "before": ""}, {"index": 2, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 15], "characterOffsetBegin": 7, "originalText": "state", "ArgType": null, "before": " "}, {"index": 3, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 23, "segment_span": [0, 15], "characterOffsetBegin": 13, "originalText": "approaches", "ArgType": "subj", "before": " "}, {"index": 4, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 28, "segment_span": [0, 15], "characterOffsetBegin": 24, "originalText": "have", "ArgType": null, "before": " "}, {"index": 5, "word": "proven", "lemma": "prove", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 35, "segment_span": [0, 15], "tense": "N", "characterOffsetBegin": 29, "originalText": "proven", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 38, "segment_span": [0, 15], "characterOffsetBegin": 36, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 41, "segment_span": [0, 15], "characterOffsetBegin": 39, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "very", "lemma": "very", "after": " ", "pos": "RB", "characterOffsetEnd": 46, "segment_span": [0, 15], "characterOffsetBegin": 42, "originalText": "very", "ArgType": null, "before": " "}, {"index": 9, "word": "successful", "lemma": "successful", "after": " ", "pos": "JJ", "characterOffsetEnd": 57, "segment_span": [0, 15], "characterOffsetBegin": 47, "originalText": "successful", "ArgType": null, "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [0, 15], "characterOffsetBegin": 58, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "efficient", "lemma": "efficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [0, 15], "characterOffsetBegin": 62, "originalText": "efficient", "ArgType": null, "before": " "}, {"index": 12, "word": "encoding", "lemma": "encoding", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 15], "characterOffsetBegin": 72, "originalText": "encoding", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [0, 15], "characterOffsetBegin": 81, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "phonological", "lemma": "phonological", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [0, 15], "characterOffsetBegin": 84, "originalText": "phonological", "ArgType": null, "before": " "}, {"index": 15, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 102, "segment_span": [0, 15], "characterOffsetBegin": 97, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 104, "characterOffsetBegin": 103, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finite state approaches have proven to be very successful for efficient encoding of phonological rules ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "particular", "lemma": "particular", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 26], "characterOffsetBegin": 3, "originalText": "particular", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 26], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 26], "characterOffsetBegin": 16, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 26], "characterOffsetBegin": 20, "originalText": "work", "ArgType": "subj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 26], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 30, "segment_span": [0, 26], "characterOffsetBegin": 29, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 8, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 37, "segment_span": [0, 26], "characterOffsetBegin": 31, "originalText": "Kaplan", "ArgType": null, "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 41, "segment_span": [0, 26], "characterOffsetBegin": 38, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 45, "segment_span": [0, 26], "characterOffsetBegin": 42, "originalText": "Kay", "ArgType": null, "before": " "}, {"index": 11, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 50, "segment_span": [0, 26], "characterOffsetBegin": 46, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 52, "segment_span": [0, 26], "characterOffsetBegin": 51, "originalText": ")", "ArgType": null, "before": " "}, {"index": 13, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 57, "segment_span": [0, 26], "characterOffsetBegin": 54, "originalText": "has", "ArgType": null, "before": "  "}, {"index": 14, "word": "provided", "lemma": "provide", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 66, "segment_span": [0, 26], "tense": "N", "characterOffsetBegin": 58, "originalText": "provided", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 68, "segment_span": [0, 26], "characterOffsetBegin": 67, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "compiler", "lemma": "compiler", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [0, 26], "characterOffsetBegin": 69, "originalText": "compiler", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [0, 26], "characterOffsetBegin": 78, "originalText": "from", "ArgType": null, "before": " "}, {"index": 18, "word": "classical", "lemma": "classical", "after": " ", "pos": "JJ", "characterOffsetEnd": 92, "segment_span": [0, 26], "characterOffsetBegin": 83, "originalText": "classical", "ArgType": null, "before": " "}, {"index": 19, "word": "generative", "lemma": "generative", "after": " ", "pos": "JJ", "characterOffsetEnd": 103, "segment_span": [0, 26], "characterOffsetBegin": 93, "originalText": "generative", "ArgType": null, "before": " "}, {"index": 20, "word": "phonology", "lemma": "phonology", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [0, 26], "characterOffsetBegin": 104, "originalText": "phonology", "ArgType": null, "before": " "}, {"index": 21, "word": "rewriting", "lemma": "rewrite", "after": " ", "pos": "VBG", "characterOffsetEnd": 123, "segment_span": [0, 26], "characterOffsetBegin": 114, "originalText": "rewriting", "ArgType": null, "before": " "}, {"index": 22, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 129, "segment_span": [0, 26], "characterOffsetBegin": 124, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 132, "segment_span": [0, 26], "characterOffsetBegin": 130, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 139, "segment_span": [0, 26], "characterOffsetBegin": 133, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 25, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [0, 26], "characterOffsetBegin": 140, "originalText": "state", "ArgType": null, "before": " "}, {"index": 26, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 157, "segment_span": [0, 26], "characterOffsetBegin": 146, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 159, "characterOffsetBegin": 158, "originalText": ".", "ArgType": null, "before": " "}], "text": "In particular , the work of ( Kaplan and Kay 1994 ) has provided a compiler from classical generative phonology rewriting rules to finite state transducers ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 5], "characterOffsetBegin": 5, "originalText": "work", "ArgType": "subj", "before": " "}, {"index": 3, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 13, "segment_span": [0, 5], "characterOffsetBegin": 10, "originalText": "has", "ArgType": null, "before": " "}, {"index": 4, "word": "clearly", "lemma": "clearly", "after": " ", "pos": "RB", "characterOffsetEnd": 21, "segment_span": [0, 5], "characterOffsetBegin": 14, "originalText": "clearly", "ArgType": null, "before": " "}, {"index": 5, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 27, "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 22, "originalText": "shown", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "how", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 31, "segment_span": [5, 18], "characterOffsetBegin": 28, "originalText": "how", "ArgType": null, "before": " "}, {"index": 7, "word": "apparently", "lemma": "apparently", "after": " ", "pos": "RB", "characterOffsetEnd": 42, "segment_span": [5, 18], "characterOffsetBegin": 32, "originalText": "apparently", "ArgType": null, "before": " "}, {"index": 8, "word": "procedural", "lemma": "procedural", "after": " ", "pos": "JJ", "characterOffsetEnd": 53, "segment_span": [5, 18], "characterOffsetBegin": 43, "originalText": "procedural", "ArgType": null, "before": " "}, {"index": 9, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [5, 18], "characterOffsetBegin": 54, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 10, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 63, "segment_span": [5, 18], "characterOffsetBegin": 60, "originalText": "can", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 66, "segment_span": [5, 18], "characterOffsetBegin": 64, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "recast", "is_pass": true, "lemma": "recast", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 73, "segment_span": [5, 18], "tense": "N", "characterOffsetBegin": 67, "originalText": "recast", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [5, 18], "characterOffsetBegin": 74, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [5, 18], "characterOffsetBegin": 77, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "declarative", "lemma": "declarative", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [5, 18], "characterOffsetBegin": 79, "originalText": "declarative", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 92, "segment_span": [5, 18], "characterOffsetBegin": 91, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "reversible", "lemma": "reversible", "after": " ", "pos": "JJ", "characterOffsetEnd": 103, "segment_span": [5, 18], "characterOffsetBegin": 93, "originalText": "reversible", "ArgType": null, "before": " "}, {"index": 18, "word": "framework", "lemma": "framework", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [5, 18], "characterOffsetBegin": 104, "originalText": "framework", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 115, "characterOffsetBegin": 114, "originalText": ".", "ArgType": null, "before": " "}], "text": "This work has clearly shown how apparently procedural rules can be recast in a declarative , reversible framework ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 25], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 25], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "process", "lemma": "process", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 25], "characterOffsetBegin": 7, "originalText": "process", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [0, 25], "characterOffsetBegin": 15, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "developing", "lemma": "develop", "after": " ", "pos": "VBG", "characterOffsetEnd": 28, "segment_span": [0, 25], "characterOffsetBegin": 18, "originalText": "developing", "ArgType": null, "before": " "}, {"index": 6, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 34, "segment_span": [0, 25], "characterOffsetBegin": 29, "originalText": "their", "ArgType": null, "before": " "}, {"index": 7, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 25], "characterOffsetBegin": 35, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 8, "word": "compiler", "lemma": "compiler", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 25], "characterOffsetBegin": 40, "originalText": "compiler", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 50, "segment_span": [0, 25], "characterOffsetBegin": 49, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 58, "segment_span": [0, 25], "characterOffsetBegin": 52, "originalText": "Kaplan", "ArgType": "subj", "before": "  "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 60, "segment_span": [0, 25], "characterOffsetBegin": 59, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 64, "segment_span": [0, 25], "characterOffsetBegin": 60, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 65, "segment_span": [0, 25], "characterOffsetBegin": 64, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 68, "segment_span": [0, 25], "characterOffsetBegin": 67, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 15, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 73, "segment_span": [0, 25], "characterOffsetBegin": 70, "originalText": "Kay", "ArgType": null, "before": "  "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 75, "segment_span": [0, 25], "characterOffsetBegin": 74, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 79, "segment_span": [0, 25], "characterOffsetBegin": 75, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 80, "segment_span": [0, 25], "characterOffsetBegin": 79, "originalText": ")", "ArgType": null, "before": ""}, {"index": 19, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 86, "segment_span": [0, 25], "characterOffsetBegin": 82, "originalText": "also", "ArgType": null, "before": "  "}, {"index": 20, "word": "developed", "lemma": "develop", "after": " ", "pos": "VBD", "is_root": true, "characterOffsetEnd": 96, "segment_span": [0, 25], "tense": "D", "characterOffsetBegin": 87, "originalText": "developed", "ArgType": "verb", "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [0, 25], "characterOffsetBegin": 97, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "high-level", "lemma": "high-level", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [0, 25], "characterOffsetBegin": 99, "originalText": "high-level", "ArgType": null, "before": " "}, {"index": 23, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [0, 25], "characterOffsetBegin": 110, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 24, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [0, 25], "characterOffsetBegin": 117, "originalText": "state", "ArgType": null, "before": " "}, {"index": 25, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [0, 25], "characterOffsetBegin": 123, "originalText": "calculus", "ArgType": "dobj", "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 133, "characterOffsetBegin": 132, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the process of developing their rule compiler , Kaplan ( 0000 ) & Kay ( 0000 ) also developed a high-level finite state calculus ."}, {"tokens": [{"index": 1, "word": "They", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 4, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "They", "ArgType": "subj", "before": ""}, {"index": 2, "word": "argue", "lemma": "argue", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 10, "segment_span": [0, 3], "tense": "P", "characterOffsetBegin": 5, "originalText": "argue", "ArgType": "verb", "before": " "}, {"index": 3, "word": "convincingly", "lemma": "convincingly", "after": " ", "pos": "RB", "characterOffsetEnd": 23, "segment_span": [0, 3], "characterOffsetBegin": 11, "originalText": "convincingly", "ArgType": null, "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [3, 17], "characterOffsetBegin": 24, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [3, 17], "characterOffsetBegin": 29, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [3, 17], "characterOffsetBegin": 34, "originalText": "calculus", "ArgType": "subj", "before": " "}, {"index": 7, "word": "provides", "lemma": "provide", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 51, "segment_span": [3, 17], "tense": "Z", "characterOffsetBegin": 43, "originalText": "provides", "ArgType": null, "before": " "}, {"index": 8, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [3, 17], "characterOffsetBegin": 52, "originalText": "an", "ArgType": null, "before": " "}, {"index": 9, "word": "appropriate", "lemma": "appropriate", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [3, 17], "characterOffsetBegin": 55, "originalText": "appropriate", "ArgType": null, "before": " "}, {"index": 10, "word": "high-level", "lemma": "high-level", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [3, 17], "characterOffsetBegin": 67, "originalText": "high-level", "ArgType": null, "before": " "}, {"index": 11, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [3, 17], "characterOffsetBegin": 78, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 90, "segment_span": [3, 17], "characterOffsetBegin": 87, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "expressing", "lemma": "express", "after": " ", "pos": "VBG", "characterOffsetEnd": 101, "segment_span": [3, 17], "characterOffsetBegin": 91, "originalText": "expressing", "ArgType": null, "before": " "}, {"index": 14, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [3, 17], "characterOffsetBegin": 102, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 15, "word": "languages", "lemma": "language", "after": " ", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [3, 17], "characterOffsetBegin": 110, "originalText": "languages", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 123, "segment_span": [3, 17], "characterOffsetBegin": 120, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 133, "segment_span": [3, 17], "characterOffsetBegin": 124, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 135, "characterOffsetBegin": 134, "originalText": ".", "ArgType": null, "before": " "}], "text": "They argue convincingly that this calculus provides an appropriate high-level approach for expressing regular languages and relations ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 18], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 15, "segment_span": [0, 18], "characterOffsetBegin": 4, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 3, "word": "conception", "lemma": "conception", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 18], "characterOffsetBegin": 16, "originalText": "conception", "ArgType": "subj", "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 18], "characterOffsetBegin": 27, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "term", "lemma": "term", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 18], "characterOffsetBegin": 30, "originalText": "term", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [0, 18], "characterOffsetBegin": 35, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 44, "segment_span": [0, 18], "characterOffsetBegin": 38, "originalText": "states", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 48, "segment_span": [0, 18], "characterOffsetBegin": 45, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "transitions", "lemma": "transition", "after": " ", "pos": "NNS", "characterOffsetEnd": 60, "segment_span": [0, 18], "characterOffsetBegin": 49, "originalText": "transitions", "ArgType": null, "before": " "}, {"index": 10, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 64, "segment_span": [0, 18], "characterOffsetBegin": 61, "originalText": "can", "ArgType": null, "before": " "}, {"index": 11, "word": "become", "lemma": "become", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 71, "segment_span": [0, 18], "tense": "B", "characterOffsetBegin": 65, "originalText": "become", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 12, "word": "unwieldy", "lemma": "unwieldy", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [0, 18], "characterOffsetBegin": 72, "originalText": "unwieldy", "ArgType": null, "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [0, 18], "characterOffsetBegin": 81, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [0, 18], "characterOffsetBegin": 85, "originalText": "all", "ArgType": null, "before": " "}, {"index": 15, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 92, "segment_span": [0, 18], "characterOffsetBegin": 89, "originalText": "but", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 96, "segment_span": [0, 18], "characterOffsetBegin": 93, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "simplest", "lemma": "simplest", "after": " ", "pos": "JJS", "characterOffsetEnd": 105, "segment_span": [0, 18], "characterOffsetBegin": 97, "originalText": "simplest", "ArgType": null, "before": " "}, {"index": 18, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 111, "segment_span": [0, 18], "characterOffsetBegin": 106, "originalText": "cases", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 113, "characterOffsetBegin": 112, "originalText": ".", "ArgType": null, "before": " "}], "text": "The alternative conception in term of states and transitions can become unwieldy for all but the simplest cases ."}, {"tokens": [{"index": 1, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 6, "segment_span": [0, 34], "characterOffsetBegin": 0, "originalText": "Kaplan", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 8, "segment_span": [0, 34], "characterOffsetBegin": 7, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 12, "segment_span": [0, 34], "characterOffsetBegin": 8, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 13, "segment_span": [0, 34], "characterOffsetBegin": 12, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 16, "segment_span": [0, 34], "characterOffsetBegin": 15, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 6, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 34], "characterOffsetBegin": 18, "originalText": "Kay", "ArgType": null, "before": "  "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 23, "segment_span": [0, 34], "characterOffsetBegin": 22, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 27, "segment_span": [0, 34], "characterOffsetBegin": 23, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 28, "segment_span": [0, 34], "characterOffsetBegin": 27, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 31, "segment_span": [0, 34], "characterOffsetBegin": 30, "originalText": "'", "ArgType": null, "before": "  "}, {"index": 11, "word": "s", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 33, "segment_span": [0, 34], "characterOffsetBegin": 32, "originalText": "s", "ArgType": null, "before": " "}, {"index": 12, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 34], "characterOffsetBegin": 34, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 13, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 34], "characterOffsetBegin": 41, "originalText": "state", "ArgType": null, "before": " "}, {"index": 14, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 34], "characterOffsetBegin": 47, "originalText": "calculus", "ArgType": "subj", "before": " "}, {"index": 15, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 59, "segment_span": [0, 34], "characterOffsetBegin": 56, "originalText": "now", "ArgType": null, "before": " "}, {"index": 16, "word": "exists", "lemma": "exist", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 66, "segment_span": [0, 34], "tense": "Z", "characterOffsetBegin": 60, "originalText": "exists", "ArgType": "verb", "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [0, 34], "characterOffsetBegin": 67, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [0, 34], "characterOffsetBegin": 70, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 19, "word": "implementations", "lemma": "implementation", "after": " ", "pos": "NNS", "characterOffsetEnd": 94, "segment_span": [0, 34], "characterOffsetBegin": 79, "originalText": "implementations", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 96, "segment_span": [0, 34], "characterOffsetBegin": 95, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [0, 34], "characterOffsetBegin": 97, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "most", "lemma": "most", "after": " ", "pos": "RBS", "characterOffsetEnd": 105, "segment_span": [0, 34], "characterOffsetBegin": 101, "originalText": "most", "ArgType": null, "before": " "}, {"index": 23, "word": "well-known", "lemma": "well-known", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [0, 34], "characterOffsetBegin": 106, "originalText": "well-known", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 119, "segment_span": [0, 34], "characterOffsetBegin": 117, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 125, "segment_span": [0, 34], "characterOffsetBegin": 120, "originalText": "which", "ArgType": null, "before": " "}, {"index": 26, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 128, "segment_span": [0, 34], "characterOffsetBegin": 126, "originalText": "is", "ArgType": null, "before": " "}, {"index": 27, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 133, "segment_span": [0, 34], "characterOffsetBegin": 129, "originalText": "that", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [0, 34], "characterOffsetBegin": 134, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 139, "segment_span": [0, 34], "characterOffsetBegin": 138, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 30, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 149, "segment_span": [0, 34], "characterOffsetBegin": 140, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 31, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 152, "segment_span": [0, 34], "characterOffsetBegin": 150, "originalText": "et", "ArgType": null, "before": " "}, {"index": 32, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 156, "segment_span": [0, 34], "characterOffsetBegin": 153, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 33, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 161, "segment_span": [0, 34], "characterOffsetBegin": 157, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 34, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 163, "segment_span": [0, 34], "characterOffsetBegin": 162, "originalText": ")", "ArgType": null, "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 166, "characterOffsetBegin": 165, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Kaplan ( 0000 ) & Kay ( 0000 ) ' s finite state calculus now exists in multiple implementations , the most well-known of which is that of ( Karttunen et al. 1996 ) ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 31], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 31], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 31], "characterOffsetBegin": 8, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 31], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 23, "segment_span": [0, 31], "characterOffsetBegin": 16, "originalText": "however", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 25, "segment_span": [0, 31], "characterOffsetBegin": 24, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 28, "segment_span": [0, 31], "characterOffsetBegin": 26, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 33, "segment_span": [0, 31], "characterOffsetBegin": 29, "originalText": "will", "ArgType": null, "before": " "}, {"index": 9, "word": "use", "lemma": "use", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 37, "segment_span": [0, 31], "tense": "B", "characterOffsetBegin": 34, "originalText": "use", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 41, "segment_span": [0, 31], "characterOffsetBegin": 38, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 53, "segment_span": [0, 31], "characterOffsetBegin": 42, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 12, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 31], "characterOffsetBegin": 54, "originalText": "implementation", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "provided", "lemma": "provide", "after": " ", "pos": "VBN", "characterOffsetEnd": 77, "segment_span": [0, 31], "characterOffsetBegin": 69, "originalText": "provided", "ArgType": null, "before": " "}, {"index": 14, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [0, 31], "characterOffsetBegin": 78, "originalText": "by", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 84, "segment_span": [0, 31], "characterOffsetBegin": 81, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 88, "segment_span": [0, 31], "characterOffsetBegin": 85, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 17, "word": "Utilities", "lemma": "Utilities", "after": "  ", "pos": "NNP", "characterOffsetEnd": 98, "segment_span": [0, 31], "characterOffsetBegin": 89, "originalText": "Utilities", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 101, "segment_span": [0, 31], "characterOffsetBegin": 100, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 19, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 107, "segment_span": [0, 31], "characterOffsetBegin": 102, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 111, "segment_span": [0, 31], "characterOffsetBegin": 108, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "Science", "lemma": "Science", "after": " ", "pos": "NNP", "characterOffsetEnd": 119, "segment_span": [0, 31], "characterOffsetBegin": 112, "originalText": "Science", "ArgType": null, "before": " "}, {"index": 22, "word": "1997", "lemma": "1997", "after": "  ", "pos": "CD", "characterOffsetEnd": 124, "segment_span": [0, 31], "characterOffsetBegin": 120, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 127, "segment_span": [0, 31], "characterOffsetBegin": 126, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 24, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 134, "segment_span": [0, 31], "characterOffsetBegin": 129, "originalText": "Noord", "ArgType": null, "before": "  "}, {"index": 25, "word": "1999", "lemma": "1999", "after": "  ", "pos": "CD", "characterOffsetEnd": 139, "segment_span": [0, 31], "characterOffsetBegin": 135, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 142, "segment_span": [0, 31], "characterOffsetBegin": 141, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 27, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 149, "segment_span": [0, 31], "characterOffsetBegin": 144, "originalText": "Noord", "ArgType": null, "before": "  "}, {"index": 28, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 153, "segment_span": [0, 31], "characterOffsetBegin": 150, "originalText": "and", "ArgType": null, "before": " "}, {"index": 29, "word": "Gerdemann", "lemma": "Gerdemann", "after": " ", "pos": "NNP", "characterOffsetEnd": 163, "segment_span": [0, 31], "characterOffsetBegin": 154, "originalText": "Gerdemann", "ArgType": null, "before": " "}, {"index": 30, "word": "1999", "lemma": "1999", "after": " ", "pos": "CD", "characterOffsetEnd": 168, "segment_span": [0, 31], "characterOffsetBegin": 164, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 170, "segment_span": [0, 31], "characterOffsetBegin": 169, "originalText": ")", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 173, "characterOffsetBegin": 172, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In this paper , however , we will use the alternative implementation provided by the FSA Utilities ( Noord and Science 1997 , Noord 1999 , Noord and Gerdemann 1999 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 7, "segment_span": [0, 15], "characterOffsetBegin": 4, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 3, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 17, "segment_span": [0, 15], "characterOffsetBegin": 8, "originalText": "Utilities", "ArgType": "subj", "before": " "}, {"index": 4, "word": "allows", "lemma": "allow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 15], "tense": "Z", "characterOffsetBegin": 18, "originalText": "allows", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 15], "characterOffsetBegin": 25, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "programmer", "lemma": "programmer", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 15], "characterOffsetBegin": 29, "originalText": "programmer", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 42, "segment_span": [0, 15], "characterOffsetBegin": 40, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VB", "characterOffsetEnd": 52, "segment_span": [0, 15], "characterOffsetBegin": 43, "originalText": "introduce", "ArgType": null, "before": " "}, {"index": 9, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [0, 15], "characterOffsetBegin": 53, "originalText": "new", "ArgType": null, "before": " "}, {"index": 10, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 64, "segment_span": [0, 15], "characterOffsetBegin": 57, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 11, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [0, 15], "characterOffsetBegin": 65, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 12, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [0, 15], "characterOffsetBegin": 76, "originalText": "operators", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [0, 15], "characterOffsetBegin": 86, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "arbitrary", "lemma": "arbitrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 98, "segment_span": [0, 15], "characterOffsetBegin": 89, "originalText": "arbitrary", "ArgType": null, "before": " "}, {"index": 15, "word": "complexity", "lemma": "complexity", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [0, 15], "characterOffsetBegin": 99, "originalText": "complexity", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 111, "characterOffsetBegin": 110, "originalText": ".", "ArgType": null, "before": " "}], "text": "The FSA Utilities allows the programmer to introduce new regular expression operators of arbitrary complexity ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "higher-level", "lemma": "higher-level", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 11], "characterOffsetBegin": 5, "originalText": "higher-level", "ArgType": null, "before": " "}, {"index": 3, "word": "interface", "lemma": "interface", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [0, 11], "characterOffsetBegin": 18, "originalText": "interface", "ArgType": "subj", "before": " "}, {"index": 4, "word": "allows", "lemma": "allow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 34, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 28, "originalText": "allows", "ArgType": "verb", "before": " "}, {"index": 5, "word": "us", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 37, "segment_span": [0, 11], "characterOffsetBegin": 35, "originalText": "us", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 38, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "express", "lemma": "express", "after": " ", "pos": "VB", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "express", "ArgType": null, "before": " "}, {"index": 8, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "our", "ArgType": null, "before": " "}, {"index": 9, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 67, "segment_span": [0, 11], "characterOffsetBegin": 63, "originalText": "more", "ArgType": null, "before": " "}, {"index": 11, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 74, "segment_span": [0, 11], "characterOffsetBegin": 68, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 76, "characterOffsetBegin": 75, "originalText": ".", "ArgType": null, "before": " "}], "text": "This higher-level interface allows us to express our algorithm more easily ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "syntax", "lemma": "syntax", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "syntax", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 13, "segment_span": [0, 12], "characterOffsetBegin": 11, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 12], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 12], "characterOffsetBegin": 18, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 6, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 22, "originalText": "Utilities", "ArgType": null, "before": " "}, {"index": 7, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 43, "segment_span": [0, 12], "characterOffsetBegin": 41, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "summarized", "is_pass": true, "lemma": "summarize", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 54, "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 44, "originalText": "summarized", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 55, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "Table", "lemma": "Table", "after": "  ", "pos": "NNP", "characterOffsetEnd": 63, "segment_span": [0, 12], "characterOffsetBegin": 58, "originalText": "Table", "ArgType": null, "before": " "}, {"index": 12, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 69, "segment_span": [0, 12], "characterOffsetBegin": 65, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 72, "characterOffsetBegin": 71, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The syntax of the FSA Utilities calculus is summarized in Table CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 37], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 10, "segment_span": [0, 37], "characterOffsetBegin": 4, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 3, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 37], "characterOffsetBegin": 11, "originalText": "state", "ArgType": null, "before": " "}, {"index": 4, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 37], "characterOffsetBegin": 17, "originalText": "calculus", "ArgType": "subj", "before": " "}, {"index": 5, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 29, "segment_span": [0, 37], "characterOffsetBegin": 26, "originalText": "has", "ArgType": null, "before": " "}, {"index": 6, "word": "proven", "lemma": "prove", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 36, "segment_span": [0, 37], "tense": "N", "characterOffsetBegin": 30, "originalText": "proven", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 39, "segment_span": [0, 37], "characterOffsetBegin": 37, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 42, "segment_span": [0, 37], "characterOffsetBegin": 40, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 37], "characterOffsetBegin": 43, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "very", "lemma": "very", "after": " ", "pos": "RB", "characterOffsetEnd": 49, "segment_span": [0, 37], "characterOffsetBegin": 45, "originalText": "very", "ArgType": null, "before": " "}, {"index": 11, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [0, 37], "characterOffsetBegin": 50, "originalText": "useful", "ArgType": null, "before": " "}, {"index": 12, "word": "tool", "lemma": "tool", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 37], "characterOffsetBegin": 57, "originalText": "tool", "ArgType": null, "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [0, 37], "characterOffsetBegin": 62, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 37], "characterOffsetBegin": 66, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "development", "lemma": "development", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 37], "characterOffsetBegin": 70, "originalText": "development", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [0, 37], "characterOffsetBegin": 82, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "higher-level", "lemma": "higher-level", "after": " ", "pos": "JJ", "characterOffsetEnd": 97, "segment_span": [0, 37], "characterOffsetBegin": 85, "originalText": "higher-level", "ArgType": null, "before": " "}, {"index": 18, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 104, "segment_span": [0, 37], "characterOffsetBegin": 98, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 19, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 37], "characterOffsetBegin": 105, "originalText": "state", "ArgType": null, "before": " "}, {"index": 20, "word": "operators", "lemma": "operator", "after": "  ", "pos": "NNS", "characterOffsetEnd": 120, "segment_span": [0, 37], "characterOffsetBegin": 111, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 123, "segment_span": [0, 37], "characterOffsetBegin": 122, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 22, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 133, "segment_span": [0, 37], "characterOffsetBegin": 124, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 23, "word": "1995", "lemma": "1995", "after": "  ", "pos": "CD", "characterOffsetEnd": 138, "segment_span": [0, 37], "characterOffsetBegin": 134, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 141, "segment_span": [0, 37], "characterOffsetBegin": 140, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 25, "word": "Kempe", "lemma": "Kempe", "after": " ", "pos": "NNP", "characterOffsetEnd": 148, "segment_span": [0, 37], "characterOffsetBegin": 143, "originalText": "Kempe", "ArgType": null, "before": "  "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 152, "segment_span": [0, 37], "characterOffsetBegin": 149, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 162, "segment_span": [0, 37], "characterOffsetBegin": 153, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 28, "word": "1996", "lemma": "1996", "after": "  ", "pos": "CD", "characterOffsetEnd": 167, "segment_span": [0, 37], "characterOffsetBegin": 163, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 170, "segment_span": [0, 37], "characterOffsetBegin": 169, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 30, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 181, "segment_span": [0, 37], "characterOffsetBegin": 172, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 31, "word": "1996", "lemma": "1996", "after": "  ", "pos": "CD", "characterOffsetEnd": 186, "segment_span": [0, 37], "characterOffsetBegin": 182, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 189, "segment_span": [0, 37], "characterOffsetBegin": 188, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 33, "word": "Gerdemann", "lemma": "Gerdemann", "after": " ", "pos": "NNP", "characterOffsetEnd": 200, "segment_span": [0, 37], "characterOffsetBegin": 191, "originalText": "Gerdemann", "ArgType": null, "before": "  "}, {"index": 34, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 204, "segment_span": [0, 37], "characterOffsetBegin": 201, "originalText": "and", "ArgType": null, "before": " "}, {"index": 35, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 210, "segment_span": [0, 37], "characterOffsetBegin": 205, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 36, "word": "1999", "lemma": "1999", "after": " ", "pos": "CD", "characterOffsetEnd": 215, "segment_span": [0, 37], "characterOffsetBegin": 211, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 37, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 217, "segment_span": [0, 37], "characterOffsetBegin": 216, "originalText": ")", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 220, "characterOffsetBegin": 219, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The finite state calculus has proven to be a very useful tool for the development of higher-level finite state operators ( Karttunen 1995 , Kempe and Karttunen 1996 , Karttunen 1996 , Gerdemann and Noord 1999 ) ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "An", "ArgType": null, "before": ""}, {"index": 2, "word": "interesting", "lemma": "interesting", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 8], "characterOffsetBegin": 3, "originalText": "interesting", "ArgType": null, "before": " "}, {"index": 3, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 15, "originalText": "feature", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "most", "lemma": "most", "after": " ", "pos": "JJS", "characterOffsetEnd": 30, "segment_span": [0, 8], "characterOffsetBegin": 26, "originalText": "most", "ArgType": null, "before": " "}, {"index": 6, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 35, "segment_span": [0, 8], "characterOffsetBegin": 31, "originalText": "such", "ArgType": null, "before": " "}, {"index": 7, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 45, "segment_span": [0, 8], "characterOffsetBegin": 36, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 48, "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 46, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [8, 16], "characterOffsetBegin": 49, "originalText": "that", "ArgType": null, "before": " "}, {"index": 10, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 58, "segment_span": [8, 16], "characterOffsetBegin": 54, "originalText": "they", "ArgType": null, "before": " "}, {"index": 11, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 62, "segment_span": [8, 16], "characterOffsetBegin": 59, "originalText": "are", "ArgType": null, "before": " "}, {"index": 12, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 74, "segment_span": [8, 16], "tense": "N", "characterOffsetBegin": 63, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 13, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 80, "segment_span": [8, 16], "characterOffsetBegin": 75, "originalText": "using", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 82, "segment_span": [8, 16], "characterOffsetBegin": 81, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "generate-and-test", "lemma": "generate-and-test", "after": " ", "pos": "JJ", "characterOffsetEnd": 100, "segment_span": [8, 16], "characterOffsetBegin": 83, "originalText": "generate-and-test", "ArgType": null, "before": " "}, {"index": 16, "word": "paradigm", "lemma": "paradigm", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [8, 16], "characterOffsetBegin": 101, "originalText": "paradigm", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 111, "characterOffsetBegin": 110, "originalText": ".", "ArgType": null, "before": " "}], "text": "An interesting feature of most such operators is that they are implemented using a generate-and-test paradigm ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 1, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "(", "ArgType": null, "before": ""}, {"index": 2, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 11, "segment_span": [0, 16], "characterOffsetBegin": 2, "originalText": "Karttunen", "ArgType": "subj", "before": " "}, {"index": 3, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 16, "segment_span": [0, 16], "characterOffsetBegin": 12, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 18, "segment_span": [0, 16], "characterOffsetBegin": 17, "originalText": ")", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [0, 16], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 6, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 16], "characterOffsetBegin": 22, "originalText": "for", "ArgType": null, "before": " "}, {"index": 7, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 16], "characterOffsetBegin": 26, "originalText": "example", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 35, "segment_span": [0, 16], "characterOffsetBegin": 34, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "introduces", "lemma": "introduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 16], "tense": "Z", "characterOffsetBegin": 36, "originalText": "introduces", "ArgType": "verb", "before": " "}, {"index": 10, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [0, 16], "characterOffsetBegin": 47, "originalText": "an", "ArgType": null, "before": " "}, {"index": 11, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 16], "characterOffsetBegin": 50, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 16], "characterOffsetBegin": 60, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [0, 16], "characterOffsetBegin": 64, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "leftmost-longest", "lemma": "leftmost-longest", "after": " ", "pos": "JJ", "characterOffsetEnd": 82, "segment_span": [0, 16], "characterOffsetBegin": 66, "originalText": "leftmost-longest", "ArgType": null, "before": " "}, {"index": 15, "word": "replacement", "lemma": "replacement", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [0, 16], "characterOffsetBegin": 83, "originalText": "replacement", "ArgType": null, "before": " "}, {"index": 16, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 16], "characterOffsetBegin": 95, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 105, "characterOffsetBegin": 104, "originalText": ".", "ArgType": null, "before": " "}], "text": "( Karttunen 1996 ) , for example , introduces an algorithm for a leftmost-longest replacement operator ."}, {"tokens": [{"index": 1, "word": "Somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 8, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "Somewhat", "ArgType": null, "before": ""}, {"index": 2, "word": "simplified", "lemma": "simplify", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 19, "segment_span": [0, 2], "tense": "N", "characterOffsetBegin": 9, "originalText": "simplified", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [2, 8], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 24, "segment_span": [2, 8], "characterOffsetBegin": 22, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 28, "segment_span": [2, 8], "characterOffsetBegin": 25, "originalText": "may", "ArgType": null, "before": " "}, {"index": 6, "word": "view", "lemma": "view", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 33, "segment_span": [2, 8], "tense": "B", "characterOffsetBegin": 29, "originalText": "view", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 38, "segment_span": [2, 8], "characterOffsetBegin": 34, "originalText": "this", "ArgType": null, "before": " "}, {"index": 8, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [2, 8], "characterOffsetBegin": 39, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [8, 12], "characterOffsetBegin": 49, "originalText": "as", "ArgType": null, "before": " "}, {"index": 10, "word": "having", "lemma": "have", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 58, "segment_span": [8, 12], "tense": "G", "characterOffsetBegin": 52, "originalText": "having", "ArgType": null, "before": " "}, {"index": 11, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 62, "segment_span": [8, 12], "characterOffsetBegin": 59, "originalText": "two", "ArgType": null, "before": " "}, {"index": 12, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 68, "segment_span": [8, 12], "characterOffsetBegin": 63, "originalText": "steps", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 70, "characterOffsetBegin": 69, "originalText": ".", "ArgType": null, "before": " "}], "text": "Somewhat simplified , we may view this algorithm as having two steps ."}, {"tokens": [{"index": 1, "word": "First", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 5, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "First", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 6, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "generator", "lemma": "generator", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 10], "characterOffsetBegin": 12, "originalText": "generator", "ArgType": "subj", "before": " "}, {"index": 5, "word": "freely", "lemma": "freely", "after": " ", "pos": "RB", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 22, "originalText": "freely", "ArgType": null, "before": " "}, {"index": 6, "word": "marks", "lemma": "mark", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 34, "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 29, "originalText": "marks", "ArgType": "verb", "before": " "}, {"index": 7, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 37, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "up", "ArgType": null, "before": " "}, {"index": 8, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 38, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 9, "word": "replacement", "lemma": "replacement", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 10], "characterOffsetBegin": 47, "originalText": "replacement", "ArgType": null, "before": " "}, {"index": 10, "word": "sites", "lemma": "site", "after": " ", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 10], "characterOffsetBegin": 59, "originalText": "sites", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 66, "characterOffsetBegin": 65, "originalText": ".", "ArgType": null, "before": " "}], "text": "First , the generator freely marks up possible replacement sites ."}, {"tokens": [{"index": 1, "word": "Then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Then", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 8, "segment_span": [0, 20], "characterOffsetBegin": 5, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "tester", "lemma": "tester", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 20], "characterOffsetBegin": 9, "originalText": "tester", "ArgType": "subj", "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 17, "segment_span": [0, 20], "characterOffsetBegin": 16, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 23, "segment_span": [4, 9], "characterOffsetBegin": 18, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 26, "segment_span": [4, 9], "characterOffsetBegin": 24, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [4, 9], "characterOffsetBegin": 27, "originalText": "an", "ArgType": null, "before": " "}, {"index": 8, "word": "identity", "lemma": "identity", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [4, 9], "characterOffsetBegin": 30, "originalText": "identity", "ArgType": null, "before": " "}, {"index": 9, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [4, 9], "characterOffsetBegin": 39, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 51, "segment_span": [0, 20], "characterOffsetBegin": 50, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "filters", "lemma": "filter", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 59, "segment_span": [0, 20], "tense": "Z", "characterOffsetBegin": 52, "originalText": "filters", "ArgType": "verb", "before": " "}, {"index": 12, "word": "out", "lemma": "out", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 20], "characterOffsetBegin": 60, "originalText": "out", "ArgType": null, "before": " "}, {"index": 13, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 20], "characterOffsetBegin": 64, "originalText": "those", "ArgType": null, "before": " "}, {"index": 14, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 75, "segment_span": [0, 20], "characterOffsetBegin": 70, "originalText": "cases", "ArgType": null, "before": " "}, {"index": 15, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 79, "segment_span": [0, 20], "characterOffsetBegin": 76, "originalText": "not", "ArgType": null, "before": " "}, {"index": 16, "word": "conforming", "lemma": "conform", "after": " ", "pos": "VBG", "characterOffsetEnd": 90, "segment_span": [0, 20], "characterOffsetBegin": 80, "originalText": "conforming", "ArgType": null, "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 93, "segment_span": [0, 20], "characterOffsetBegin": 91, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 97, "segment_span": [0, 20], "characterOffsetBegin": 94, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "leftmost-longest", "lemma": "leftmost-longest", "after": " ", "pos": "JJ", "characterOffsetEnd": 114, "segment_span": [0, 20], "characterOffsetBegin": 98, "originalText": "leftmost-longest", "ArgType": null, "before": " "}, {"index": 20, "word": "strategy", "lemma": "strategy", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [0, 20], "characterOffsetBegin": 115, "originalText": "strategy", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 125, "characterOffsetBegin": 124, "originalText": ".", "ArgType": null, "before": " "}], "text": "Then the tester , which is an identity transducer , filters out those cases not conforming to the leftmost-longest strategy ."}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Since", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 20], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "generator", "lemma": "generator", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 20], "characterOffsetBegin": 10, "originalText": "generator", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 20, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "tester", "lemma": "tester", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 20], "characterOffsetBegin": 24, "originalText": "tester", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 34, "segment_span": [0, 20], "characterOffsetBegin": 31, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [0, 20], "characterOffsetBegin": 35, "originalText": "both", "ArgType": null, "before": " "}, {"index": 8, "word": "implemented", "lemma": "implement", "after": " ", "pos": "VBN", "characterOffsetEnd": 51, "segment_span": [0, 20], "characterOffsetBegin": 40, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 9, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 20], "characterOffsetBegin": 52, "originalText": "as", "ArgType": null, "before": " "}, {"index": 10, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 66, "segment_span": [0, 20], "characterOffsetBegin": 55, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 68, "segment_span": [0, 20], "characterOffsetBegin": 67, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 73, "segment_span": [0, 20], "characterOffsetBegin": 69, "originalText": "they", "ArgType": null, "before": " "}, {"index": 13, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 77, "segment_span": [0, 20], "characterOffsetBegin": 74, "originalText": "can", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 80, "segment_span": [0, 20], "characterOffsetBegin": 78, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "composed", "is_pass": true, "lemma": "compose", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 89, "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 81, "originalText": "composed", "has_aux": true, "ArgType": null, "before": " "}, {"index": 16, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [0, 20], "characterOffsetBegin": 90, "originalText": "into", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 96, "segment_span": [0, 20], "characterOffsetBegin": 95, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 103, "segment_span": [0, 20], "characterOffsetBegin": 97, "originalText": "single", "ArgType": null, "before": " "}, {"index": 19, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [0, 20], "characterOffsetBegin": 104, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 116, "segment_span": [0, 20], "characterOffsetBegin": 115, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 122, "segment_span": [20, 29], "characterOffsetBegin": 117, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 22, "word": "eliminates", "lemma": "eliminate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 133, "segment_span": [20, 29], "tense": "Z", "characterOffsetBegin": 123, "originalText": "eliminates", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 137, "segment_span": [20, 29], "characterOffsetBegin": 134, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "inefficiency", "lemma": "inefficiency", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [20, 29], "characterOffsetBegin": 138, "originalText": "inefficiency", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "normally", "lemma": "normally", "after": " ", "pos": "RB", "characterOffsetEnd": 159, "segment_span": [20, 29], "characterOffsetBegin": 151, "originalText": "normally", "ArgType": null, "before": " "}, {"index": 26, "word": "associated", "lemma": "associate", "after": " ", "pos": "VBN", "characterOffsetEnd": 170, "segment_span": [20, 29], "characterOffsetBegin": 160, "originalText": "associated", "ArgType": null, "before": " "}, {"index": 27, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 175, "segment_span": [20, 29], "characterOffsetBegin": 171, "originalText": "with", "ArgType": null, "before": " "}, {"index": 28, "word": "generate-and-test", "lemma": "generate-and-test", "after": " ", "pos": "JJ", "characterOffsetEnd": 193, "segment_span": [20, 29], "characterOffsetBegin": 176, "originalText": "generate-and-test", "ArgType": null, "before": " "}, {"index": 29, "word": "algorithms", "lemma": "algorithm", "after": " ", "pos": "NNS", "characterOffsetEnd": 204, "segment_span": [20, 29], "characterOffsetBegin": 194, "originalText": "algorithms", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 206, "characterOffsetBegin": 205, "originalText": ".", "ArgType": null, "before": " "}], "text": "Since the generator and tester are both implemented as transducers , they can be composed into a single transducer , which eliminates the inefficiency normally associated with generate-and-test algorithms ."}]}, {"title": "Finite State Optimality Theory", "num": 2, "sentences": [{"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "generate-and-test", "lemma": "generate-and-test", "after": " ", "pos": "JJ", "characterOffsetEnd": 21, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "generate-and-test", "ArgType": null, "before": " "}, {"index": 3, "word": "paradigm", "lemma": "paradigm", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 11], "characterOffsetBegin": 22, "originalText": "paradigm", "ArgType": "subj", "before": " "}, {"index": 4, "word": "initially", "lemma": "initially", "after": " ", "pos": "RB", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 31, "originalText": "initially", "ArgType": null, "before": " "}, {"index": 5, "word": "appears", "lemma": "appear", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 48, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 41, "originalText": "appears", "ArgType": "verb", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 54, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "appropriate", "lemma": "appropriate", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [0, 11], "characterOffsetBegin": 55, "originalText": "appropriate", "ArgType": null, "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 11], "characterOffsetBegin": 67, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 11], "characterOffsetBegin": 71, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 11, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [0, 11], "characterOffsetBegin": 82, "originalText": "theory", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 90, "characterOffsetBegin": 89, "originalText": ".", "ArgType": null, "before": " "}], "text": "The generate-and-test paradigm initially appears to be appropriate for optimality theory ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 38], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 4, "segment_span": [0, 38], "characterOffsetBegin": 3, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 7, "segment_span": [2, 26], "characterOffsetBegin": 5, "originalText": "as", "ArgType": null, "before": " "}, {"index": 4, "word": "claimed", "lemma": "claim", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 15, "segment_span": [2, 26], "tense": "N", "characterOffsetBegin": 8, "originalText": "claimed", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [2, 26], "characterOffsetBegin": 16, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 21, "segment_span": [2, 26], "characterOffsetBegin": 20, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 7, "word": "Ellison", "lemma": "Ellison", "after": " ", "pos": "NNP", "characterOffsetEnd": 29, "segment_span": [2, 26], "characterOffsetBegin": 22, "originalText": "Ellison", "ArgType": null, "before": " "}, {"index": 8, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 34, "segment_span": [2, 26], "characterOffsetBegin": 30, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 36, "segment_span": [2, 26], "characterOffsetBegin": 35, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 39, "segment_span": [2, 26], "characterOffsetBegin": 38, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 11, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [2, 26], "characterOffsetBegin": 40, "originalText": "Gen", "ArgType": "subj", "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 46, "segment_span": [2, 26], "characterOffsetBegin": 44, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 48, "segment_span": [2, 26], "characterOffsetBegin": 47, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [2, 26], "characterOffsetBegin": 49, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 15, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [2, 26], "characterOffsetBegin": 57, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 69, "segment_span": [2, 26], "characterOffsetBegin": 66, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [2, 26], "characterOffsetBegin": 70, "originalText": "if", "ArgType": null, "before": " "}, {"index": 18, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 77, "segment_span": [2, 26], "characterOffsetBegin": 73, "originalText": "each", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [2, 26], "characterOffsetBegin": 78, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 20, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 92, "segment_span": [2, 26], "characterOffsetBegin": 89, "originalText": "can", "ArgType": null, "before": " "}, {"index": 21, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 95, "segment_span": [2, 26], "characterOffsetBegin": 93, "originalText": "be", "ArgType": null, "before": " "}, {"index": 22, "word": "implemented", "lemma": "implement", "after": " ", "pos": "VBN", "characterOffsetEnd": 107, "segment_span": [2, 26], "characterOffsetBegin": 96, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 23, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [2, 26], "characterOffsetBegin": 108, "originalText": "as", "ArgType": null, "before": " "}, {"index": 24, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 113, "segment_span": [2, 26], "characterOffsetBegin": 111, "originalText": "an", "ArgType": null, "before": " "}, {"index": 25, "word": "identity", "lemma": "identity", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [2, 26], "characterOffsetBegin": 114, "originalText": "identity", "ArgType": null, "before": " "}, {"index": 26, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 133, "segment_span": [2, 26], "characterOffsetBegin": 123, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 135, "segment_span": [0, 38], "characterOffsetBegin": 134, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 140, "segment_span": [0, 38], "characterOffsetBegin": 136, "originalText": "then", "ArgType": null, "before": " "}, {"index": 29, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [0, 38], "characterOffsetBegin": 141, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 30, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [0, 38], "characterOffsetBegin": 152, "originalText": "theory", "ArgType": null, "before": " "}, {"index": 31, "word": "analyses", "lemma": "analysis", "after": " ", "pos": "NNS", "characterOffsetEnd": 167, "segment_span": [0, 38], "characterOffsetBegin": 159, "originalText": "analyses", "ArgType": null, "before": " "}, {"index": 32, "word": "could", "lemma": "could", "after": " ", "pos": "MD", "characterOffsetEnd": 173, "segment_span": [0, 38], "characterOffsetBegin": 168, "originalText": "could", "ArgType": null, "before": " "}, {"index": 33, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 176, "segment_span": [0, 38], "characterOffsetBegin": 174, "originalText": "be", "ArgType": null, "before": " "}, {"index": 34, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 188, "segment_span": [0, 38], "tense": "N", "characterOffsetBegin": 177, "originalText": "implemented", "has_aux": true, "ArgType": null, "before": " "}, {"index": 35, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 191, "segment_span": [0, 38], "characterOffsetBegin": 189, "originalText": "as", "ArgType": null, "before": " "}, {"index": 36, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 194, "segment_span": [0, 38], "characterOffsetBegin": 192, "originalText": "in", "ArgType": null, "before": " "}, {"index": 37, "word": "fig", "lemma": "fig", "after": "   ", "pos": "NN", "characterOffsetEnd": 198, "segment_span": [0, 38], "characterOffsetBegin": 195, "originalText": "fig", "ArgType": null, "before": " "}, {"index": 38, "word": "CREF", "lemma": "cref", "after": "   ", "pos": "NN", "characterOffsetEnd": 205, "segment_span": [0, 38], "characterOffsetBegin": 201, "originalText": "CREF", "ArgType": null, "before": "   "}, {"index": 39, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 209, "characterOffsetBegin": 208, "originalText": ".", "ArgType": null, "before": "   "}], "text": "If , as claimed in ( Ellison 1994 ) , Gen is a regular relation and if each constraint can be implemented as an identity transducer , then optimality theory analyses could be implemented as in fig CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 7], "characterOffsetBegin": 4, "originalText": "problem", "ArgType": "subj", "before": " "}, {"index": 3, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 7], "characterOffsetBegin": 12, "originalText": "with", "ArgType": null, "before": " "}, {"index": 4, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 7], "characterOffsetBegin": 17, "originalText": "this", "ArgType": null, "before": " "}, {"index": 5, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 7], "characterOffsetBegin": 22, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 7], "characterOffsetBegin": 29, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 40, "segment_span": [0, 7], "tense": "Z", "characterOffsetBegin": 38, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [7, 18], "characterOffsetBegin": 41, "originalText": "that", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [7, 18], "characterOffsetBegin": 46, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 51, "segment_span": [7, 18], "characterOffsetBegin": 49, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 53, "segment_span": [7, 18], "characterOffsetBegin": 52, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [7, 18], "characterOffsetBegin": 54, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [7, 18], "characterOffsetBegin": 56, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 69, "segment_span": [7, 18], "characterOffsetBegin": 67, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "allowed", "is_pass": true, "lemma": "allow", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 77, "segment_span": [7, 18], "tense": "N", "characterOffsetBegin": 70, "originalText": "allowed", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 80, "segment_span": [7, 18], "characterOffsetBegin": 78, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 83, "segment_span": [7, 18], "characterOffsetBegin": 81, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "violated", "lemma": "violate", "after": " ", "pos": "VBN", "characterOffsetEnd": 92, "segment_span": [7, 18], "characterOffsetBegin": 84, "originalText": "violated", "ArgType": null, "before": " "}, {"index": 19, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [18, 26], "characterOffsetBegin": 93, "originalText": "if", "ArgType": null, "before": " "}, {"index": 20, "word": "none", "lemma": "none", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [18, 26], "characterOffsetBegin": 96, "originalText": "none", "ArgType": "subj", "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [18, 26], "characterOffsetBegin": 101, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 107, "segment_span": [18, 26], "characterOffsetBegin": 104, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 118, "segment_span": [18, 26], "characterOffsetBegin": 108, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 24, "word": "satisfy", "lemma": "satisfy", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 126, "segment_span": [18, 26], "tense": "P", "characterOffsetBegin": 119, "originalText": "satisfy", "ArgType": null, "before": " "}, {"index": 25, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 131, "segment_span": [18, 26], "characterOffsetBegin": 127, "originalText": "that", "ArgType": null, "before": " "}, {"index": 26, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 142, "segment_span": [18, 26], "characterOffsetBegin": 132, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 144, "characterOffsetBegin": 143, "originalText": ".", "ArgType": null, "before": " "}], "text": "The problem with this simple approach is that in OT , a constraint is allowed to be violated if none of the candidates satisfy that constraint ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 1, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "(", "ArgType": null, "before": ""}, {"index": 2, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 11, "segment_span": [0, 7], "characterOffsetBegin": 2, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 3, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 16, "segment_span": [0, 7], "characterOffsetBegin": 12, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 18, "segment_span": [0, 7], "characterOffsetBegin": 17, "originalText": ")", "ArgType": null, "before": " "}, {"index": 5, "word": "treats", "lemma": "treat", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 7], "tense": "Z", "characterOffsetBegin": 20, "originalText": "treats", "ArgType": null, "before": "  "}, {"index": 6, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 7], "characterOffsetBegin": 27, "originalText": "this", "ArgType": null, "before": " "}, {"index": 7, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 7], "characterOffsetBegin": 32, "originalText": "problem", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [7, 16], "characterOffsetBegin": 40, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "providing", "lemma": "provide", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 52, "segment_span": [7, 16], "tense": "G", "characterOffsetBegin": 43, "originalText": "providing", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [7, 16], "characterOffsetBegin": 53, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [7, 16], "characterOffsetBegin": 55, "originalText": "new", "ArgType": null, "before": " "}, {"index": 12, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [7, 16], "characterOffsetBegin": 59, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [7, 16], "characterOffsetBegin": 68, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 79, "segment_span": [7, 16], "characterOffsetBegin": 72, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 15, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [7, 16], "characterOffsetBegin": 80, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 93, "segment_span": [7, 16], "characterOffsetBegin": 92, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 99, "segment_span": [16, 28], "characterOffsetBegin": 94, "originalText": "which", "ArgType": null, "before": " "}, {"index": 18, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 102, "segment_span": [16, 28], "characterOffsetBegin": 100, "originalText": "is", "ArgType": null, "before": " "}, {"index": 19, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 110, "segment_span": [16, 28], "tense": "N", "characterOffsetBegin": 103, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 20, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [16, 28], "characterOffsetBegin": 111, "originalText": "in", "ArgType": null, "before": " "}, {"index": 21, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [16, 28], "characterOffsetBegin": 114, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 122, "segment_span": [16, 28], "characterOffsetBegin": 120, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 126, "segment_span": [16, 28], "characterOffsetBegin": 123, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "auxiliary", "lemma": "auxiliary", "after": " ", "pos": "JJ", "characterOffsetEnd": 136, "segment_span": [16, 28], "characterOffsetBegin": 127, "originalText": "auxiliary", "ArgType": null, "before": " "}, {"index": 25, "word": "operation", "lemma": "operation", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [16, 28], "characterOffsetBegin": 137, "originalText": "operation", "ArgType": null, "before": " "}, {"index": 26, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 149, "segment_span": [16, 28], "characterOffsetBegin": 147, "originalText": "of", "ArgType": null, "before": " "}, {"index": 27, "word": "priority", "lemma": "priority", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [16, 28], "characterOffsetBegin": 150, "originalText": "priority", "ArgType": null, "before": " "}, {"index": 28, "word": "union", "lemma": "union", "after": " ", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [16, 28], "characterOffsetBegin": 159, "originalText": "union", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 166, "characterOffsetBegin": 165, "originalText": ".", "ArgType": null, "before": " "}], "text": "( Karttunen 1998 ) treats this problem by providing a new operator for lenient composition , which is defined in terms of the auxiliary operation of priority union ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 12], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 4, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 20, "segment_span": [0, 12], "characterOffsetBegin": 11, "originalText": "Utilities", "ArgType": null, "before": " "}, {"index": 5, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 12], "characterOffsetBegin": 21, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 30, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "these", "ArgType": null, "before": " "}, {"index": 8, "word": "operations", "lemma": "operation", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 12], "characterOffsetBegin": 38, "originalText": "operations", "ArgType": null, "before": " "}, {"index": 9, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 52, "segment_span": [0, 12], "characterOffsetBegin": 49, "originalText": "can", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 55, "segment_span": [0, 12], "characterOffsetBegin": 53, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 63, "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 56, "originalText": "defined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 12, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 12], "characterOffsetBegin": 64, "originalText": "as", "ArgType": null, "before": " "}, {"index": 13, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 68, "characterOffsetBegin": 67, "originalText": ":", "ArgType": null, "before": " "}], "text": "In the FSA Utilities calculus , these operations can be defined as :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "effect", "lemma": "effect", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "effect", "ArgType": "subj", "before": " "}, {"index": 3, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 15, "segment_span": [0, 4], "characterOffsetBegin": 11, "originalText": "here", "ArgType": null, "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 18, "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 16, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [4, 29], "characterOffsetBegin": 19, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [4, 29], "characterOffsetBegin": 24, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 35, "segment_span": [4, 29], "characterOffsetBegin": 28, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 8, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [4, 29], "characterOffsetBegin": 36, "originalText": "composition", "ArgType": "subj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 50, "segment_span": [4, 29], "characterOffsetBegin": 48, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [4, 29], "characterOffsetBegin": 51, "originalText": "S", "ArgType": null, "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 56, "segment_span": [4, 29], "characterOffsetBegin": 53, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [4, 29], "characterOffsetBegin": 57, "originalText": "C", "ArgType": null, "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 61, "segment_span": [4, 29], "characterOffsetBegin": 59, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [4, 29], "characterOffsetBegin": 62, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [4, 29], "characterOffsetBegin": 66, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [4, 29], "characterOffsetBegin": 78, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [4, 29], "characterOffsetBegin": 81, "originalText": "S", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 86, "segment_span": [4, 29], "characterOffsetBegin": 83, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [4, 29], "characterOffsetBegin": 87, "originalText": "C", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 90, "segment_span": [4, 29], "characterOffsetBegin": 89, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [4, 29], "characterOffsetBegin": 91, "originalText": "except", "ArgType": null, "before": " "}, {"index": 22, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 101, "segment_span": [4, 29], "characterOffsetBegin": 98, "originalText": "for", "ArgType": null, "before": " "}, {"index": 23, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 107, "segment_span": [4, 29], "characterOffsetBegin": 102, "originalText": "those", "ArgType": null, "before": " "}, {"index": 24, "word": "elements", "lemma": "element", "after": " ", "pos": "NNS", "characterOffsetEnd": 116, "segment_span": [4, 29], "characterOffsetBegin": 108, "originalText": "elements", "ArgType": null, "before": " "}, {"index": 25, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 119, "segment_span": [4, 29], "characterOffsetBegin": 117, "originalText": "in", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 123, "segment_span": [4, 29], "characterOffsetBegin": 120, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [4, 29], "characterOffsetBegin": 124, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 133, "segment_span": [4, 29], "characterOffsetBegin": 131, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [4, 29], "characterOffsetBegin": 134, "originalText": "S", "ArgType": null, "before": " "}, {"index": 30, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 140, "segment_span": [29, 39], "characterOffsetBegin": 136, "originalText": "that", "ArgType": null, "before": " "}, {"index": 31, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 144, "segment_span": [29, 39], "characterOffsetBegin": 141, "originalText": "are", "ArgType": null, "before": " "}, {"index": 32, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 148, "segment_span": [29, 39], "characterOffsetBegin": 145, "originalText": "not", "ArgType": null, "before": " "}, {"index": 33, "word": "mapped", "is_pass": true, "lemma": "map", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 155, "segment_span": [29, 39], "tense": "N", "characterOffsetBegin": 149, "originalText": "mapped", "ArgType": null, "before": " "}, {"index": 34, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 158, "segment_span": [29, 39], "characterOffsetBegin": 156, "originalText": "to", "ArgType": null, "before": " "}, {"index": 35, "word": "anything", "lemma": "anything", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [29, 39], "characterOffsetBegin": 159, "originalText": "anything", "ArgType": null, "before": " "}, {"index": 36, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 170, "segment_span": [29, 39], "characterOffsetBegin": 168, "originalText": "by", "ArgType": null, "before": " "}, {"index": 37, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [29, 39], "characterOffsetBegin": 171, "originalText": "S", "ArgType": null, "before": " "}, {"index": 38, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 174, "segment_span": [29, 39], "characterOffsetBegin": 173, "originalText": "o", "ArgType": null, "before": " "}, {"index": 39, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 176, "segment_span": [29, 39], "characterOffsetBegin": 175, "originalText": "C", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 178, "characterOffsetBegin": 177, "originalText": ".", "ArgType": null, "before": " "}], "text": "The effect here is that the lenient composition of S and C is the composition of S and C , except for those elements in the domain of S that are not mapped to anything by S o C ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 23], "characterOffsetBegin": 4, "originalText": "these", "ArgType": null, "before": " "}, {"index": 3, "word": "elements", "lemma": "element", "after": " ", "pos": "NNS", "characterOffsetEnd": 18, "segment_span": [0, 23], "characterOffsetBegin": 10, "originalText": "elements", "ArgType": null, "before": " "}, {"index": 4, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 22, "segment_span": [0, 23], "characterOffsetBegin": 19, "originalText": "not", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 23], "characterOffsetBegin": 23, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [0, 23], "characterOffsetBegin": 26, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 23], "characterOffsetBegin": 30, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [0, 23], "characterOffsetBegin": 37, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 23], "characterOffsetBegin": 40, "originalText": "S", "ArgType": null, "before": " "}, {"index": 10, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 23], "characterOffsetBegin": 42, "originalText": "o", "ArgType": null, "before": " "}, {"index": 11, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 23], "characterOffsetBegin": 44, "originalText": "C", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 47, "segment_span": [0, 23], "characterOffsetBegin": 46, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [0, 23], "characterOffsetBegin": 48, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "effect", "lemma": "effect", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 23], "characterOffsetBegin": 52, "originalText": "effect", "ArgType": "subj", "before": " "}, {"index": 15, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 61, "segment_span": [0, 23], "characterOffsetBegin": 59, "originalText": "is", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [0, 23], "characterOffsetBegin": 62, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 70, "segment_span": [0, 23], "characterOffsetBegin": 66, "originalText": "same", "ArgType": "verb", "before": " "}, {"index": 18, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [0, 23], "characterOffsetBegin": 71, "originalText": "as", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 77, "segment_span": [0, 23], "characterOffsetBegin": 74, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "effect", "lemma": "effect", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 23], "characterOffsetBegin": 78, "originalText": "effect", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 87, "segment_span": [0, 23], "characterOffsetBegin": 85, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [0, 23], "characterOffsetBegin": 88, "originalText": "S", "ArgType": null, "before": " "}, {"index": 23, "word": "alone", "lemma": "alone", "after": " ", "pos": "RB", "characterOffsetEnd": 95, "segment_span": [0, 23], "characterOffsetBegin": 90, "originalText": "alone", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 97, "characterOffsetBegin": 96, "originalText": ".", "ArgType": null, "before": " "}], "text": "For these elements not in the domain of S o C , the effect is the same as the effect of S alone ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "use", "lemma": "use", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 6, "segment_span": [0, 19], "tense": "P", "characterOffsetBegin": 3, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 19], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "notation", "lemma": "notation", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 19], "characterOffsetBegin": 11, "originalText": "notation", "ArgType": null, "before": " "}, {"index": 5, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 19], "characterOffsetBegin": 20, "originalText": "S", "ArgType": null, "before": " "}, {"index": 6, "word": "lc", "lemma": "lc", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 19], "characterOffsetBegin": 22, "originalText": "lc", "ArgType": null, "before": " "}, {"index": 7, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 19], "characterOffsetBegin": 25, "originalText": "C", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 19], "characterOffsetBegin": 27, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 19], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "succinct", "lemma": "succinct", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 19], "characterOffsetBegin": 32, "originalText": "succinct", "ArgType": null, "before": " "}, {"index": 11, "word": "notation", "lemma": "notation", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 19], "characterOffsetBegin": 41, "originalText": "notation", "ArgType": null, "before": " "}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [0, 19], "characterOffsetBegin": 50, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 57, "segment_span": [0, 19], "characterOffsetBegin": 54, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [0, 19], "characterOffsetBegin": 58, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 15, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [0, 19], "characterOffsetBegin": 66, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [0, 19], "characterOffsetBegin": 78, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 19], "characterOffsetBegin": 81, "originalText": "S", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 86, "segment_span": [0, 19], "characterOffsetBegin": 83, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [0, 19], "characterOffsetBegin": 87, "originalText": "C", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 90, "characterOffsetBegin": 89, "originalText": ".", "ArgType": null, "before": " "}], "text": "We use the notation S lc C as a succinct notation for the lenient composition of S and C ."}, {"tokens": [{"index": 1, "word": "Using", "lemma": "use", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 5, "segment_span": [0, 3], "tense": "G", "characterOffsetBegin": 0, "originalText": "Using", "ArgType": null, "before": ""}, {"index": 2, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 3], "characterOffsetBegin": 6, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 3, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 3], "characterOffsetBegin": 14, "originalText": "composition", "ArgType": "dobj", "before": " "}, {"index": 4, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [3, 13], "characterOffsetBegin": 26, "originalText": "an", "ArgType": null, "before": " "}, {"index": 5, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [3, 13], "characterOffsetBegin": 29, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 6, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [3, 13], "characterOffsetBegin": 32, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 44, "segment_span": [3, 13], "characterOffsetBegin": 41, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 47, "segment_span": [3, 13], "characterOffsetBegin": 45, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "written", "is_pass": true, "lemma": "write", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 55, "segment_span": [3, 13], "tense": "N", "characterOffsetBegin": 48, "originalText": "written", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [3, 13], "characterOffsetBegin": 56, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [3, 13], "characterOffsetBegin": 59, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "fig", "lemma": "fig", "after": "   ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [3, 13], "characterOffsetBegin": 62, "originalText": "fig", "ArgType": null, "before": " "}, {"index": 13, "word": "CREF", "lemma": "cref", "after": "   ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [3, 13], "characterOffsetBegin": 68, "originalText": "CREF", "ArgType": null, "before": "   "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 76, "characterOffsetBegin": 75, "originalText": ".", "ArgType": null, "before": "   "}], "text": "Using lenient composition an OT analysis can be written as in fig CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "use", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 10, "segment_span": [0, 11], "characterOffsetBegin": 8, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 18, "segment_span": [0, 11], "characterOffsetBegin": 11, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 5, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 11], "characterOffsetBegin": 19, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 32, "segment_span": [0, 11], "characterOffsetBegin": 31, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 33, "originalText": "however", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 42, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 43, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 49, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "not", "ArgType": null, "before": " "}, {"index": 11, "word": "sufficient", "lemma": "sufficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 60, "segment_span": [0, 11], "characterOffsetBegin": 50, "originalText": "sufficient", "ArgType": "verb", "before": " "}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [11, 15], "characterOffsetBegin": 61, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "implementing", "lemma": "implement", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 77, "segment_span": [11, 15], "tense": "G", "characterOffsetBegin": 65, "originalText": "implementing", "ArgType": null, "before": " "}, {"index": 14, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [11, 15], "characterOffsetBegin": 78, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 15, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [11, 15], "characterOffsetBegin": 89, "originalText": "theory", "ArgType": "dobj", "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 97, "characterOffsetBegin": 96, "originalText": ".", "ArgType": null, "before": " "}], "text": "The use of lenient composition , however , is not sufficient for implementing optimality theory ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 10, "segment_span": [0, 14], "characterOffsetBegin": 3, "originalText": "general", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 12, "segment_span": [0, 14], "characterOffsetBegin": 11, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [0, 14], "characterOffsetBegin": 13, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 14], "characterOffsetBegin": 15, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 6, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 14], "characterOffsetBegin": 25, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 35, "segment_span": [0, 14], "characterOffsetBegin": 32, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "violate", "lemma": "violate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 43, "segment_span": [0, 14], "tense": "B", "characterOffsetBegin": 36, "originalText": "violate", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [0, 14], "characterOffsetBegin": 44, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 14], "characterOffsetBegin": 46, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 11, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [0, 14], "characterOffsetBegin": 57, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 12, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 71, "segment_span": [0, 14], "characterOffsetBegin": 66, "originalText": "times", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 75, "segment_span": [0, 14], "characterOffsetBegin": 72, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 86, "segment_span": [0, 14], "characterOffsetBegin": 76, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 15, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 91, "segment_span": [14, 18], "characterOffsetBegin": 87, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 16, "word": "violate", "lemma": "violate", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 99, "segment_span": [14, 18], "tense": "P", "characterOffsetBegin": 92, "originalText": "violate", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 103, "segment_span": [14, 18], "characterOffsetBegin": 100, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [14, 18], "characterOffsetBegin": 104, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [18, 27], "characterOffsetBegin": 115, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 124, "segment_span": [18, 27], "characterOffsetBegin": 119, "originalText": "least", "ArgType": null, "before": " "}, {"index": 21, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [18, 27], "characterOffsetBegin": 125, "originalText": "number", "ArgType": "subj", "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 134, "segment_span": [18, 27], "characterOffsetBegin": 132, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 140, "segment_span": [18, 27], "characterOffsetBegin": 135, "originalText": "times", "ArgType": null, "before": " "}, {"index": 24, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 145, "segment_span": [18, 27], "tense": "P", "characterOffsetBegin": 141, "originalText": "need", "ArgType": null, "before": " "}, {"index": 25, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 148, "segment_span": [18, 27], "characterOffsetBegin": 146, "originalText": "to", "ArgType": null, "before": " "}, {"index": 26, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 151, "segment_span": [18, 27], "characterOffsetBegin": 149, "originalText": "be", "ArgType": null, "before": " "}, {"index": 27, "word": "preferred", "lemma": "prefer", "after": " ", "pos": "VBN", "characterOffsetEnd": 161, "segment_span": [18, 27], "characterOffsetBegin": 152, "originalText": "preferred", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 163, "characterOffsetBegin": 162, "originalText": ".", "ArgType": null, "before": " "}], "text": "In general , a candidate string can violate a constraint multiple times and candidates that violate the constraint the least number of times need to be preferred ."}, {"tokens": [{"index": 1, "word": "Lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "Lenient", "ArgType": null, "before": ""}, {"index": 2, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 8], "characterOffsetBegin": 8, "originalText": "composition", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 20, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "sufficient", "lemma": "sufficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "sufficient", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 36, "segment_span": [0, 8], "characterOffsetBegin": 34, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "prefer", "lemma": "prefer", "after": " ", "pos": "VB", "characterOffsetEnd": 43, "segment_span": [0, 8], "characterOffsetBegin": 37, "originalText": "prefer", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [0, 8], "characterOffsetBegin": 44, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 8], "characterOffsetBegin": 46, "originalText": "candidate", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 60, "segment_span": [8, 17], "characterOffsetBegin": 56, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 10, "word": "violates", "lemma": "violate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 69, "segment_span": [8, 17], "tense": "Z", "characterOffsetBegin": 61, "originalText": "violates", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 73, "segment_span": [8, 17], "characterOffsetBegin": 70, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [8, 17], "characterOffsetBegin": 74, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 86, "segment_span": [8, 17], "characterOffsetBegin": 85, "originalText": "0", "ArgType": null, "before": " "}, {"index": 14, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 92, "segment_span": [8, 17], "characterOffsetBegin": 87, "originalText": "times", "ArgType": null, "before": " "}, {"index": 15, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [8, 17], "characterOffsetBegin": 93, "originalText": "over", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 99, "segment_span": [8, 17], "characterOffsetBegin": 98, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [8, 17], "characterOffsetBegin": 100, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 18, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 114, "segment_span": [17, 24], "characterOffsetBegin": 110, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 19, "word": "violates", "lemma": "violate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 123, "segment_span": [17, 24], "tense": "Z", "characterOffsetBegin": 115, "originalText": "violates", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 127, "segment_span": [17, 24], "characterOffsetBegin": 124, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [17, 24], "characterOffsetBegin": 128, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [17, 24], "characterOffsetBegin": 139, "originalText": "at", "ArgType": null, "before": " "}, {"index": 23, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 147, "segment_span": [17, 24], "characterOffsetBegin": 142, "originalText": "least", "ArgType": null, "before": " "}, {"index": 24, "word": "once", "lemma": "once", "after": " ", "pos": "RB", "characterOffsetEnd": 152, "segment_span": [17, 24], "characterOffsetBegin": 148, "originalText": "once", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 154, "characterOffsetBegin": 153, "originalText": ".", "ArgType": null, "before": " "}], "text": "Lenient composition is sufficient to prefer a candidate that violates the constraint 0 times over a candidate that violates the constraint at least once ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "However", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 17], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 17], "characterOffsetBegin": 10, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 4, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 17], "characterOffsetBegin": 18, "originalText": "composition", "ArgType": "subj", "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": "", "pos": "MD", "characterOffsetEnd": 33, "segment_span": [0, 17], "characterOffsetBegin": 30, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 36, "segment_span": [0, 17], "characterOffsetBegin": 33, "originalText": "not", "ArgType": null, "before": ""}, {"index": 7, "word": "distinguish", "lemma": "distinguish", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 48, "segment_span": [0, 17], "tense": "B", "characterOffsetBegin": 37, "originalText": "distinguish", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 52, "segment_span": [0, 17], "characterOffsetBegin": 49, "originalText": "two", "ArgType": null, "before": " "}, {"index": 9, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 63, "segment_span": [0, 17], "characterOffsetBegin": 53, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [9, 15], "characterOffsetBegin": 64, "originalText": "if", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [9, 15], "characterOffsetBegin": 67, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 76, "segment_span": [9, 15], "characterOffsetBegin": 71, "originalText": "first", "ArgType": "subj", "before": " "}, {"index": 13, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 85, "segment_span": [9, 15], "tense": "Z", "characterOffsetBegin": 77, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 14, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 89, "segment_span": [9, 15], "characterOffsetBegin": 86, "originalText": "one", "ArgType": null, "before": " "}, {"index": 15, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [9, 15], "characterOffsetBegin": 90, "originalText": "violation", "ArgType": "dobj", "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 101, "segment_span": [0, 17], "characterOffsetBegin": 100, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 105, "segment_span": [0, 17], "characterOffsetBegin": 102, "originalText": "and", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [17, 24], "characterOffsetBegin": 106, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [17, 24], "characterOffsetBegin": 110, "originalText": "second", "ArgType": "subj", "before": " "}, {"index": 20, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 125, "segment_span": [17, 24], "tense": "Z", "characterOffsetBegin": 117, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 21, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 128, "segment_span": [17, 24], "characterOffsetBegin": 126, "originalText": "at", "ArgType": null, "before": " "}, {"index": 22, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 134, "segment_span": [17, 24], "characterOffsetBegin": 129, "originalText": "least", "ArgType": null, "before": " "}, {"index": 23, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 138, "segment_span": [17, 24], "characterOffsetBegin": 135, "originalText": "two", "ArgType": null, "before": " "}, {"index": 24, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 149, "segment_span": [17, 24], "characterOffsetBegin": 139, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 151, "characterOffsetBegin": 150, "originalText": ".", "ArgType": null, "before": " "}], "text": "However , lenient composition can not distinguish two candidates if the first contains one violation , and the second contains at least two violations ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "problem", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [0, 9], "characterOffsetBegin": 12, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "implementing", "lemma": "implement", "after": " ", "pos": "VBG", "characterOffsetEnd": 27, "segment_span": [0, 9], "characterOffsetBegin": 15, "originalText": "implementing", "ArgType": null, "before": " "}, {"index": 5, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 28, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 6, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "theory", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "becomes", "lemma": "become", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 53, "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 46, "originalText": "becomes", "ArgType": "verb", "before": " "}, {"index": 8, "word": "considerably", "lemma": "considerably", "after": " ", "pos": "RB", "characterOffsetEnd": 66, "segment_span": [0, 9], "characterOffsetBegin": 54, "originalText": "considerably", "ArgType": null, "before": " "}, {"index": 9, "word": "harder", "lemma": "harder", "after": " ", "pos": "JJR", "characterOffsetEnd": 73, "segment_span": [0, 9], "characterOffsetBegin": 67, "originalText": "harder", "ArgType": null, "before": " "}, {"index": 10, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 78, "segment_span": [9, 16], "characterOffsetBegin": 74, "originalText": "when", "ArgType": null, "before": " "}, {"index": 11, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [9, 16], "characterOffsetBegin": 79, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 12, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 100, "segment_span": [9, 16], "characterOffsetBegin": 90, "originalText": "violations", "ArgType": "subj", "before": " "}, {"index": 13, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 105, "segment_span": [9, 16], "tense": "P", "characterOffsetBegin": 101, "originalText": "need", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 108, "segment_span": [9, 16], "characterOffsetBegin": 106, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 111, "segment_span": [9, 16], "characterOffsetBegin": 109, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "counted", "lemma": "count", "after": " ", "pos": "VBN", "characterOffsetEnd": 119, "segment_span": [9, 16], "characterOffsetBegin": 112, "originalText": "counted", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 121, "characterOffsetBegin": 120, "originalText": ".", "ArgType": null, "before": " "}], "text": "The problem of implementing optimality theory becomes considerably harder when constraint violations need to be counted ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": "  ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 5, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 3, "word": "Frank", "lemma": "Frank", "after": " ", "pos": "NNP", "characterOffsetEnd": 11, "segment_span": [0, 9], "characterOffsetBegin": 6, "originalText": "Frank", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 15, "segment_span": [0, 9], "characterOffsetBegin": 12, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "Satta", "lemma": "Satta", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 9], "characterOffsetBegin": 16, "originalText": "Satta", "ArgType": null, "before": " "}, {"index": 6, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 26, "segment_span": [0, 9], "characterOffsetBegin": 22, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 27, "originalText": ")", "ArgType": null, "before": " "}, {"index": 8, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 34, "segment_span": [0, 9], "characterOffsetBegin": 30, "originalText": "have", "ArgType": null, "before": "  "}, {"index": 9, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 40, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 35, "originalText": "shown", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 42, "segment_span": [9, 35], "characterOffsetBegin": 41, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [9, 35], "characterOffsetBegin": 43, "originalText": "an", "ArgType": null, "before": " "}, {"index": 12, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 48, "segment_span": [9, 35], "characterOffsetBegin": 46, "originalText": "OT", "ArgType": "subj", "before": " "}, {"index": 13, "word": "describes", "lemma": "describe", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 58, "segment_span": [9, 35], "tense": "Z", "characterOffsetBegin": 49, "originalText": "describes", "ArgType": "verb", "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [9, 35], "characterOffsetBegin": 59, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 68, "segment_span": [9, 35], "characterOffsetBegin": 61, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 16, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [9, 35], "characterOffsetBegin": 69, "originalText": "relation", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "under", "lemma": "under", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [16, 25], "characterOffsetBegin": 78, "originalText": "under", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 87, "segment_span": [16, 25], "characterOffsetBegin": 84, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "assumptions", "lemma": "assumption", "after": " ", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [16, 25], "characterOffsetBegin": 88, "originalText": "assumptions", "ArgType": null, "before": " "}, {"index": 20, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 104, "segment_span": [16, 25], "characterOffsetBegin": 100, "originalText": "that", "ArgType": null, "before": " "}, {"index": 21, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [16, 25], "characterOffsetBegin": 105, "originalText": "Gen", "ArgType": "subj", "before": " "}, {"index": 22, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 111, "segment_span": [16, 25], "characterOffsetBegin": 109, "originalText": "is", "ArgType": null, "before": " "}, {"index": 23, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 113, "segment_span": [16, 25], "characterOffsetBegin": 112, "originalText": "a", "ArgType": null, "before": " "}, {"index": 24, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 121, "segment_span": [16, 25], "characterOffsetBegin": 114, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 25, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [16, 25], "characterOffsetBegin": 122, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 132, "segment_span": [9, 35], "characterOffsetBegin": 131, "originalText": ",", "ArgType": null, "before": " "}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 136, "segment_span": [9, 35], "characterOffsetBegin": 133, "originalText": "and", "ArgType": null, "before": " "}, {"index": 28, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 141, "segment_span": [9, 35], "characterOffsetBegin": 137, "originalText": "each", "ArgType": "subj", "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 144, "segment_span": [9, 35], "characterOffsetBegin": 142, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 148, "segment_span": [9, 35], "characterOffsetBegin": 145, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 160, "segment_span": [9, 35], "characterOffsetBegin": 149, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 32, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 163, "segment_span": [9, 35], "characterOffsetBegin": 161, "originalText": "is", "ArgType": null, "before": " "}, {"index": 33, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 165, "segment_span": [9, 35], "characterOffsetBegin": 164, "originalText": "a", "ArgType": null, "before": " "}, {"index": 34, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 173, "segment_span": [9, 35], "characterOffsetBegin": 166, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 35, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [9, 35], "characterOffsetBegin": 174, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 36, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 188, "segment_span": [35, 56], "characterOffsetBegin": 183, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 37, "word": "maps", "lemma": "map", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 193, "segment_span": [35, 56], "tense": "Z", "characterOffsetBegin": 189, "originalText": "maps", "ArgType": null, "before": " "}, {"index": 38, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 195, "segment_span": [35, 56], "characterOffsetBegin": 194, "originalText": "a", "ArgType": null, "before": " "}, {"index": 39, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 205, "segment_span": [35, 56], "characterOffsetBegin": 196, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 40, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 212, "segment_span": [35, 56], "characterOffsetBegin": 206, "originalText": "string", "ArgType": "dobj", "before": " "}, {"index": 41, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 215, "segment_span": [35, 56], "characterOffsetBegin": 213, "originalText": "to", "ArgType": null, "before": " "}, {"index": 42, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 217, "segment_span": [35, 56], "characterOffsetBegin": 216, "originalText": "a", "ArgType": null, "before": " "}, {"index": 43, "word": "natural", "lemma": "natural", "after": " ", "pos": "JJ", "characterOffsetEnd": 225, "segment_span": [35, 56], "characterOffsetBegin": 218, "originalText": "natural", "ArgType": null, "before": " "}, {"index": 44, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 232, "segment_span": [35, 56], "characterOffsetBegin": 226, "originalText": "number", "ArgType": null, "before": " "}, {"index": 45, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 234, "segment_span": [35, 56], "characterOffsetBegin": 233, "originalText": "(", "ArgType": null, "before": " "}, {"index": 46, "word": "indicating", "lemma": "indicate", "after": " ", "pos": "VBG", "characterOffsetEnd": 245, "segment_span": [35, 56], "characterOffsetBegin": 235, "originalText": "indicating", "ArgType": null, "before": " "}, {"index": 47, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 249, "segment_span": [35, 56], "characterOffsetBegin": 246, "originalText": "the", "ArgType": null, "before": " "}, {"index": 48, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 256, "segment_span": [35, 56], "characterOffsetBegin": 250, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 49, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 259, "segment_span": [35, 56], "characterOffsetBegin": 257, "originalText": "of", "ArgType": null, "before": " "}, {"index": 50, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 270, "segment_span": [35, 56], "characterOffsetBegin": 260, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 51, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 281, "segment_span": [35, 56], "characterOffsetBegin": 271, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 52, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 284, "segment_span": [35, 56], "characterOffsetBegin": 282, "originalText": "in", "ArgType": null, "before": " "}, {"index": 53, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 289, "segment_span": [35, 56], "characterOffsetBegin": 285, "originalText": "that", "ArgType": null, "before": " "}, {"index": 54, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 299, "segment_span": [35, 56], "characterOffsetBegin": 290, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 55, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 301, "segment_span": [35, 56], "characterOffsetBegin": 300, "originalText": ")", "ArgType": null, "before": " "}, {"index": 56, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 303, "segment_span": [35, 56], "characterOffsetBegin": 302, "originalText": ",", "ArgType": null, "before": " "}, {"index": 57, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 309, "segment_span": [56, 64], "characterOffsetBegin": 304, "originalText": "where", "ArgType": null, "before": " "}, {"index": 58, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 313, "segment_span": [56, 64], "characterOffsetBegin": 310, "originalText": "the", "ArgType": null, "before": " "}, {"index": 59, "word": "range", "lemma": "range", "after": " ", "pos": "NN", "characterOffsetEnd": 319, "segment_span": [56, 64], "characterOffsetBegin": 314, "originalText": "range", "ArgType": "subj", "before": " "}, {"index": 60, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 322, "segment_span": [56, 64], "characterOffsetBegin": 320, "originalText": "of", "ArgType": null, "before": " "}, {"index": 61, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 327, "segment_span": [56, 64], "characterOffsetBegin": 323, "originalText": "each", "ArgType": null, "before": " "}, {"index": 62, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 338, "segment_span": [56, 64], "characterOffsetBegin": 328, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 63, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 341, "segment_span": [56, 64], "characterOffsetBegin": 339, "originalText": "is", "ArgType": null, "before": " "}, {"index": 64, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 348, "segment_span": [56, 64], "characterOffsetBegin": 342, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 65, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 350, "characterOffsetBegin": 349, "originalText": ".", "ArgType": null, "before": " "}], "text": "As ( Frank and Satta 1998 ) have shown , an OT describes a regular relation under the assumptions that Gen is a regular relation , and each of the constraints is a regular relation which maps a candidate string to a natural number ( indicating the number of constraint violations in that candidate ) , where the range of each constraint is finite ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 14, "segment_span": [0, 8], "characterOffsetBegin": 3, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 18, "segment_span": [0, 8], "characterOffsetBegin": 15, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 19, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 8], "characterOffsetBegin": 27, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 34, "segment_span": [0, 8], "characterOffsetBegin": 30, "originalText": "such", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [0, 8], "characterOffsetBegin": 35, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 8], "characterOffsetBegin": 37, "originalText": "way", "ArgType": null, "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [8, 35], "characterOffsetBegin": 41, "originalText": "that", "ArgType": null, "before": " "}, {"index": 10, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 51, "segment_span": [8, 35], "characterOffsetBegin": 46, "originalText": "there", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 54, "segment_span": [8, 35], "tense": "Z", "characterOffsetBegin": 52, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "no", "lemma": "no", "after": " ", "pos": "DT", "characterOffsetEnd": 57, "segment_span": [8, 35], "characterOffsetBegin": 55, "originalText": "no", "ArgType": null, "before": " "}, {"index": 13, "word": "bound", "lemma": "bind", "after": " ", "pos": "VBN", "characterOffsetEnd": 63, "segment_span": [8, 35], "characterOffsetBegin": 58, "originalText": "bound", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 66, "segment_span": [8, 35], "characterOffsetBegin": 64, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [8, 35], "characterOffsetBegin": 67, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [8, 35], "characterOffsetBegin": 71, "originalText": "number", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [8, 35], "characterOffsetBegin": 78, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [8, 35], "characterOffsetBegin": 81, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 19, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 102, "segment_span": [8, 35], "characterOffsetBegin": 92, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 20, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 107, "segment_span": [19, 26], "characterOffsetBegin": 103, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 21, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 111, "segment_span": [19, 26], "characterOffsetBegin": 108, "originalText": "can", "ArgType": null, "before": " "}, {"index": 22, "word": "occur", "lemma": "occur", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 117, "segment_span": [19, 26], "tense": "B", "characterOffsetBegin": 112, "originalText": "occur", "has_aux": true, "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 120, "segment_span": [19, 26], "characterOffsetBegin": 118, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 122, "segment_span": [19, 26], "characterOffsetBegin": 121, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 128, "segment_span": [19, 26], "characterOffsetBegin": 123, "originalText": "given", "ArgType": null, "before": " "}, {"index": 26, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [19, 26], "characterOffsetBegin": 129, "originalText": "string", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 137, "segment_span": [8, 35], "characterOffsetBegin": 136, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 142, "segment_span": [8, 35], "characterOffsetBegin": 138, "originalText": "then", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 146, "segment_span": [8, 35], "characterOffsetBegin": 143, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 156, "segment_span": [8, 35], "characterOffsetBegin": 147, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 31, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 159, "segment_span": [8, 35], "characterOffsetBegin": 157, "originalText": "OT", "ArgType": "subj", "before": " "}, {"index": 32, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 163, "segment_span": [8, 35], "characterOffsetBegin": 160, "originalText": "may", "ArgType": null, "before": " "}, {"index": 33, "word": "describe", "lemma": "describe", "after": " ", "pos": "VB", "characterOffsetEnd": 172, "segment_span": [8, 35], "characterOffsetBegin": 164, "originalText": "describe", "ArgType": null, "before": " "}, {"index": 34, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 174, "segment_span": [8, 35], "characterOffsetBegin": 173, "originalText": "a", "ArgType": null, "before": " "}, {"index": 35, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [8, 35], "characterOffsetBegin": 175, "originalText": "relation", "ArgType": "dobj", "before": " "}, {"index": 36, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 188, "segment_span": [35, 39], "characterOffsetBegin": 184, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 37, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 191, "segment_span": [35, 39], "characterOffsetBegin": 189, "originalText": "is", "ArgType": null, "before": " "}, {"index": 38, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 195, "segment_span": [35, 39], "characterOffsetBegin": 192, "originalText": "not", "ArgType": null, "before": " "}, {"index": 39, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 203, "segment_span": [35, 39], "characterOffsetBegin": 196, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 205, "characterOffsetBegin": 204, "originalText": ".", "ArgType": null, "before": " "}], "text": "If constraints are defined in such a way that there is no bound to the number of constraint violations that can occur in a given string , then the resulting OT may describe a relation that is not regular ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 16], "characterOffsetBegin": 2, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 3, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 16], "characterOffsetBegin": 9, "originalText": "example", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [0, 16], "characterOffsetBegin": 17, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "such", "lemma": "such", "after": " ", "pos": "PDT", "characterOffsetEnd": 24, "segment_span": [0, 16], "characterOffsetBegin": 20, "originalText": "such", "ArgType": null, "before": " "}, {"index": 6, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [0, 16], "characterOffsetBegin": 25, "originalText": "an", "ArgType": null, "before": " "}, {"index": 7, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 16], "characterOffsetBegin": 28, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 32, "segment_span": [0, 16], "characterOffsetBegin": 31, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "attributed", "lemma": "attribute", "after": " ", "pos": "VBN", "characterOffsetEnd": 43, "segment_span": [0, 16], "characterOffsetBegin": 33, "originalText": "attributed", "ArgType": null, "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 46, "segment_span": [0, 16], "characterOffsetBegin": 44, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "Markus", "lemma": "Markus", "after": " ", "pos": "NNP", "characterOffsetEnd": 53, "segment_span": [0, 16], "characterOffsetBegin": 47, "originalText": "Markus", "ArgType": null, "before": " "}, {"index": 12, "word": "Hiller", "lemma": "Hiller", "after": " ", "pos": "NNP", "characterOffsetEnd": 60, "segment_span": [0, 16], "characterOffsetBegin": 54, "originalText": "Hiller", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 62, "segment_span": [0, 16], "characterOffsetBegin": 61, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 65, "segment_span": [0, 16], "characterOffsetBegin": 63, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 16], "characterOffsetBegin": 66, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 72, "segment_span": [0, 16], "characterOffsetBegin": 70, "originalText": "OT", "ArgType": "verb", "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [16, 40], "characterOffsetBegin": 73, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 81, "segment_span": [16, 40], "characterOffsetBegin": 76, "originalText": "which", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [16, 40], "characterOffsetBegin": 82, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "inputs", "lemma": "input", "after": " ", "pos": "NNS", "characterOffsetEnd": 92, "segment_span": [16, 40], "characterOffsetBegin": 86, "originalText": "inputs", "ArgType": "subj", "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [16, 40], "characterOffsetBegin": 93, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "interest", "lemma": "interest", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [16, 40], "characterOffsetBegin": 96, "originalText": "interest", "ArgType": null, "before": " "}, {"index": 23, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 108, "segment_span": [16, 40], "characterOffsetBegin": 105, "originalText": "are", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 111, "segment_span": [16, 40], "characterOffsetBegin": 109, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 115, "segment_span": [16, 40], "characterOffsetBegin": 112, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [16, 40], "characterOffsetBegin": 116, "originalText": "form", "ArgType": null, "before": " "}, {"index": 27, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 122, "segment_span": [16, 40], "characterOffsetBegin": 121, "originalText": "[", "ArgType": null, "before": " "}, {"index": 28, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 123, "segment_span": [16, 40], "characterOffsetBegin": 122, "originalText": "a", "ArgType": null, "before": ""}, {"index": 29, "word": "*", "lemma": "*", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [16, 40], "characterOffsetBegin": 123, "originalText": "*", "ArgType": null, "before": ""}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 126, "segment_span": [16, 40], "characterOffsetBegin": 125, "originalText": ",", "ArgType": null, "before": " "}, {"index": 31, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [16, 40], "characterOffsetBegin": 127, "originalText": "b", "ArgType": null, "before": " "}, {"index": 32, "word": "*", "lemma": "*", "after": "", "pos": "SYM", "characterOffsetEnd": 129, "segment_span": [16, 40], "characterOffsetBegin": 128, "originalText": "*", "ArgType": null, "before": ""}, {"index": 33, "word": "]", "lemma": "-rsb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 130, "segment_span": [16, 40], "characterOffsetBegin": 129, "originalText": "]", "ArgType": null, "before": ""}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 132, "segment_span": [16, 40], "characterOffsetBegin": 131, "originalText": ",", "ArgType": null, "before": " "}, {"index": 35, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [16, 40], "characterOffsetBegin": 133, "originalText": "Gen", "ArgType": null, "before": " "}, {"index": 36, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 139, "segment_span": [16, 40], "characterOffsetBegin": 137, "originalText": "is", "ArgType": null, "before": " "}, {"index": 37, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "characterOffsetEnd": 147, "segment_span": [16, 40], "characterOffsetBegin": 140, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 38, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 150, "segment_span": [16, 40], "characterOffsetBegin": 148, "originalText": "as", "ArgType": null, "before": " "}, {"index": 39, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 152, "segment_span": [16, 40], "characterOffsetBegin": 151, "originalText": "a", "ArgType": null, "before": " "}, {"index": 40, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 163, "segment_span": [16, 40], "characterOffsetBegin": 153, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 41, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 169, "segment_span": [40, 42], "characterOffsetBegin": 164, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 42, "word": "maps", "lemma": "map", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 174, "segment_span": [40, 42], "tense": "Z", "characterOffsetBegin": 170, "originalText": "maps", "ArgType": null, "before": " "}, {"index": 43, "word": "all", "lemma": "all", "after": " ", "pos": "PDT", "characterOffsetEnd": 178, "segment_span": [42, 69], "characterOffsetBegin": 175, "originalText": "all", "ArgType": null, "before": " "}, {"index": 44, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 180, "segment_span": [42, 69], "characterOffsetBegin": 179, "originalText": "a", "ArgType": "subj", "before": " "}, {"index": 45, "word": "'s", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 182, "segment_span": [42, 69], "characterOffsetBegin": 180, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 46, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 185, "segment_span": [42, 69], "characterOffsetBegin": 183, "originalText": "to", "ArgType": null, "before": " "}, {"index": 47, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 187, "segment_span": [42, 69], "characterOffsetBegin": 186, "originalText": "b", "ArgType": null, "before": " "}, {"index": 48, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 189, "segment_span": [42, 69], "characterOffsetBegin": 187, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 49, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 193, "segment_span": [42, 69], "characterOffsetBegin": 190, "originalText": "and", "ArgType": null, "before": " "}, {"index": 50, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 197, "segment_span": [42, 69], "characterOffsetBegin": 194, "originalText": "all", "ArgType": null, "before": " "}, {"index": 51, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 199, "segment_span": [42, 69], "characterOffsetBegin": 198, "originalText": "b", "ArgType": null, "before": " "}, {"index": 52, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 201, "segment_span": [42, 69], "characterOffsetBegin": 199, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 53, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 204, "segment_span": [42, 69], "characterOffsetBegin": 202, "originalText": "to", "ArgType": null, "before": " "}, {"index": 54, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 206, "segment_span": [42, 69], "characterOffsetBegin": 205, "originalText": "a", "ArgType": null, "before": " "}, {"index": 55, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 208, "segment_span": [42, 69], "characterOffsetBegin": 206, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 56, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 210, "segment_span": [42, 69], "characterOffsetBegin": 209, "originalText": ",", "ArgType": null, "before": " "}, {"index": 57, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 213, "segment_span": [42, 69], "characterOffsetBegin": 211, "originalText": "or", "ArgType": null, "before": " "}, {"index": 58, "word": "alternatively", "lemma": "alternatively", "after": " ", "pos": "RB", "characterOffsetEnd": 227, "segment_span": [42, 69], "characterOffsetBegin": 214, "originalText": "alternatively", "ArgType": null, "before": " "}, {"index": 59, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 229, "segment_span": [42, 69], "characterOffsetBegin": 228, "originalText": ",", "ArgType": null, "before": " "}, {"index": 60, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 232, "segment_span": [42, 69], "characterOffsetBegin": 230, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 61, "word": "performs", "lemma": "perform", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 241, "segment_span": [42, 69], "tense": "Z", "characterOffsetBegin": 233, "originalText": "performs", "ArgType": null, "before": " "}, {"index": 62, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 245, "segment_span": [42, 69], "characterOffsetBegin": 242, "originalText": "the", "ArgType": null, "before": " "}, {"index": 63, "word": "identity", "lemma": "identity", "after": " ", "pos": "NN", "characterOffsetEnd": 254, "segment_span": [42, 69], "characterOffsetBegin": 246, "originalText": "identity", "ArgType": null, "before": " "}, {"index": 64, "word": "map", "lemma": "map", "after": " ", "pos": "NN", "characterOffsetEnd": 258, "segment_span": [42, 69], "characterOffsetBegin": 255, "originalText": "map", "ArgType": "dobj", "before": " "}, {"index": 65, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 261, "segment_span": [42, 69], "characterOffsetBegin": 259, "originalText": "on", "ArgType": null, "before": " "}, {"index": 66, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 266, "segment_span": [42, 69], "characterOffsetBegin": 262, "originalText": "each", "ArgType": null, "before": " "}, {"index": 67, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 268, "segment_span": [42, 69], "characterOffsetBegin": 267, "originalText": "a", "ArgType": null, "before": " "}, {"index": 68, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 272, "segment_span": [42, 69], "characterOffsetBegin": 269, "originalText": "and", "ArgType": null, "before": " "}, {"index": 69, "word": "b", "lemma": "b", "after": " ", "pos": "NN", "characterOffsetEnd": 274, "segment_span": [42, 69], "characterOffsetBegin": 273, "originalText": "b", "ArgType": null, "before": " "}, {"index": 70, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 276, "characterOffsetBegin": 275, "originalText": ":", "ArgType": null, "before": " "}], "text": "A simple example of such an OT ( attributed to Markus Hiller ) is the OT in which the inputs of interest are of the form [ a * , b * ] , Gen is defined as a transducer which maps all a 's to b 's and all b 's to a 's , or alternatively , it performs the identity map on each a and b :"}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 17], "characterOffsetBegin": 5, "originalText": "OT", "ArgType": "subj", "before": " "}, {"index": 3, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 16, "segment_span": [0, 17], "tense": "Z", "characterOffsetBegin": 8, "originalText": "contains", "ArgType": "verb", "before": " "}, {"index": 4, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 21, "segment_span": [0, 17], "characterOffsetBegin": 17, "originalText": "only", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [0, 17], "characterOffsetBegin": 22, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 30, "segment_span": [0, 17], "characterOffsetBegin": 24, "originalText": "single", "ArgType": null, "before": " "}, {"index": 7, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 17], "characterOffsetBegin": 31, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 43, "segment_span": [0, 17], "characterOffsetBegin": 42, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "*", "lemma": "*", "after": "", "pos": "SYM", "characterOffsetEnd": 45, "segment_span": [0, 17], "characterOffsetBegin": 44, "originalText": "*", "ArgType": null, "before": " "}, {"index": 10, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 46, "segment_span": [0, 17], "characterOffsetBegin": 45, "originalText": "A", "ArgType": null, "before": ""}, {"index": 11, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 48, "segment_span": [0, 17], "characterOffsetBegin": 47, "originalText": ":", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 50, "segment_span": [0, 17], "characterOffsetBegin": 49, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [0, 17], "characterOffsetBegin": 51, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 14, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 64, "segment_span": [0, 17], "characterOffsetBegin": 58, "originalText": "should", "ArgType": null, "before": " "}, {"index": 15, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 68, "segment_span": [0, 17], "characterOffsetBegin": 65, "originalText": "not", "ArgType": null, "before": " "}, {"index": 16, "word": "contain", "lemma": "contain", "after": " ", "pos": "VB", "characterOffsetEnd": 76, "segment_span": [0, 17], "characterOffsetBegin": 69, "originalText": "contain", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [0, 17], "characterOffsetBegin": 77, "originalText": "a", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 80, "characterOffsetBegin": 79, "originalText": ".", "ArgType": null, "before": " "}], "text": "This OT contains only a single constraint , * A : a string should not contain a ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 6, "segment_span": [0, 5], "characterOffsetBegin": 3, "originalText": "can", "ArgType": null, "before": " "}, {"index": 3, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 13, "segment_span": [0, 5], "characterOffsetBegin": 7, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 16, "segment_span": [0, 5], "characterOffsetBegin": 14, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "verified", "is_pass": true, "lemma": "verify", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 25, "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 17, "originalText": "verified", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 27, "segment_span": [5, 13], "characterOffsetBegin": 26, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 32, "segment_span": [5, 13], "characterOffsetBegin": 28, "originalText": "this", "ArgType": null, "before": " "}, {"index": 8, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [5, 13], "characterOffsetBegin": 33, "originalText": "OT", "ArgType": "subj", "before": " "}, {"index": 9, "word": "defines", "lemma": "define", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 43, "segment_span": [5, 13], "tense": "Z", "characterOffsetBegin": 36, "originalText": "defines", "ArgType": "verb", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [5, 13], "characterOffsetBegin": 44, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "relation", "lemma": "relation", "after": "  ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [5, 13], "characterOffsetBegin": 48, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 12, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [5, 13], "characterOffsetBegin": 58, "originalText": "equation", "ArgType": "dobj", "before": "  "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 69, "segment_span": [5, 13], "characterOffsetBegin": 68, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 14, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 75, "segment_span": [13, 21], "characterOffsetBegin": 70, "originalText": "which", "ArgType": null, "before": " "}, {"index": 15, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 79, "segment_span": [13, 21], "characterOffsetBegin": 76, "originalText": "can", "ArgType": null, "before": " "}, {"index": 16, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 86, "segment_span": [13, 21], "characterOffsetBegin": 80, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 89, "segment_span": [13, 21], "characterOffsetBegin": 87, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "shown", "is_pass": true, "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 95, "segment_span": [13, 21], "tense": "N", "characterOffsetBegin": 90, "originalText": "shown", "has_aux": true, "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 98, "segment_span": [13, 21], "characterOffsetBegin": 96, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 101, "segment_span": [13, 21], "characterOffsetBegin": 99, "originalText": "be", "ArgType": null, "before": " "}, {"index": 21, "word": "non-regular", "lemma": "non-regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 113, "segment_span": [13, 21], "characterOffsetBegin": 102, "originalText": "non-regular", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 115, "characterOffsetBegin": 114, "originalText": ".", "ArgType": null, "before": " "}], "text": "As can easily be verified , this OT defines the relation equation , which can easily be shown to be non-regular ."}, {"tokens": [{"index": 1, "word": "Although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 8, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Although", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 11], "characterOffsetBegin": 9, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 13, "originalText": "OT", "ArgType": "subj", "before": " "}, {"index": 4, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 25, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "described", "ArgType": null, "before": " "}, {"index": 5, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 11], "characterOffsetBegin": 26, "originalText": "above", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 34, "segment_span": [0, 11], "characterOffsetBegin": 32, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "highly", "lemma": "highly", "after": " ", "pos": "RB", "characterOffsetEnd": 41, "segment_span": [0, 11], "characterOffsetBegin": 35, "originalText": "highly", "ArgType": null, "before": " "}, {"index": 8, "word": "unrealistic", "lemma": "unrealistic", "after": " ", "pos": "JJ", "characterOffsetEnd": 53, "segment_span": [0, 11], "characterOffsetBegin": 42, "originalText": "unrealistic", "ArgType": null, "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 11], "characterOffsetBegin": 54, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "natural", "lemma": "natural", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [0, 11], "characterOffsetBegin": 58, "originalText": "natural", "ArgType": null, "before": " "}, {"index": 11, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 11], "characterOffsetBegin": 66, "originalText": "language", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 76, "segment_span": [11, 63], "characterOffsetBegin": 75, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "one", "lemma": "one", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [11, 63], "characterOffsetBegin": 77, "originalText": "one", "ArgType": "subj", "before": " "}, {"index": 14, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 86, "segment_span": [11, 63], "characterOffsetBegin": 81, "originalText": "might", "ArgType": null, "before": " "}, {"index": 15, "word": "nevertheless", "lemma": "nevertheless", "after": " ", "pos": "RB", "characterOffsetEnd": 99, "segment_span": [11, 63], "characterOffsetBegin": 87, "originalText": "nevertheless", "ArgType": null, "before": " "}, {"index": 16, "word": "expect", "lemma": "expect", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 106, "segment_span": [11, 63], "tense": "B", "characterOffsetBegin": 100, "originalText": "expect", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 17, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 111, "segment_span": [16, 50], "characterOffsetBegin": 107, "originalText": "that", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 113, "segment_span": [16, 50], "characterOffsetBegin": 112, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [16, 50], "characterOffsetBegin": 114, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 20, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 127, "segment_span": [16, 50], "characterOffsetBegin": 125, "originalText": "on", "ArgType": null, "before": " "}, {"index": 21, "word": "syllable", "lemma": "syllable", "after": " ", "pos": "JJ", "characterOffsetEnd": 136, "segment_span": [16, 50], "characterOffsetBegin": 128, "originalText": "syllable", "ArgType": null, "before": " "}, {"index": 22, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [16, 50], "characterOffsetBegin": 137, "originalText": "structure", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 149, "segment_span": [16, 50], "characterOffsetBegin": 147, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 153, "segment_span": [16, 50], "characterOffsetBegin": 150, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 162, "segment_span": [16, 50], "characterOffsetBegin": 154, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 26, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 165, "segment_span": [16, 50], "characterOffsetBegin": 163, "originalText": "of", "ArgType": null, "before": " "}, {"index": 27, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 173, "segment_span": [16, 50], "characterOffsetBegin": 167, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 175, "segment_span": [16, 50], "characterOffsetBegin": 174, "originalText": "(", "ArgType": null, "before": " "}, {"index": 29, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 179, "segment_span": [16, 50], "characterOffsetBegin": 175, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 180, "segment_span": [16, 50], "characterOffsetBegin": 179, "originalText": ")", "ArgType": null, "before": ""}, {"index": 31, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 183, "segment_span": [16, 50], "characterOffsetBegin": 182, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 32, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 194, "segment_span": [16, 50], "characterOffsetBegin": 185, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 33, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 196, "segment_span": [16, 50], "characterOffsetBegin": 195, "originalText": "(", "ArgType": null, "before": " "}, {"index": 34, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 200, "segment_span": [16, 50], "characterOffsetBegin": 196, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 201, "segment_span": [16, 50], "characterOffsetBegin": 200, "originalText": ")", "ArgType": null, "before": ""}, {"index": 36, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 208, "segment_span": [16, 50], "characterOffsetBegin": 203, "originalText": "would", "ArgType": null, "before": "  "}, {"index": 37, "word": "require", "lemma": "require", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 216, "segment_span": [16, 50], "tense": "B", "characterOffsetBegin": 209, "originalText": "require", "has_aux": true, "ArgType": null, "before": " "}, {"index": 38, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 219, "segment_span": [16, 50], "characterOffsetBegin": 217, "originalText": "an", "ArgType": null, "before": " "}, {"index": 39, "word": "unbounded", "lemma": "unbounded", "after": " ", "pos": "JJ", "characterOffsetEnd": 229, "segment_span": [16, 50], "characterOffsetBegin": 220, "originalText": "unbounded", "ArgType": null, "before": " "}, {"index": 40, "word": "amount", "lemma": "amount", "after": " ", "pos": "NN", "characterOffsetEnd": 236, "segment_span": [16, 50], "characterOffsetBegin": 230, "originalText": "amount", "ArgType": "dobj", "before": " "}, {"index": 41, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 239, "segment_span": [16, 50], "characterOffsetBegin": 237, "originalText": "of", "ArgType": null, "before": " "}, {"index": 42, "word": "counting", "lemma": "counting", "after": " ", "pos": "NN", "characterOffsetEnd": 248, "segment_span": [16, 50], "characterOffsetBegin": 240, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 43, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 250, "segment_span": [16, 50], "characterOffsetBegin": 249, "originalText": "(", "ArgType": null, "before": " "}, {"index": 44, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 256, "segment_span": [16, 50], "characterOffsetBegin": 251, "originalText": "since", "ArgType": null, "before": " "}, {"index": 45, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 262, "segment_span": [16, 50], "characterOffsetBegin": 257, "originalText": "words", "ArgType": "subj", "before": " "}, {"index": 46, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 266, "segment_span": [16, 50], "characterOffsetBegin": 263, "originalText": "are", "ArgType": null, "before": " "}, {"index": 47, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 269, "segment_span": [16, 50], "characterOffsetBegin": 267, "originalText": "of", "ArgType": null, "before": " "}, {"index": 48, "word": "unbounded", "lemma": "unbounded", "after": " ", "pos": "JJ", "characterOffsetEnd": 279, "segment_span": [16, 50], "characterOffsetBegin": 270, "originalText": "unbounded", "ArgType": null, "before": " "}, {"index": 49, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 286, "segment_span": [16, 50], "characterOffsetBegin": 280, "originalText": "length", "ArgType": null, "before": " "}, {"index": 50, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 288, "segment_span": [16, 50], "characterOffsetBegin": 287, "originalText": ")", "ArgType": null, "before": " "}, {"index": 51, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 290, "segment_span": [11, 63], "characterOffsetBegin": 289, "originalText": ",", "ArgType": null, "before": " "}, {"index": 52, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 294, "segment_span": [11, 63], "characterOffsetBegin": 291, "originalText": "and", "ArgType": null, "before": " "}, {"index": 53, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 299, "segment_span": [11, 63], "characterOffsetBegin": 295, "originalText": "that", "ArgType": null, "before": " "}, {"index": 54, "word": "therefore", "lemma": "therefore", "after": " ", "pos": "RB", "characterOffsetEnd": 309, "segment_span": [11, 63], "characterOffsetBegin": 300, "originalText": "therefore", "ArgType": null, "before": " "}, {"index": 55, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 314, "segment_span": [11, 63], "characterOffsetBegin": 310, "originalText": "such", "ArgType": null, "before": " "}, {"index": 56, "word": "analyses", "lemma": "analysis", "after": " ", "pos": "NNS", "characterOffsetEnd": 323, "segment_span": [11, 63], "characterOffsetBegin": 315, "originalText": "analyses", "ArgType": "subj", "before": " "}, {"index": 57, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 329, "segment_span": [11, 63], "characterOffsetBegin": 324, "originalText": "would", "ArgType": null, "before": " "}, {"index": 58, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 333, "segment_span": [11, 63], "characterOffsetBegin": 330, "originalText": "not", "ArgType": null, "before": " "}, {"index": 59, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 336, "segment_span": [11, 63], "characterOffsetBegin": 334, "originalText": "be", "ArgType": null, "before": " "}, {"index": 60, "word": "describable", "lemma": "describable", "after": " ", "pos": "JJ", "characterOffsetEnd": 348, "segment_span": [11, 63], "characterOffsetBegin": 337, "originalText": "describable", "ArgType": null, "before": " "}, {"index": 61, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 351, "segment_span": [11, 63], "characterOffsetBegin": 349, "originalText": "as", "ArgType": null, "before": " "}, {"index": 62, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 359, "segment_span": [11, 63], "characterOffsetBegin": 352, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 63, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 369, "segment_span": [11, 63], "characterOffsetBegin": 360, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 64, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 371, "characterOffsetBegin": 370, "originalText": ".", "ArgType": null, "before": " "}], "text": "Although the OT described above is highly unrealistic for natural language , one might nevertheless expect that a constraint on syllable structure in the analysis of Prince ( 0000 ) & Smolensky ( 0000 ) would require an unbounded amount of counting ( since words are of unbounded length ) , and that therefore such analyses would not be describable as regular relations ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "An", "ArgType": null, "before": ""}, {"index": 2, "word": "important", "lemma": "important", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 7], "characterOffsetBegin": 3, "originalText": "important", "ArgType": null, "before": " "}, {"index": 3, "word": "conclusion", "lemma": "conclusion", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 7], "characterOffsetBegin": 13, "originalText": "conclusion", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 7], "characterOffsetBegin": 24, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 7], "characterOffsetBegin": 27, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 7], "characterOffsetBegin": 32, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 40, "segment_span": [0, 7], "tense": "Z", "characterOffsetBegin": 38, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [7, 25], "characterOffsetBegin": 41, "originalText": "that", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 47, "segment_span": [7, 25], "characterOffsetBegin": 46, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "contrary", "lemma": "contrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [7, 25], "characterOffsetBegin": 48, "originalText": "contrary", "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 59, "segment_span": [7, 25], "characterOffsetBegin": 57, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [7, 25], "characterOffsetBegin": 60, "originalText": "this", "ArgType": null, "before": " "}, {"index": 13, "word": "potential", "lemma": "potential", "after": " ", "pos": "JJ", "characterOffsetEnd": 74, "segment_span": [7, 25], "characterOffsetBegin": 65, "originalText": "potential", "ArgType": null, "before": " "}, {"index": 14, "word": "expectation", "lemma": "expectation", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [7, 25], "characterOffsetBegin": 75, "originalText": "expectation", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 88, "segment_span": [7, 25], "characterOffsetBegin": 87, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [7, 25], "characterOffsetBegin": 89, "originalText": "such", "ArgType": null, "before": " "}, {"index": 17, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [7, 25], "characterOffsetBegin": 94, "originalText": "cases", "ArgType": null, "before": " "}, {"index": 18, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [7, 25], "characterOffsetBegin": 100, "originalText": "in", "ArgType": null, "before": " "}, {"index": 19, "word": "fact", "lemma": "fact", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [7, 25], "characterOffsetBegin": 103, "originalText": "fact", "ArgType": null, "before": " "}, {"index": 20, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 111, "segment_span": [7, 25], "characterOffsetBegin": 108, "originalText": "can", "ArgType": null, "before": " "}, {"index": 21, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 114, "segment_span": [7, 25], "characterOffsetBegin": 112, "originalText": "be", "ArgType": null, "before": " "}, {"index": 22, "word": "shown", "is_pass": true, "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 120, "segment_span": [7, 25], "tense": "N", "characterOffsetBegin": 115, "originalText": "shown", "has_aux": true, "ArgType": null, "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 123, "segment_span": [7, 25], "characterOffsetBegin": 121, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 126, "segment_span": [7, 25], "characterOffsetBegin": 124, "originalText": "be", "ArgType": null, "before": " "}, {"index": 25, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 134, "segment_span": [7, 25], "characterOffsetBegin": 127, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 136, "characterOffsetBegin": 135, "originalText": ".", "ArgType": null, "before": " "}], "text": "An important conclusion of this paper is that , contrary to this potential expectation , such cases in fact can be shown to be regular ."}]}, {"title": "Syllabification in Finite State OT", "num": 3, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 6], "characterOffsetBegin": 3, "originalText": "order", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 11, "segment_span": [0, 6], "characterOffsetBegin": 9, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "illustrate", "lemma": "illustrate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 6], "tense": "B", "characterOffsetBegin": 12, "originalText": "illustrate", "ArgType": null, "before": " "}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 26, "segment_span": [0, 6], "characterOffsetBegin": 23, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 6], "characterOffsetBegin": 27, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 37, "segment_span": [6, 31], "characterOffsetBegin": 36, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 40, "segment_span": [6, 31], "characterOffsetBegin": 38, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 9, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 45, "segment_span": [6, 31], "characterOffsetBegin": 41, "originalText": "will", "ArgType": null, "before": " "}, {"index": 10, "word": "start", "lemma": "start", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 51, "segment_span": [6, 31], "tense": "B", "characterOffsetBegin": 46, "originalText": "start", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 11, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [6, 31], "characterOffsetBegin": 52, "originalText": "with", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [6, 31], "characterOffsetBegin": 57, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [6, 31], "characterOffsetBegin": 59, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 14, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [6, 31], "characterOffsetBegin": 66, "originalText": "state", "ArgType": null, "before": " "}, {"index": 15, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [6, 31], "characterOffsetBegin": 72, "originalText": "implementation", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [6, 31], "characterOffsetBegin": 87, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [6, 31], "characterOffsetBegin": 90, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [6, 31], "characterOffsetBegin": 94, "originalText": "syllabification", "ArgType": null, "before": " "}, {"index": 19, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [6, 31], "characterOffsetBegin": 110, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [6, 31], "characterOffsetBegin": 119, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "presented", "lemma": "present", "after": " ", "pos": "VBN", "characterOffsetEnd": 131, "segment_span": [6, 31], "characterOffsetBegin": 122, "originalText": "presented", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 134, "segment_span": [6, 31], "characterOffsetBegin": 132, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "chapter", "lemma": "chapter", "after": " ", "pos": "NN", "characterOffsetEnd": 142, "segment_span": [6, 31], "characterOffsetBegin": 135, "originalText": "chapter", "ArgType": null, "before": " "}, {"index": 24, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 144, "segment_span": [6, 31], "characterOffsetBegin": 143, "originalText": "6", "ArgType": null, "before": " "}, {"index": 25, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 147, "segment_span": [6, 31], "characterOffsetBegin": 145, "originalText": "of", "ArgType": null, "before": " "}, {"index": 26, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 150, "segment_span": [6, 31], "characterOffsetBegin": 149, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 27, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 157, "segment_span": [6, 31], "characterOffsetBegin": 151, "originalText": "Prince", "ArgType": null, "before": " "}, {"index": 28, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 160, "segment_span": [6, 31], "characterOffsetBegin": 158, "originalText": "et", "ArgType": null, "before": " "}, {"index": 29, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 164, "segment_span": [6, 31], "characterOffsetBegin": 161, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 30, "word": "1993", "lemma": "1993", "after": " ", "pos": "CD", "characterOffsetEnd": 169, "segment_span": [6, 31], "characterOffsetBegin": 165, "originalText": "1993", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 171, "segment_span": [6, 31], "characterOffsetBegin": 170, "originalText": ")", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 174, "characterOffsetBegin": 173, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In order to illustrate our approach , we will start with a finite state implementation of the syllabification analysis as presented in chapter 6 of ( Prince et al. 1993 ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 11], "characterOffsetBegin": 5, "originalText": "section", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 13, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "heavily", "lemma": "heavily", "after": " ", "pos": "RB", "characterOffsetEnd": 23, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "heavily", "ArgType": null, "before": " "}, {"index": 5, "word": "based", "is_pass": true, "lemma": "base", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 24, "originalText": "based", "ArgType": null, "before": " "}, {"index": 6, "word": "on", "lemma": "on", "after": "  ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 11], "characterOffsetBegin": 30, "originalText": "on", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 35, "segment_span": [0, 11], "characterOffsetBegin": 34, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 8, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 36, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 9, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 50, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 51, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 55, "segment_span": [0, 11], "characterOffsetBegin": 54, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 12, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 61, "segment_span": [11, 21], "characterOffsetBegin": 56, "originalText": "which", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [11, 21], "characterOffsetBegin": 62, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "reader", "lemma": "reader", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [11, 21], "characterOffsetBegin": 66, "originalText": "reader", "ArgType": "subj", "before": " "}, {"index": 15, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 79, "segment_span": [11, 21], "characterOffsetBegin": 73, "originalText": "should", "ArgType": null, "before": " "}, {"index": 16, "word": "consult", "lemma": "consult", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 87, "segment_span": [11, 21], "tense": "B", "characterOffsetBegin": 80, "originalText": "consult", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [11, 21], "characterOffsetBegin": 88, "originalText": "for", "ArgType": null, "before": " "}, {"index": 18, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 96, "segment_span": [11, 21], "characterOffsetBegin": 92, "originalText": "more", "ArgType": null, "before": " "}, {"index": 19, "word": "explanation", "lemma": "explanation", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [11, 21], "characterOffsetBegin": 97, "originalText": "explanation", "ArgType": null, "before": " "}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 112, "segment_span": [11, 21], "characterOffsetBegin": 109, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 121, "segment_span": [11, 21], "characterOffsetBegin": 113, "originalText": "examples", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 123, "characterOffsetBegin": 122, "originalText": ".", "ArgType": null, "before": " "}], "text": "This section is heavily based on ( Karttunen 1998 ) , which the reader should consult for more explanation and examples ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "inputs", "lemma": "input", "after": " ", "pos": "NNS", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "inputs", "ArgType": "subj", "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 13, "segment_span": [0, 12], "characterOffsetBegin": 11, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 12], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 12], "characterOffsetBegin": 18, "originalText": "syllabification", "ArgType": null, "before": " "}, {"index": 6, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 12], "characterOffsetBegin": 34, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 40, "segment_span": [0, 12], "characterOffsetBegin": 37, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 50, "segment_span": [0, 12], "characterOffsetBegin": 41, "originalText": "sequences", "ArgType": "verb", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [0, 12], "characterOffsetBegin": 51, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "consonants", "lemma": "consonant", "after": " ", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 12], "characterOffsetBegin": 54, "originalText": "consonants", "ArgType": null, "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 68, "segment_span": [0, 12], "characterOffsetBegin": 65, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "vowels", "lemma": "vowel", "after": " ", "pos": "NNS", "characterOffsetEnd": 75, "segment_span": [0, 12], "characterOffsetBegin": 69, "originalText": "vowels", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 77, "characterOffsetBegin": 76, "originalText": ".", "ArgType": null, "before": " "}], "text": "The inputs to the syllabification OT are sequences of consonants and vowels ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 16], "characterOffsetBegin": 4, "originalText": "input", "ArgType": null, "before": " "}, {"index": 3, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 14, "segment_span": [0, 16], "characterOffsetBegin": 10, "originalText": "will", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 17, "segment_span": [0, 16], "characterOffsetBegin": 15, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 18, "originalText": "marked", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 27, "segment_span": [0, 16], "characterOffsetBegin": 25, "originalText": "up", "ArgType": null, "before": " "}, {"index": 7, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 16], "characterOffsetBegin": 28, "originalText": "with", "ArgType": null, "before": " "}, {"index": 8, "word": "onset", "lemma": "onset", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 16], "characterOffsetBegin": 33, "originalText": "onset", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 40, "segment_span": [0, 16], "characterOffsetBegin": 39, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "nucleus", "lemma": "nucleus", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 16], "characterOffsetBegin": 41, "originalText": "nucleus", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 50, "segment_span": [0, 16], "characterOffsetBegin": 49, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "coda", "lemma": "coda", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 16], "characterOffsetBegin": 51, "originalText": "coda", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 59, "segment_span": [0, 16], "characterOffsetBegin": 56, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 68, "segment_span": [0, 16], "characterOffsetBegin": 60, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 15, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 77, "segment_span": [0, 16], "characterOffsetBegin": 69, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 16, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 79, "segment_span": [0, 16], "characterOffsetBegin": 78, "originalText": ";", "ArgType": null, "before": " "}, {"index": 17, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 85, "segment_span": [16, 37], "characterOffsetBegin": 80, "originalText": "where", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 87, "segment_span": [16, 37], "characterOffsetBegin": 86, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "syllable", "lemma": "syllable", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [16, 37], "characterOffsetBegin": 88, "originalText": "syllable", "ArgType": "subj", "before": " "}, {"index": 20, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 99, "segment_span": [16, 37], "characterOffsetBegin": 97, "originalText": "is", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 101, "segment_span": [16, 37], "characterOffsetBegin": 100, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [16, 37], "characterOffsetBegin": 102, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [16, 37], "characterOffsetBegin": 111, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 116, "segment_span": [16, 37], "characterOffsetBegin": 114, "originalText": "an", "ArgType": null, "before": " "}, {"index": 25, "word": "optional", "lemma": "optional", "after": " ", "pos": "JJ", "characterOffsetEnd": 125, "segment_span": [16, 37], "characterOffsetBegin": 117, "originalText": "optional", "ArgType": null, "before": " "}, {"index": 26, "word": "onset", "lemma": "onset", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [16, 37], "characterOffsetBegin": 126, "originalText": "onset", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 133, "segment_span": [16, 37], "characterOffsetBegin": 132, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 142, "segment_span": [16, 37], "characterOffsetBegin": 134, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 29, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 145, "segment_span": [16, 37], "characterOffsetBegin": 143, "originalText": "by", "ArgType": null, "before": " "}, {"index": 30, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 147, "segment_span": [16, 37], "characterOffsetBegin": 146, "originalText": "a", "ArgType": null, "before": " "}, {"index": 31, "word": "nucleus", "lemma": "nucleus", "after": " ", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [16, 37], "characterOffsetBegin": 148, "originalText": "nucleus", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 157, "segment_span": [16, 37], "characterOffsetBegin": 156, "originalText": ",", "ArgType": null, "before": " "}, {"index": 33, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 166, "segment_span": [16, 37], "characterOffsetBegin": 158, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 34, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 169, "segment_span": [16, 37], "characterOffsetBegin": 167, "originalText": "by", "ArgType": null, "before": " "}, {"index": 35, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 172, "segment_span": [16, 37], "characterOffsetBegin": 170, "originalText": "an", "ArgType": null, "before": " "}, {"index": 36, "word": "optional", "lemma": "optional", "after": " ", "pos": "JJ", "characterOffsetEnd": 181, "segment_span": [16, 37], "characterOffsetBegin": 173, "originalText": "optional", "ArgType": null, "before": " "}, {"index": 37, "word": "coda", "lemma": "coda", "after": " ", "pos": "NN", "characterOffsetEnd": 186, "segment_span": [16, 37], "characterOffsetBegin": 182, "originalText": "coda", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 188, "characterOffsetBegin": 187, "originalText": ".", "ArgType": null, "before": " "}], "text": "The input will be marked up with onset , nucleus , coda and unparsed brackets ; where a syllable is a sequence of an optional onset , followed by a nucleus , followed by an optional coda ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "input", "ArgType": null, "before": " "}, {"index": 3, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 14, "segment_span": [0, 13], "characterOffsetBegin": 10, "originalText": "will", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 17, "segment_span": [0, 13], "characterOffsetBegin": 15, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 18, "originalText": "marked", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 27, "segment_span": [0, 13], "characterOffsetBegin": 25, "originalText": "up", "ArgType": null, "before": " "}, {"index": 7, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 13], "characterOffsetBegin": 28, "originalText": "as", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 32, "segment_span": [0, 13], "characterOffsetBegin": 31, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 13], "characterOffsetBegin": 33, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [0, 13], "characterOffsetBegin": 42, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 45, "originalText": "such", "ArgType": null, "before": " "}, {"index": 12, "word": "syllables", "lemma": "syllable", "after": " ", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [0, 13], "characterOffsetBegin": 50, "originalText": "syllables", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 61, "segment_span": [0, 13], "characterOffsetBegin": 60, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 67, "segment_span": [13, 21], "characterOffsetBegin": 62, "originalText": "where", "ArgType": null, "before": " "}, {"index": 15, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [13, 21], "characterOffsetBegin": 68, "originalText": "at", "ArgType": null, "before": " "}, {"index": 16, "word": "arbitrary", "lemma": "arbitrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [13, 21], "characterOffsetBegin": 71, "originalText": "arbitrary", "ArgType": null, "before": " "}, {"index": 17, "word": "places", "lemma": "place", "after": " ", "pos": "NNS", "characterOffsetEnd": 87, "segment_span": [13, 21], "characterOffsetBegin": 81, "originalText": "places", "ArgType": null, "before": " "}, {"index": 18, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [13, 21], "characterOffsetBegin": 88, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 19, "word": "material", "lemma": "material", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [13, 21], "characterOffsetBegin": 97, "originalText": "material", "ArgType": "subj", "before": " "}, {"index": 20, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 109, "segment_span": [13, 21], "characterOffsetBegin": 106, "originalText": "can", "ArgType": null, "before": " "}, {"index": 21, "word": "intervene", "lemma": "intervene", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 119, "segment_span": [13, 21], "tense": "B", "characterOffsetBegin": 110, "originalText": "intervene", "has_aux": true, "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 121, "characterOffsetBegin": 120, "originalText": ".", "ArgType": null, "before": " "}], "text": "The input will be marked up as a sequence of such syllables , where at arbitrary places unparsed material can intervene ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "assumption", "lemma": "assumption", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 3], "characterOffsetBegin": 4, "originalText": "assumption", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 3], "tense": "Z", "characterOffsetBegin": 15, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [3, 14], "characterOffsetBegin": 18, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 25, "segment_span": [3, 14], "characterOffsetBegin": 23, "originalText": "an", "ArgType": null, "before": " "}, {"index": 6, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 34, "segment_span": [3, 14], "characterOffsetBegin": 26, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 7, "word": "vowel", "lemma": "vowel", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [3, 14], "characterOffsetBegin": 35, "originalText": "vowel", "ArgType": null, "before": " "}, {"index": 8, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 43, "segment_span": [3, 14], "characterOffsetBegin": 41, "originalText": "or", "ArgType": null, "before": " "}, {"index": 9, "word": "consonant", "lemma": "consonant", "after": " ", "pos": "JJ", "characterOffsetEnd": 53, "segment_span": [3, 14], "characterOffsetBegin": 44, "originalText": "consonant", "ArgType": null, "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 56, "segment_span": [3, 14], "characterOffsetBegin": 54, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 60, "segment_span": [3, 14], "characterOffsetBegin": 57, "originalText": "not", "ArgType": null, "before": " "}, {"index": 12, "word": "spelled", "is_pass": true, "lemma": "spell", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 68, "segment_span": [3, 14], "tense": "N", "characterOffsetBegin": 61, "originalText": "spelled", "ArgType": null, "before": " "}, {"index": 13, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 72, "segment_span": [3, 14], "characterOffsetBegin": 69, "originalText": "out", "ArgType": null, "before": " "}, {"index": 14, "word": "phonetically", "lemma": "phonetically", "after": " ", "pos": "RB", "characterOffsetEnd": 85, "segment_span": [3, 14], "characterOffsetBegin": 73, "originalText": "phonetically", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 87, "characterOffsetBegin": 86, "originalText": ".", "ArgType": null, "before": " "}], "text": "The assumption is that an unparsed vowel or consonant is not spelled out phonetically ."}, {"tokens": [{"index": 1, "word": "Onsets", "lemma": "onset", "after": " ", "pos": "NNS", "characterOffsetEnd": 6, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "Onsets", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 8, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "nuclei", "lemma": "nucleus", "after": " ", "pos": "NNS", "characterOffsetEnd": 15, "segment_span": [0, 12], "characterOffsetBegin": 9, "originalText": "nuclei", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 19, "segment_span": [0, 12], "characterOffsetBegin": 16, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "codas", "lemma": "coda", "after": " ", "pos": "NNS", "characterOffsetEnd": 25, "segment_span": [0, 12], "characterOffsetBegin": 20, "originalText": "codas", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 29, "segment_span": [0, 12], "characterOffsetBegin": 26, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 34, "segment_span": [0, 12], "characterOffsetBegin": 30, "originalText": "also", "ArgType": null, "before": " "}, {"index": 8, "word": "allowed", "is_pass": true, "lemma": "allow", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 42, "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 35, "originalText": "allowed", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 45, "segment_span": [0, 12], "characterOffsetBegin": 43, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 48, "segment_span": [0, 12], "characterOffsetBegin": 46, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 54, "segment_span": [0, 12], "characterOffsetBegin": 49, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 12, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 56, "segment_span": [0, 12], "characterOffsetBegin": 55, "originalText": ";", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [12, 20], "characterOffsetBegin": 57, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "phonetic", "lemma": "phonetic", "after": " ", "pos": "JJ", "characterOffsetEnd": 69, "segment_span": [12, 20], "characterOffsetBegin": 61, "originalText": "phonetic", "ArgType": null, "before": " "}, {"index": 15, "word": "interpretation", "lemma": "interpretation", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [12, 20], "characterOffsetBegin": 70, "originalText": "interpretation", "ArgType": "subj", "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 87, "segment_span": [12, 20], "characterOffsetBegin": 85, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 92, "segment_span": [12, 20], "characterOffsetBegin": 88, "originalText": "such", "ArgType": null, "before": " "}, {"index": 18, "word": "constituents", "lemma": "constituent", "after": " ", "pos": "NNS", "characterOffsetEnd": 105, "segment_span": [12, 20], "characterOffsetBegin": 93, "originalText": "constituents", "ArgType": null, "before": " "}, {"index": 19, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 108, "segment_span": [12, 20], "characterOffsetBegin": 106, "originalText": "is", "ArgType": null, "before": " "}, {"index": 20, "word": "epenthesis", "lemma": "epenthesis", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [12, 20], "characterOffsetBegin": 109, "originalText": "epenthesis", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 121, "characterOffsetBegin": 120, "originalText": ".", "ArgType": null, "before": " "}], "text": "Onsets , nuclei and codas are also allowed to be empty ; the phonetic interpretation of such constituents is epenthesis ."}, {"tokens": [{"index": 1, "word": "First", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 5, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "First", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 8, "segment_span": [0, 8], "characterOffsetBegin": 6, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "give", "lemma": "give", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 8], "tense": "P", "characterOffsetBegin": 9, "originalText": "give", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 8], "characterOffsetBegin": 14, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 16, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 26, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 8, "word": "abbreviations", "lemma": "abbreviation", "after": " ", "pos": "NNS", "characterOffsetEnd": 46, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": "abbreviations", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 48, "characterOffsetBegin": 47, "originalText": ":", "ArgType": null, "before": " "}], "text": "First we give a number of simple abbreviations :"}, {"tokens": [{"index": 1, "word": "Following", "lemma": "follow", "after": "  ", "pos": "VBG", "characterOffsetEnd": 9, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "Following", "ArgType": null, "before": ""}, {"index": 2, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 20, "segment_span": [0, 13], "characterOffsetBegin": 11, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 22, "segment_span": [0, 13], "characterOffsetBegin": 21, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 26, "segment_span": [0, 13], "characterOffsetBegin": 22, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 27, "segment_span": [0, 13], "characterOffsetBegin": 26, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 30, "segment_span": [0, 13], "characterOffsetBegin": 29, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 7, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 13], "characterOffsetBegin": 31, "originalText": "Gen", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 37, "segment_span": [0, 13], "characterOffsetBegin": 35, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "formalized", "is_pass": true, "lemma": "formalize", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 48, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 38, "originalText": "formalized", "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 13], "characterOffsetBegin": 49, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 13], "characterOffsetBegin": 52, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "fig", "lemma": "fig", "after": "   ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 13], "characterOffsetBegin": 55, "originalText": "fig", "ArgType": null, "before": " "}, {"index": 13, "word": "CREF", "lemma": "cref", "after": "   ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 13], "characterOffsetBegin": 61, "originalText": "CREF", "ArgType": null, "before": "   "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 69, "characterOffsetBegin": 68, "originalText": ".", "ArgType": null, "before": "   "}], "text": "Following Karttunen ( 0000 ) , Gen is formalized as in fig CREF ."}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 6, "segment_span": [0, 22], "characterOffsetBegin": 5, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "parse", "lemma": "parse", "after": " ", "pos": "VB", "characterOffsetEnd": 12, "segment_span": [0, 22], "characterOffsetBegin": 7, "originalText": "parse", "ArgType": "subj", "before": " "}, {"index": 4, "word": "introduces", "lemma": "introduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 23, "segment_span": [0, 22], "tense": "Z", "characterOffsetBegin": 13, "originalText": "introduces", "ArgType": "verb", "before": " "}, {"index": 5, "word": "onset", "lemma": "onset", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 22], "characterOffsetBegin": 24, "originalText": "onset", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 31, "segment_span": [0, 22], "characterOffsetBegin": 30, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "coda", "lemma": "coda", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 22], "characterOffsetBegin": 32, "originalText": "coda", "ArgType": null, "before": " "}, {"index": 8, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 39, "segment_span": [0, 22], "characterOffsetBegin": 37, "originalText": "or", "ArgType": null, "before": " "}, {"index": 9, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 48, "segment_span": [0, 22], "characterOffsetBegin": 40, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 10, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [0, 22], "characterOffsetBegin": 49, "originalText": "brackets", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "around", "lemma": "around", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 22], "characterOffsetBegin": 58, "originalText": "around", "ArgType": null, "before": " "}, {"index": 12, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 22], "characterOffsetBegin": 65, "originalText": "each", "ArgType": null, "before": " "}, {"index": 13, "word": "consonant", "lemma": "consonant", "after": " ", "pos": "JJ", "characterOffsetEnd": 79, "segment_span": [0, 22], "characterOffsetBegin": 70, "originalText": "consonant", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 81, "segment_span": [0, 22], "characterOffsetBegin": 80, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 85, "segment_span": [0, 22], "characterOffsetBegin": 82, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "nucleus", "lemma": "nucleus", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [0, 22], "characterOffsetBegin": 86, "originalText": "nucleus", "ArgType": null, "before": " "}, {"index": 17, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 96, "segment_span": [0, 22], "characterOffsetBegin": 94, "originalText": "or", "ArgType": null, "before": " "}, {"index": 18, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 105, "segment_span": [0, 22], "characterOffsetBegin": 97, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 19, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 114, "segment_span": [0, 22], "characterOffsetBegin": 106, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 20, "word": "around", "lemma": "around", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [0, 22], "characterOffsetBegin": 115, "originalText": "around", "ArgType": null, "before": " "}, {"index": 21, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 126, "segment_span": [0, 22], "characterOffsetBegin": 122, "originalText": "each", "ArgType": null, "before": " "}, {"index": 22, "word": "vowel", "lemma": "vowel", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [0, 22], "characterOffsetBegin": 127, "originalText": "vowel", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 134, "characterOffsetBegin": 133, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here , parse introduces onset , coda or unparsed brackets around each consonant , and nucleus or unparsed brackets around each vowel ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "The", "ArgType": "subj", "before": ""}, {"index": 2, "word": "replace", "lemma": "replace", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 9], "tense": "B", "characterOffsetBegin": 4, "originalText": "replace", "ArgType": "verb", "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 12, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "T", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 17, "segment_span": [0, 9], "characterOffsetBegin": 16, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "Left", "lemma": "leave", "after": " ", "pos": "VBN", "characterOffsetEnd": 22, "segment_span": [0, 9], "characterOffsetBegin": 18, "originalText": "Left", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 24, "segment_span": [0, 9], "characterOffsetBegin": 23, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "Right", "lemma": "Right", "after": " ", "pos": "NNP", "characterOffsetEnd": 30, "segment_span": [0, 9], "characterOffsetBegin": 25, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 32, "segment_span": [0, 9], "characterOffsetBegin": 31, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [9, 28], "characterOffsetBegin": 33, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 11, "word": "applies", "lemma": "apply", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 51, "segment_span": [9, 28], "tense": "Z", "characterOffsetBegin": 44, "originalText": "applies", "ArgType": null, "before": " "}, {"index": 12, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [9, 28], "characterOffsetBegin": 52, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 13, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [9, 28], "characterOffsetBegin": 63, "originalText": "T", "ArgType": null, "before": " "}, {"index": 14, "word": "obligatory", "lemma": "obligatory", "after": " ", "pos": "JJ", "characterOffsetEnd": 75, "segment_span": [9, 28], "characterOffsetBegin": 65, "originalText": "obligatory", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "within", "lemma": "within", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [9, 28], "characterOffsetBegin": 76, "originalText": "within", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 86, "segment_span": [9, 28], "characterOffsetBegin": 83, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "contexts", "lemma": "context", "after": " ", "pos": "NNS", "characterOffsetEnd": 95, "segment_span": [9, 28], "characterOffsetBegin": 87, "originalText": "contexts", "ArgType": null, "before": " "}, {"index": 18, "word": "specified", "lemma": "specify", "after": " ", "pos": "VBN", "characterOffsetEnd": 105, "segment_span": [9, 28], "characterOffsetBegin": 96, "originalText": "specified", "ArgType": null, "before": " "}, {"index": 19, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [9, 28], "characterOffsetBegin": 106, "originalText": "by", "ArgType": null, "before": " "}, {"index": 20, "word": "Left", "lemma": "leave", "after": " ", "pos": "VBN", "characterOffsetEnd": 113, "segment_span": [9, 28], "characterOffsetBegin": 109, "originalText": "Left", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 117, "segment_span": [9, 28], "characterOffsetBegin": 114, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "Right", "lemma": "right", "after": "  ", "pos": "RB", "characterOffsetEnd": 123, "segment_span": [9, 28], "characterOffsetBegin": 118, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 126, "segment_span": [9, 28], "characterOffsetBegin": 125, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 24, "word": "Gerdemann", "lemma": "Gerdemann", "after": " ", "pos": "NNP", "characterOffsetEnd": 136, "segment_span": [9, 28], "characterOffsetBegin": 127, "originalText": "Gerdemann", "ArgType": null, "before": " "}, {"index": 25, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 140, "segment_span": [9, 28], "characterOffsetBegin": 137, "originalText": "and", "ArgType": null, "before": " "}, {"index": 26, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 146, "segment_span": [9, 28], "characterOffsetBegin": 141, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 27, "word": "1999", "lemma": "1999", "after": " ", "pos": "CD", "characterOffsetEnd": 151, "segment_span": [9, 28], "characterOffsetBegin": 147, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 153, "segment_span": [9, 28], "characterOffsetBegin": 152, "originalText": ")", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 156, "characterOffsetBegin": 155, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The replace ( T , Left , Right ) transducer applies transducer T obligatory within the contexts specified by Left and Right ( Gerdemann and Noord 1999 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "replace", "lemma": "replace", "after": " ", "pos": "VB", "characterOffsetEnd": 11, "segment_span": [0, 26], "characterOffsetBegin": 4, "originalText": "replace", "ArgType": null, "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 13, "segment_span": [0, 26], "characterOffsetBegin": 12, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 26], "characterOffsetBegin": 14, "originalText": "T", "ArgType": null, "before": " "}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 17, "segment_span": [0, 26], "characterOffsetBegin": 16, "originalText": ")", "ArgType": null, "before": " "}, {"index": 6, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 26], "characterOffsetBegin": 18, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 31, "segment_span": [0, 26], "characterOffsetBegin": 29, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 26], "characterOffsetBegin": 32, "originalText": "an", "ArgType": null, "before": " "}, {"index": 9, "word": "abbreviation", "lemma": "abbreviation", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 26], "characterOffsetBegin": 35, "originalText": "abbreviation", "ArgType": "verb", "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 26], "characterOffsetBegin": 48, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "replace", "lemma": "replace", "after": " ", "pos": "VB", "characterOffsetEnd": 59, "segment_span": [0, 26], "characterOffsetBegin": 52, "originalText": "replace", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 61, "segment_span": [0, 26], "characterOffsetBegin": 60, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 26], "characterOffsetBegin": 62, "originalText": "T", "ArgType": "dobj", "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 65, "segment_span": [0, 26], "characterOffsetBegin": 64, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 67, "segment_span": [0, 26], "characterOffsetBegin": 66, "originalText": "[", "ArgType": null, "before": " "}, {"index": 16, "word": "]", "lemma": "-rsb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [0, 26], "characterOffsetBegin": 67, "originalText": "]", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 70, "segment_span": [0, 26], "characterOffsetBegin": 69, "originalText": ",", "ArgType": null, "before": " "}, {"index": 18, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 72, "segment_span": [0, 26], "characterOffsetBegin": 71, "originalText": "[", "ArgType": null, "before": " "}, {"index": 19, "word": "]", "lemma": "-rsb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 73, "segment_span": [0, 26], "characterOffsetBegin": 72, "originalText": "]", "ArgType": null, "before": ""}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 75, "segment_span": [0, 26], "characterOffsetBegin": 74, "originalText": ")", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 77, "segment_span": [0, 26], "characterOffsetBegin": 76, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 82, "segment_span": [0, 26], "characterOffsetBegin": 78, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 23, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 26], "characterOffsetBegin": 83, "originalText": "T", "ArgType": null, "before": " "}, {"index": 24, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 87, "segment_span": [0, 26], "characterOffsetBegin": 85, "originalText": "is", "ArgType": null, "before": " "}, {"index": 25, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBN", "characterOffsetEnd": 95, "segment_span": [0, 26], "characterOffsetBegin": 88, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 26, "word": "everywhere", "lemma": "everywhere", "after": " ", "pos": "RB", "characterOffsetEnd": 106, "segment_span": [0, 26], "characterOffsetBegin": 96, "originalText": "everywhere", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 108, "characterOffsetBegin": 107, "originalText": ".", "ArgType": null, "before": " "}], "text": "The replace ( T ) transducer is an abbreviation for replace ( T , [ ] , [ ] ) , i.e. T is applied everywhere ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "overparse", "lemma": "overparse", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 17], "characterOffsetBegin": 4, "originalText": "overparse", "ArgType": null, "before": " "}, {"index": 3, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 17], "characterOffsetBegin": 14, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 4, "word": "introduces", "lemma": "introduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 35, "segment_span": [0, 17], "tense": "Z", "characterOffsetBegin": 25, "originalText": "introduces", "ArgType": "verb", "before": " "}, {"index": 5, "word": "optional", "lemma": "optional", "after": " ", "pos": "JJ", "characterOffsetEnd": 44, "segment_span": [0, 17], "characterOffsetBegin": 36, "originalText": "optional", "ArgType": null, "before": " "}, {"index": 6, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 46, "segment_span": [0, 17], "characterOffsetBegin": 45, "originalText": "`", "ArgType": null, "before": " "}, {"index": 7, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [0, 17], "characterOffsetBegin": 47, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 8, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 54, "segment_span": [0, 17], "characterOffsetBegin": 53, "originalText": "'", "ArgType": null, "before": " "}, {"index": 9, "word": "constituents", "lemma": "constituent", "after": " ", "pos": "NNS", "characterOffsetEnd": 67, "segment_span": [0, 17], "characterOffsetBegin": 55, "originalText": "constituents", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 17], "characterOffsetBegin": 68, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [0, 17], "characterOffsetBegin": 71, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 17], "characterOffsetBegin": 75, "originalText": "input", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 82, "segment_span": [0, 17], "characterOffsetBegin": 81, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 88, "segment_span": [0, 17], "characterOffsetBegin": 83, "originalText": "using", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 92, "segment_span": [0, 17], "characterOffsetBegin": 89, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "intro_each_pos", "lemma": "intro_each_pos", "after": " ", "pos": "NNS", "characterOffsetEnd": 107, "segment_span": [0, 17], "characterOffsetBegin": 93, "originalText": "intro_each_pos", "ArgType": null, "before": " "}, {"index": 17, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 116, "segment_span": [0, 17], "characterOffsetBegin": 108, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 118, "characterOffsetBegin": 117, "originalText": ".", "ArgType": null, "before": " "}], "text": "The overparse transducer introduces optional ` empty ' constituents in the input , using the intro_each_pos operator ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 16], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "definitions", "lemma": "definition", "after": " ", "pos": "NNS", "characterOffsetEnd": 18, "segment_span": [0, 16], "characterOffsetBegin": 7, "originalText": "definitions", "ArgType": null, "before": " "}, {"index": 4, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 16], "characterOffsetBegin": 19, "originalText": "for", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 16], "characterOffsetBegin": 23, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 38, "segment_span": [0, 16], "characterOffsetBegin": 27, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 40, "segment_span": [0, 16], "characterOffsetBegin": 39, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 43, "segment_span": [0, 16], "characterOffsetBegin": 41, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 9, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 48, "segment_span": [0, 16], "characterOffsetBegin": 44, "originalText": "will", "ArgType": null, "before": " "}, {"index": 10, "word": "deviate", "lemma": "deviate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 56, "segment_span": [0, 16], "tense": "B", "characterOffsetBegin": 49, "originalText": "deviate", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 11, "word": "somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 65, "segment_span": [0, 16], "characterOffsetBegin": 57, "originalText": "somewhat", "ArgType": null, "before": " "}, {"index": 12, "word": "from", "lemma": "from", "after": "  ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 16], "characterOffsetBegin": 66, "originalText": "from", "ArgType": null, "before": " "}, {"index": 13, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 81, "segment_span": [0, 16], "characterOffsetBegin": 72, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 83, "segment_span": [0, 16], "characterOffsetBegin": 82, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 87, "segment_span": [0, 16], "characterOffsetBegin": 83, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 88, "segment_span": [0, 16], "characterOffsetBegin": 87, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 91, "characterOffsetBegin": 90, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In the definitions for the constraints , we will deviate somewhat from Karttunen ( 0000 ) ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "his", "lemma": "his", "after": " ", "pos": "PRP$", "characterOffsetEnd": 6, "segment_span": [0, 12], "characterOffsetBegin": 3, "originalText": "his", "ArgType": null, "before": " "}, {"index": 3, "word": "formalization", "lemma": "formalization", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": "formalization", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 22, "segment_span": [0, 12], "characterOffsetBegin": 21, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 12], "characterOffsetBegin": 23, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 12], "characterOffsetBegin": 25, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 7, "word": "simply", "lemma": "simply", "after": " ", "pos": "RB", "characterOffsetEnd": 42, "segment_span": [0, 12], "characterOffsetBegin": 36, "originalText": "simply", "ArgType": null, "before": " "}, {"index": 8, "word": "describes", "lemma": "describe", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 52, "segment_span": [0, 12], "tense": "Z", "characterOffsetBegin": 43, "originalText": "describes", "ArgType": "verb", "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 56, "segment_span": [0, 12], "characterOffsetBegin": 53, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 12], "characterOffsetBegin": 57, "originalText": "set", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 12], "characterOffsetBegin": 61, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 71, "segment_span": [0, 12], "characterOffsetBegin": 64, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 13, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 77, "segment_span": [12, 18], "characterOffsetBegin": 72, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 14, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 80, "segment_span": [12, 18], "characterOffsetBegin": 78, "originalText": "do", "ArgType": null, "before": " "}, {"index": 15, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 84, "segment_span": [12, 18], "characterOffsetBegin": 81, "originalText": "not", "ArgType": null, "before": " "}, {"index": 16, "word": "violate", "lemma": "violate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 92, "segment_span": [12, 18], "tense": "B", "characterOffsetBegin": 85, "originalText": "violate", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [12, 18], "characterOffsetBegin": 93, "originalText": "that", "ArgType": null, "before": " "}, {"index": 18, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [12, 18], "characterOffsetBegin": 98, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 110, "characterOffsetBegin": 109, "originalText": ".", "ArgType": null, "before": " "}], "text": "In his formalization , a constraint simply describes the set of strings which do not violate that constraint ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 48], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "turns", "lemma": "turn", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 8, "segment_span": [0, 48], "tense": "Z", "characterOffsetBegin": 3, "originalText": "turns", "ArgType": "verb", "before": " "}, {"index": 3, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 12, "segment_span": [0, 48], "characterOffsetBegin": 9, "originalText": "out", "ArgType": null, "before": " "}, {"index": 4, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 15, "segment_span": [0, 48], "characterOffsetBegin": 13, "originalText": "to", "ArgType": null, "before": " "}, {"index": 5, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 18, "segment_span": [0, 48], "characterOffsetBegin": 16, "originalText": "be", "ArgType": null, "before": " "}, {"index": 6, "word": "easier", "lemma": "easier", "after": " ", "pos": "JJR", "characterOffsetEnd": 25, "segment_span": [0, 48], "characterOffsetBegin": 19, "originalText": "easier", "ArgType": null, "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 48], "characterOffsetBegin": 26, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 33, "segment_span": [0, 48], "characterOffsetBegin": 30, "originalText": "our", "ArgType": null, "before": " "}, {"index": 9, "word": "extension", "lemma": "extension", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 48], "characterOffsetBegin": 34, "originalText": "extension", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 48], "characterOffsetBegin": 44, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 57, "segment_span": [0, 48], "characterOffsetBegin": 48, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 59, "segment_span": [0, 48], "characterOffsetBegin": 58, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 63, "segment_span": [0, 48], "characterOffsetBegin": 59, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 64, "segment_span": [0, 48], "characterOffsetBegin": 63, "originalText": ")", "ArgType": null, "before": ""}, {"index": 15, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 67, "segment_span": [0, 48], "characterOffsetBegin": 66, "originalText": "'", "ArgType": null, "before": "  "}, {"index": 16, "word": "s", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 69, "segment_span": [0, 48], "characterOffsetBegin": 68, "originalText": "s", "ArgType": null, "before": " "}, {"index": 17, "word": "formalization", "lemma": "formalization", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [0, 48], "characterOffsetBegin": 70, "originalText": "formalization", "ArgType": null, "before": " "}, {"index": 18, "word": "below", "lemma": "below", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [0, 48], "characterOffsetBegin": 84, "originalText": "below", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 91, "segment_span": [0, 48], "characterOffsetBegin": 90, "originalText": ",", "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 94, "segment_span": [0, 48], "characterOffsetBegin": 92, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 99, "segment_span": [0, 48], "characterOffsetBegin": 95, "originalText": "well", "ArgType": null, "before": " "}, {"index": 22, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 48], "characterOffsetBegin": 100, "originalText": "as", "ArgType": null, "before": " "}, {"index": 23, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 106, "segment_span": [0, 48], "characterOffsetBegin": 103, "originalText": "for", "ArgType": null, "before": " "}, {"index": 24, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 110, "segment_span": [0, 48], "characterOffsetBegin": 107, "originalText": "our", "ArgType": null, "before": " "}, {"index": 25, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 122, "segment_span": [0, 48], "characterOffsetBegin": 111, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 26, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [0, 48], "characterOffsetBegin": 123, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 133, "segment_span": [0, 48], "characterOffsetBegin": 132, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [0, 48], "characterOffsetBegin": 134, "originalText": "if", "ArgType": null, "before": " "}, {"index": 29, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 139, "segment_span": [0, 48], "characterOffsetBegin": 137, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 30, "word": "return", "lemma": "return", "after": " ", "pos": "VBP", "characterOffsetEnd": 146, "segment_span": [0, 48], "characterOffsetBegin": 140, "originalText": "return", "ArgType": null, "before": " "}, {"index": 31, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 149, "segment_span": [0, 48], "characterOffsetBegin": 147, "originalText": "to", "ArgType": null, "before": " "}, {"index": 32, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 153, "segment_span": [0, 48], "characterOffsetBegin": 150, "originalText": "the", "ArgType": null, "before": " "}, {"index": 33, "word": "concept", "lemma": "concept", "after": " ", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [0, 48], "characterOffsetBegin": 154, "originalText": "concept", "ArgType": null, "before": " "}, {"index": 34, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 164, "segment_span": [0, 48], "characterOffsetBegin": 162, "originalText": "of", "ArgType": null, "before": " "}, {"index": 35, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 166, "segment_span": [0, 48], "characterOffsetBegin": 165, "originalText": "a", "ArgType": null, "before": " "}, {"index": 36, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 177, "segment_span": [0, 48], "characterOffsetBegin": 167, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 37, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 180, "segment_span": [0, 48], "characterOffsetBegin": 178, "originalText": "as", "ArgType": null, "before": " "}, {"index": 38, "word": "introduced", "lemma": "introduce", "after": " ", "pos": "VBN", "characterOffsetEnd": 191, "segment_span": [0, 48], "characterOffsetBegin": 181, "originalText": "introduced", "ArgType": null, "before": " "}, {"index": 39, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 194, "segment_span": [0, 48], "characterOffsetBegin": 192, "originalText": "by", "ArgType": null, "before": " "}, {"index": 40, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 202, "segment_span": [0, 48], "characterOffsetBegin": 196, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 41, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 204, "segment_span": [0, 48], "characterOffsetBegin": 203, "originalText": "(", "ArgType": null, "before": " "}, {"index": 42, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 208, "segment_span": [0, 48], "characterOffsetBegin": 204, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 43, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 209, "segment_span": [0, 48], "characterOffsetBegin": 208, "originalText": ")", "ArgType": null, "before": ""}, {"index": 44, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 214, "segment_span": [0, 48], "characterOffsetBegin": 211, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 45, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 225, "segment_span": [0, 48], "characterOffsetBegin": 216, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 46, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 227, "segment_span": [0, 48], "characterOffsetBegin": 226, "originalText": "(", "ArgType": null, "before": " "}, {"index": 47, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 231, "segment_span": [0, 48], "characterOffsetBegin": 227, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 48, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 232, "segment_span": [0, 48], "characterOffsetBegin": 231, "originalText": ")", "ArgType": null, "before": ""}, {"index": 49, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 239, "segment_span": [48, 60], "characterOffsetBegin": 234, "originalText": "where", "ArgType": null, "before": "  "}, {"index": 50, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 241, "segment_span": [48, 60], "characterOffsetBegin": 240, "originalText": "a", "ArgType": null, "before": " "}, {"index": 51, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 252, "segment_span": [48, 60], "characterOffsetBegin": 242, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 52, "word": "adds", "lemma": "add", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 257, "segment_span": [48, 60], "tense": "Z", "characterOffsetBegin": 253, "originalText": "adds", "ArgType": null, "before": " "}, {"index": 53, "word": "marks", "lemma": "mark", "after": " ", "pos": "NNS", "characterOffsetEnd": 263, "segment_span": [48, 60], "characterOffsetBegin": 258, "originalText": "marks", "ArgType": "dobj", "before": " "}, {"index": 54, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 266, "segment_span": [48, 60], "characterOffsetBegin": 264, "originalText": "in", "ArgType": null, "before": " "}, {"index": 55, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 270, "segment_span": [48, 60], "characterOffsetBegin": 267, "originalText": "the", "ArgType": null, "before": " "}, {"index": 56, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 280, "segment_span": [48, 60], "characterOffsetBegin": 271, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 57, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 287, "segment_span": [48, 60], "characterOffsetBegin": 281, "originalText": "string", "ArgType": null, "before": " "}, {"index": 58, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 290, "segment_span": [48, 60], "characterOffsetBegin": 288, "originalText": "at", "ArgType": null, "before": " "}, {"index": 59, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 294, "segment_span": [48, 60], "characterOffsetBegin": 291, "originalText": "the", "ArgType": null, "before": " "}, {"index": 60, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 303, "segment_span": [48, 60], "characterOffsetBegin": 295, "originalText": "position", "ArgType": null, "before": " "}, {"index": 61, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 309, "segment_span": [60, 66], "characterOffsetBegin": 304, "originalText": "where", "ArgType": null, "before": " "}, {"index": 62, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 313, "segment_span": [60, 66], "characterOffsetBegin": 310, "originalText": "the", "ArgType": null, "before": " "}, {"index": 63, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 320, "segment_span": [60, 66], "characterOffsetBegin": 314, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 64, "word": "violates", "lemma": "violate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 329, "segment_span": [60, 66], "tense": "Z", "characterOffsetBegin": 321, "originalText": "violates", "ArgType": null, "before": " "}, {"index": 65, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 333, "segment_span": [60, 66], "characterOffsetBegin": 330, "originalText": "the", "ArgType": null, "before": " "}, {"index": 66, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 344, "segment_span": [60, 66], "characterOffsetBegin": 334, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 67, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 346, "characterOffsetBegin": 345, "originalText": ".", "ArgType": null, "before": " "}], "text": "It turns out to be easier for our extension of Karttunen ( 0000 ) ' s formalization below , as well as for our alternative approach , if we return to the concept of a constraint as introduced by Prince ( 0000 ) and Smolensky ( 0000 ) where a constraint adds marks in the candidate string at the position where the string violates the constraint ."}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 7, "segment_span": [0, 11], "characterOffsetBegin": 5, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "use", "lemma": "use", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 8, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 12, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "symbol", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "@", "lemma": "@", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "@", "ArgType": null, "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 27, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "indicate", "lemma": "indicate", "after": " ", "pos": "VB", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 28, "originalText": "indicate", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 38, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 11], "characterOffsetBegin": 39, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 11, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 50, "originalText": "violation", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 61, "characterOffsetBegin": 60, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here we use the symbol @ to indicate a constraint violation ."}, {"tokens": [{"index": 1, "word": "After", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "After", "ArgType": null, "before": ""}, {"index": 2, "word": "checking", "lemma": "check", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 14, "segment_span": [0, 10], "tense": "G", "characterOffsetBegin": 6, "originalText": "checking", "ArgType": null, "before": " "}, {"index": 3, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 10], "characterOffsetBegin": 15, "originalText": "each", "ArgType": null, "before": " "}, {"index": 4, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 10], "characterOffsetBegin": 20, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [4, 9], "characterOffsetBegin": 31, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 42, "segment_span": [4, 9], "characterOffsetBegin": 35, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 7, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 47, "segment_span": [4, 9], "characterOffsetBegin": 43, "originalText": "will", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 50, "segment_span": [4, 9], "characterOffsetBegin": 48, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "removed", "is_pass": true, "lemma": "remove", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 58, "segment_span": [4, 9], "tense": "N", "characterOffsetBegin": 51, "originalText": "removed", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 60, "segment_span": [0, 10], "characterOffsetBegin": 59, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "so", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [10, 25], "characterOffsetBegin": 61, "originalText": "so", "ArgType": null, "before": " "}, {"index": 12, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [10, 25], "characterOffsetBegin": 64, "originalText": "that", "ArgType": null, "before": " "}, {"index": 13, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 76, "segment_span": [10, 25], "characterOffsetBegin": 69, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 14, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [10, 25], "characterOffsetBegin": 77, "originalText": "for", "ArgType": null, "before": " "}, {"index": 15, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 84, "segment_span": [10, 25], "characterOffsetBegin": 81, "originalText": "one", "ArgType": null, "before": " "}, {"index": 16, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [10, 25], "characterOffsetBegin": 85, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 17, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 100, "segment_span": [10, 25], "characterOffsetBegin": 96, "originalText": "will", "ArgType": null, "before": " "}, {"index": 18, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 104, "segment_span": [10, 25], "characterOffsetBegin": 101, "originalText": "not", "ArgType": null, "before": " "}, {"index": 19, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 107, "segment_span": [10, 25], "characterOffsetBegin": 105, "originalText": "be", "ArgType": null, "before": " "}, {"index": 20, "word": "confused", "is_pass": true, "lemma": "confuse", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 116, "segment_span": [10, 25], "tense": "N", "characterOffsetBegin": 108, "originalText": "confused", "has_aux": true, "ArgType": null, "before": " "}, {"index": 21, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [10, 25], "characterOffsetBegin": 117, "originalText": "with", "ArgType": null, "before": " "}, {"index": 22, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 129, "segment_span": [10, 25], "characterOffsetBegin": 122, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 23, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 133, "segment_span": [10, 25], "characterOffsetBegin": 130, "originalText": "for", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 137, "segment_span": [10, 25], "characterOffsetBegin": 134, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "next", "lemma": "next", "after": " ", "pos": "JJ", "characterOffsetEnd": 142, "segment_span": [10, 25], "characterOffsetBegin": 138, "originalText": "next", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 144, "characterOffsetBegin": 143, "originalText": ".", "ArgType": null, "before": " "}], "text": "After checking each constraint the markers will be removed , so that markers for one constraint will not be confused with markers for the next ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 5], "characterOffsetBegin": 4, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 3, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 5], "characterOffsetBegin": 10, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 4, "word": "simply", "lemma": "simply", "after": " ", "pos": "RB", "characterOffsetEnd": 27, "segment_span": [0, 5], "characterOffsetBegin": 21, "originalText": "simply", "ArgType": null, "before": " "}, {"index": 5, "word": "states", "lemma": "state", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 34, "segment_span": [0, 5], "tense": "Z", "characterOffsetBegin": 28, "originalText": "states", "ArgType": "verb", "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [5, 14], "characterOffsetBegin": 35, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 41, "segment_span": [5, 14], "characterOffsetBegin": 40, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [5, 14], "characterOffsetBegin": 42, "originalText": "candidate", "ArgType": "subj", "before": " "}, {"index": 9, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 56, "segment_span": [5, 14], "characterOffsetBegin": 52, "originalText": "must", "ArgType": null, "before": " "}, {"index": 10, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 60, "segment_span": [5, 14], "characterOffsetBegin": 57, "originalText": "not", "ArgType": null, "before": " "}, {"index": 11, "word": "contain", "lemma": "contain", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 68, "segment_span": [5, 14], "tense": "B", "characterOffsetBegin": 61, "originalText": "contain", "has_aux": true, "ArgType": null, "before": " "}, {"index": 12, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [5, 14], "characterOffsetBegin": 69, "originalText": "an", "ArgType": null, "before": " "}, {"index": 13, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [5, 14], "characterOffsetBegin": 72, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 14, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [5, 14], "characterOffsetBegin": 81, "originalText": "constituent", "ArgType": "dobj", "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 94, "characterOffsetBegin": 93, "originalText": ".", "ArgType": null, "before": " "}], "text": "The parse constraint simply states that a candidate must not contain an unparsed constituent ."}, {"tokens": [{"index": 1, "word": "Thus", "lemma": "thus", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "Thus", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 6, "segment_span": [0, 10], "characterOffsetBegin": 5, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 9, "segment_span": [0, 10], "characterOffsetBegin": 7, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "add", "lemma": "add", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 10], "tense": "P", "characterOffsetBegin": 10, "originalText": "add", "ArgType": "verb", "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "mark", "lemma": "mark", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "mark", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "after", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 10], "characterOffsetBegin": 21, "originalText": "after", "ArgType": null, "before": " "}, {"index": 8, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": "each", "ArgType": null, "before": " "}, {"index": 9, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 32, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 10, "word": "bracket", "lemma": "bracket", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "bracket", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 50, "characterOffsetBegin": 49, "originalText": ".", "ArgType": null, "before": " "}], "text": "Thus , we add a mark after each unparsed bracket ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "no_coda", "lemma": "no_coda", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 6], "characterOffsetBegin": 4, "originalText": "no_coda", "ArgType": null, "before": " "}, {"index": 3, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 6], "characterOffsetBegin": 12, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 25, "segment_span": [0, 6], "characterOffsetBegin": 23, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 6], "characterOffsetBegin": 26, "originalText": "similar", "ArgType": "verb", "before": " "}, {"index": 6, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 35, "segment_span": [0, 6], "characterOffsetBegin": 34, "originalText": ":", "ArgType": null, "before": " "}, {"index": 7, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 40, "segment_span": [6, 12], "characterOffsetBegin": 36, "originalText": "each", "ArgType": null, "before": " "}, {"index": 8, "word": "coda", "lemma": "coda", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [6, 12], "characterOffsetBegin": 41, "originalText": "coda", "ArgType": null, "before": " "}, {"index": 9, "word": "bracket", "lemma": "bracket", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [6, 12], "characterOffsetBegin": 46, "originalText": "bracket", "ArgType": null, "before": " "}, {"index": 10, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 58, "segment_span": [6, 12], "characterOffsetBegin": 54, "originalText": "will", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 61, "segment_span": [6, 12], "characterOffsetBegin": 59, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 68, "segment_span": [6, 12], "tense": "N", "characterOffsetBegin": 62, "originalText": "marked", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 70, "characterOffsetBegin": 69, "originalText": ".", "ArgType": null, "before": " "}], "text": "The no_coda constraint is similar : each coda bracket will be marked ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "fill_nuc", "lemma": "fill_nuc", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "fill_nuc", "ArgType": null, "before": " "}, {"index": 3, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 9], "characterOffsetBegin": 13, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 26, "segment_span": [0, 9], "characterOffsetBegin": 24, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 31, "segment_span": [0, 9], "characterOffsetBegin": 27, "originalText": "only", "ArgType": null, "before": " "}, {"index": 6, "word": "slightly", "lemma": "slightly", "after": " ", "pos": "RB", "characterOffsetEnd": 40, "segment_span": [0, 9], "characterOffsetBegin": 32, "originalText": "slightly", "ArgType": null, "before": " "}, {"index": 7, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 45, "segment_span": [0, 9], "characterOffsetBegin": 41, "originalText": "more", "ArgType": null, "before": " "}, {"index": 8, "word": "complicated", "lemma": "complicated", "after": " ", "pos": "JJ", "characterOffsetEnd": 57, "segment_span": [0, 9], "characterOffsetBegin": 46, "originalText": "complicated", "ArgType": "verb", "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 59, "segment_span": [0, 9], "characterOffsetBegin": 58, "originalText": ":", "ArgType": null, "before": " "}, {"index": 10, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [9, 23], "characterOffsetBegin": 60, "originalText": "each", "ArgType": null, "before": " "}, {"index": 11, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [9, 23], "characterOffsetBegin": 65, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [9, 23], "characterOffsetBegin": 74, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [9, 23], "characterOffsetBegin": 77, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "nucleus", "lemma": "nucleus", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [9, 23], "characterOffsetBegin": 79, "originalText": "nucleus", "ArgType": null, "before": " "}, {"index": 15, "word": "bracket", "lemma": "bracket", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [9, 23], "characterOffsetBegin": 87, "originalText": "bracket", "ArgType": null, "before": " "}, {"index": 16, "word": "immediately", "lemma": "immediately", "after": " ", "pos": "RB", "characterOffsetEnd": 106, "segment_span": [9, 23], "characterOffsetBegin": 95, "originalText": "immediately", "ArgType": null, "before": " "}, {"index": 17, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 115, "segment_span": [9, 23], "characterOffsetBegin": 107, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 18, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [9, 23], "characterOffsetBegin": 116, "originalText": "by", "ArgType": null, "before": " "}, {"index": 19, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 120, "segment_span": [9, 23], "characterOffsetBegin": 119, "originalText": "a", "ArgType": null, "before": " "}, {"index": 20, "word": "closing", "lemma": "closing", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [9, 23], "characterOffsetBegin": 121, "originalText": "closing", "ArgType": null, "before": " "}, {"index": 21, "word": "bracket", "lemma": "bracket", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [9, 23], "characterOffsetBegin": 129, "originalText": "bracket", "ArgType": null, "before": " "}, {"index": 22, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 139, "segment_span": [9, 23], "characterOffsetBegin": 137, "originalText": "is", "ArgType": null, "before": " "}, {"index": 23, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 146, "segment_span": [9, 23], "tense": "N", "characterOffsetBegin": 140, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 148, "characterOffsetBegin": 147, "originalText": ".", "ArgType": null, "before": " "}], "text": "The fill_nuc constraint is only slightly more complicated : each sequence of a nucleus bracket immediately followed by a closing bracket is marked ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "fill_ons", "lemma": "fill_ons", "after": " ", "pos": "NNS", "characterOffsetEnd": 12, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "fill_ons", "ArgType": null, "before": " "}, {"index": 3, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 10], "characterOffsetBegin": 13, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 4, "word": "treats", "lemma": "treat", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 30, "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 24, "originalText": "treats", "ArgType": "verb", "before": " "}, {"index": 5, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [0, 10], "characterOffsetBegin": 31, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 6, "word": "onsets", "lemma": "onset", "after": " ", "pos": "NNS", "characterOffsetEnd": 43, "segment_span": [0, 10], "characterOffsetBegin": 37, "originalText": "onsets", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 44, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 50, "segment_span": [0, 10], "characterOffsetBegin": 47, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 55, "segment_span": [0, 10], "characterOffsetBegin": 51, "originalText": "same", "ArgType": null, "before": " "}, {"index": 10, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 10], "characterOffsetBegin": 56, "originalText": "way", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 61, "characterOffsetBegin": 60, "originalText": ".", "ArgType": null, "before": " "}], "text": "The fill_ons constraint treats empty onsets in the same way ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 10, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "have_ons", "lemma": "have_ons", "after": " ", "pos": "NNS", "characterOffsetEnd": 22, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "have_ons", "ArgType": null, "before": " "}, {"index": 5, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 9], "characterOffsetBegin": 23, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 36, "segment_span": [0, 9], "characterOffsetBegin": 34, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 45, "segment_span": [0, 9], "characterOffsetBegin": 37, "originalText": "somewhat", "ArgType": null, "before": " "}, {"index": 8, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 50, "segment_span": [0, 9], "characterOffsetBegin": 46, "originalText": "more", "ArgType": null, "before": " "}, {"index": 9, "word": "complex", "lemma": "complex", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 9], "characterOffsetBegin": 51, "originalText": "complex", "ArgType": "verb", "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 60, "characterOffsetBegin": 59, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , the have_ons constraint is somewhat more complex ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 3], "characterOffsetBegin": 4, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 3, "word": "requires", "lemma": "require", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 23, "segment_span": [0, 3], "tense": "Z", "characterOffsetBegin": 15, "originalText": "requires", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [3, 11], "characterOffsetBegin": 24, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [3, 11], "characterOffsetBegin": 29, "originalText": "each", "ArgType": null, "before": " "}, {"index": 6, "word": "nucleus", "lemma": "nucleus", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [3, 11], "characterOffsetBegin": 34, "originalText": "nucleus", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 44, "segment_span": [3, 11], "characterOffsetBegin": 42, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "preceded", "is_pass": true, "lemma": "precede", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 53, "segment_span": [3, 11], "tense": "N", "characterOffsetBegin": 45, "originalText": "preceded", "ArgType": null, "before": " "}, {"index": 9, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [3, 11], "characterOffsetBegin": 54, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [3, 11], "characterOffsetBegin": 57, "originalText": "an", "ArgType": null, "before": " "}, {"index": 11, "word": "onset", "lemma": "onset", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [3, 11], "characterOffsetBegin": 60, "originalText": "onset", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ".", "ArgType": null, "before": " "}], "text": "The constraint requires that each nucleus is preceded by an onset ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 5, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "achieved", "is_pass": true, "lemma": "achieve", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 16, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 8, "originalText": "achieved", "ArgType": null, "before": " "}, {"index": 4, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [3, 8], "characterOffsetBegin": 17, "originalText": "by", "ArgType": null, "before": " "}, {"index": 5, "word": "marking", "lemma": "mark", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 27, "segment_span": [3, 8], "tense": "G", "characterOffsetBegin": 20, "originalText": "marking", "ArgType": null, "before": " "}, {"index": 6, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [3, 8], "characterOffsetBegin": 28, "originalText": "all", "ArgType": null, "before": " "}, {"index": 7, "word": "nuclei", "lemma": "nucleus", "after": " ", "pos": "NNS", "characterOffsetEnd": 38, "segment_span": [3, 8], "characterOffsetBegin": 32, "originalText": "nuclei", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "first", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 44, "segment_span": [3, 8], "characterOffsetBegin": 39, "originalText": "first", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 45, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 50, "segment_span": [0, 10], "characterOffsetBegin": 47, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 55, "segment_span": [10, 14], "characterOffsetBegin": 51, "originalText": "then", "ArgType": null, "before": " "}, {"index": 12, "word": "removing", "lemma": "remove", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 64, "segment_span": [10, 14], "tense": "G", "characterOffsetBegin": 56, "originalText": "removing", "ArgType": null, "before": " "}, {"index": 13, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [10, 14], "characterOffsetBegin": 65, "originalText": "those", "ArgType": null, "before": " "}, {"index": 14, "word": "marks", "lemma": "mark", "after": " ", "pos": "NNS", "characterOffsetEnd": 76, "segment_span": [10, 14], "characterOffsetBegin": 71, "originalText": "marks", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 82, "segment_span": [14, 21], "characterOffsetBegin": 77, "originalText": "where", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [14, 21], "characterOffsetBegin": 83, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "fact", "lemma": "fact", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [14, 21], "characterOffsetBegin": 86, "originalText": "fact", "ArgType": null, "before": " "}, {"index": 18, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [14, 21], "characterOffsetBegin": 91, "originalText": "an", "ArgType": null, "before": " "}, {"index": 19, "word": "onset", "lemma": "onset", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [14, 21], "characterOffsetBegin": 94, "originalText": "onset", "ArgType": "subj", "before": " "}, {"index": 20, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 102, "segment_span": [14, 21], "characterOffsetBegin": 100, "originalText": "is", "ArgType": null, "before": " "}, {"index": 21, "word": "present", "lemma": "present", "after": " ", "pos": "JJ", "characterOffsetEnd": 110, "segment_span": [14, 21], "characterOffsetBegin": 103, "originalText": "present", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 112, "characterOffsetBegin": 111, "originalText": ".", "ArgType": null, "before": " "}], "text": "This is achieved by marking all nuclei first , and then removing those marks where in fact an onset is present ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 25], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "completes", "lemma": "complete", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 14, "segment_span": [0, 25], "tense": "Z", "characterOffsetBegin": 5, "originalText": "completes", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [2, 5], "characterOffsetBegin": 15, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "building", "lemma": "building", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [2, 5], "characterOffsetBegin": 19, "originalText": "building", "ArgType": "subj", "before": " "}, {"index": 5, "word": "blocks", "lemma": "block", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 34, "segment_span": [2, 5], "tense": "Z", "characterOffsetBegin": 28, "originalText": "blocks", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 37, "segment_span": [5, 19], "characterOffsetBegin": 35, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 42, "segment_span": [5, 19], "tense": "P", "characterOffsetBegin": 38, "originalText": "need", "ArgType": null, "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [5, 19], "characterOffsetBegin": 43, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [5, 19], "characterOffsetBegin": 47, "originalText": "an", "ArgType": null, "before": " "}, {"index": 10, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [5, 19], "characterOffsetBegin": 50, "originalText": "implementation", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [5, 19], "characterOffsetBegin": 65, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 75, "segment_span": [5, 19], "characterOffsetBegin": 69, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 77, "segment_span": [5, 19], "characterOffsetBegin": 76, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 81, "segment_span": [5, 19], "characterOffsetBegin": 77, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 82, "segment_span": [5, 19], "characterOffsetBegin": 81, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 87, "segment_span": [5, 19], "characterOffsetBegin": 84, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 17, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 98, "segment_span": [5, 19], "characterOffsetBegin": 89, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 100, "segment_span": [5, 19], "characterOffsetBegin": 99, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 104, "segment_span": [5, 19], "characterOffsetBegin": 100, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 105, "segment_span": [0, 25], "characterOffsetBegin": 104, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 108, "segment_span": [0, 25], "characterOffsetBegin": 107, "originalText": "'", "ArgType": null, "before": "  "}, {"index": 22, "word": "s", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 110, "segment_span": [0, 25], "characterOffsetBegin": 109, "originalText": "s", "ArgType": null, "before": " "}, {"index": 23, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 25], "characterOffsetBegin": 111, "originalText": "analysis", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 122, "segment_span": [0, 25], "characterOffsetBegin": 120, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [0, 25], "characterOffsetBegin": 123, "originalText": "syllabification", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 140, "characterOffsetBegin": 139, "originalText": ".", "ArgType": null, "before": " "}], "text": "This completes the building blocks we need for an implementation of Prince ( 0000 ) and Smolensky ( 0000 ) ' s analysis of syllabification ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 7], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 16, "segment_span": [0, 7], "characterOffsetBegin": 7, "originalText": "following", "ArgType": null, "before": " "}, {"index": 4, "word": "sections", "lemma": "section", "after": " ", "pos": "NNS", "characterOffsetEnd": 25, "segment_span": [0, 7], "characterOffsetBegin": 17, "originalText": "sections", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 27, "segment_span": [0, 7], "characterOffsetBegin": 26, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 30, "segment_span": [0, 7], "characterOffsetBegin": 28, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "present", "lemma": "present", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 38, "segment_span": [0, 7], "tense": "P", "characterOffsetBegin": 31, "originalText": "present", "ArgType": "verb", "before": " "}, {"index": 8, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 42, "segment_span": [7, 15], "characterOffsetBegin": 39, "originalText": "two", "ArgType": null, "before": " "}, {"index": 9, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 54, "segment_span": [7, 15], "characterOffsetBegin": 43, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 10, "word": "implementations", "lemma": "implementation", "after": " ", "pos": "NNS", "characterOffsetEnd": 70, "segment_span": [7, 15], "characterOffsetBegin": 55, "originalText": "implementations", "ArgType": "subj", "before": " "}, {"index": 11, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 76, "segment_span": [7, 15], "characterOffsetBegin": 71, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 12, "word": "employ", "lemma": "employ", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 83, "segment_span": [7, 15], "tense": "P", "characterOffsetBegin": 77, "originalText": "employ", "ArgType": null, "before": " "}, {"index": 13, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [7, 15], "characterOffsetBegin": 84, "originalText": "these", "ArgType": null, "before": " "}, {"index": 14, "word": "building", "lemma": "building", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [7, 15], "characterOffsetBegin": 90, "originalText": "building", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "blocks", "lemma": "block", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 105, "segment_span": [7, 15], "tense": "Z", "characterOffsetBegin": 99, "originalText": "blocks", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 107, "characterOffsetBegin": 106, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the following sections , we present two alternative implementations which employ these building blocks ."}, {"tokens": [{"index": 1, "word": "First", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 5, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "First", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 7, "segment_span": [0, 12], "characterOffsetBegin": 6, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 8, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "discuss", "lemma": "discuss", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 18, "segment_span": [0, 12], "tense": "P", "characterOffsetBegin": 11, "originalText": "discuss", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 12], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 23, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 36, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 9, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 47, "segment_span": [0, 12], "characterOffsetBegin": 38, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 10, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 52, "segment_span": [0, 12], "characterOffsetBegin": 48, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 54, "segment_span": [0, 12], "characterOffsetBegin": 53, "originalText": ")", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 56, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 13, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 63, "segment_span": [12, 18], "tense": "N", "characterOffsetBegin": 58, "originalText": "based", "ArgType": null, "before": " "}, {"index": 14, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [12, 18], "characterOffsetBegin": 64, "originalText": "on", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [12, 18], "characterOffsetBegin": 67, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [12, 18], "characterOffsetBegin": 71, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 17, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [12, 18], "characterOffsetBegin": 79, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 18, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [12, 18], "characterOffsetBegin": 91, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 101, "characterOffsetBegin": 100, "originalText": ".", "ArgType": null, "before": " "}], "text": "First , we discuss the approach of ( Karttunen 1998 ) , based on the lenient composition operator ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 5, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 3, "word": "uses", "lemma": "use", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 18, "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 14, "originalText": "uses", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 20, "segment_span": [0, 10], "characterOffsetBegin": 19, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 29, "segment_span": [0, 10], "characterOffsetBegin": 21, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 10], "characterOffsetBegin": 30, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 10], "characterOffsetBegin": 39, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 10], "characterOffsetBegin": 43, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 9, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [0, 10], "characterOffsetBegin": 52, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 10, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 73, "segment_span": [0, 10], "characterOffsetBegin": 63, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 75, "characterOffsetBegin": 74, "originalText": ".", "ArgType": null, "before": " "}], "text": "This approach uses a counting approach for multiple constraint violations ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 3, "originalText": "will", "ArgType": null, "before": " "}, {"index": 3, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 12, "segment_span": [0, 7], "characterOffsetBegin": 8, "originalText": "then", "ArgType": null, "before": " "}, {"index": 4, "word": "present", "lemma": "present", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 7], "tense": "B", "characterOffsetBegin": 13, "originalText": "present", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "an", "ArgType": null, "before": " "}, {"index": 6, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 35, "segment_span": [0, 7], "characterOffsetBegin": 24, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 7], "characterOffsetBegin": 36, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [7, 14], "characterOffsetBegin": 45, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 53, "segment_span": [7, 14], "characterOffsetBegin": 48, "originalText": "which", "ArgType": null, "before": " "}, {"index": 10, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 65, "segment_span": [7, 14], "characterOffsetBegin": 54, "originalText": "constraints", "ArgType": "subj", "before": " "}, {"index": 11, "word": "eliminate", "lemma": "eliminate", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 75, "segment_span": [7, 14], "tense": "P", "characterOffsetBegin": 66, "originalText": "eliminate", "ArgType": null, "before": " "}, {"index": 12, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 86, "segment_span": [7, 14], "characterOffsetBegin": 76, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 92, "segment_span": [7, 14], "characterOffsetBegin": 87, "originalText": "using", "ArgType": null, "before": " "}, {"index": 14, "word": "matching", "lemma": "matching", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [7, 14], "characterOffsetBegin": 93, "originalText": "matching", "ArgType": "dobj", "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 103, "characterOffsetBegin": 102, "originalText": ".", "ArgType": null, "before": " "}], "text": "We will then present an alternative approach in which constraints eliminate candidates using matching ."}]}], "title": "Finite State Phonology"}, {"num": 2, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 11], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 7, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 21, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 6, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 31, "segment_span": [0, 11], "characterOffsetBegin": 22, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 7, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 32, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 38, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": ")", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 41, "segment_span": [0, 11], "characterOffsetBegin": 40, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 43, "segment_span": [0, 11], "characterOffsetBegin": 42, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 11], "characterOffsetBegin": 44, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 12, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [11, 20], "characterOffsetBegin": 54, "originalText": "set", "ArgType": null, "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 60, "segment_span": [11, 20], "characterOffsetBegin": 58, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "leniently", "lemma": "leniently", "after": " ", "pos": "RB", "characterOffsetEnd": 70, "segment_span": [11, 20], "characterOffsetBegin": 61, "originalText": "leniently", "ArgType": null, "before": " "}, {"index": 15, "word": "composed", "is_pass": true, "lemma": "compose", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 79, "segment_span": [11, 20], "tense": "N", "characterOffsetBegin": 71, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [11, 20], "characterOffsetBegin": 80, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [11, 20], "characterOffsetBegin": 85, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [11, 20], "characterOffsetBegin": 89, "originalText": "set", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [11, 20], "characterOffsetBegin": 93, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 103, "segment_span": [11, 20], "characterOffsetBegin": 96, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 21, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 109, "segment_span": [20, 25], "characterOffsetBegin": 104, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 22, "word": "satisfy", "lemma": "satisfy", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 117, "segment_span": [20, 25], "tense": "P", "characterOffsetBegin": 110, "originalText": "satisfy", "ArgType": null, "before": " "}, {"index": 23, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 119, "segment_span": [20, 25], "characterOffsetBegin": 118, "originalText": "a", "ArgType": null, "before": " "}, {"index": 24, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 125, "segment_span": [20, 25], "characterOffsetBegin": 120, "originalText": "given", "ArgType": null, "before": " "}, {"index": 25, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [20, 25], "characterOffsetBegin": 126, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 138, "characterOffsetBegin": 137, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the approach of ( Karttunen 1998 ) , a candidate set is leniently composed with the set of strings which satisfy a given constraint ."}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Since", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 8, "segment_span": [0, 9], "characterOffsetBegin": 6, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 9, "originalText": "have", "ArgType": null, "before": " "}, {"index": 4, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 21, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 14, "originalText": "defined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [0, 9], "characterOffsetBegin": 22, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 9], "characterOffsetBegin": 24, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [0, 9], "characterOffsetBegin": 35, "originalText": "as", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [0, 9], "characterOffsetBegin": 38, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 9], "characterOffsetBegin": 40, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 56, "segment_span": [9, 13], "characterOffsetBegin": 51, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 11, "word": "marks", "lemma": "mark", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 62, "segment_span": [9, 13], "tense": "Z", "characterOffsetBegin": 57, "originalText": "marks", "ArgType": null, "before": " "}, {"index": 12, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [9, 13], "characterOffsetBegin": 63, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 13, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 80, "segment_span": [9, 13], "characterOffsetBegin": 73, "originalText": "strings", "ArgType": "dobj", "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 82, "segment_span": [13, 37], "characterOffsetBegin": 81, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 85, "segment_span": [13, 37], "characterOffsetBegin": 83, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 16, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 90, "segment_span": [13, 37], "tense": "P", "characterOffsetBegin": 86, "originalText": "need", "ArgType": "verb", "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 93, "segment_span": [13, 37], "characterOffsetBegin": 91, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "alter", "lemma": "alter", "after": " ", "pos": "VB", "characterOffsetEnd": 99, "segment_span": [13, 37], "characterOffsetBegin": 94, "originalText": "alter", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 103, "segment_span": [13, 37], "characterOffsetBegin": 100, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "definitions", "lemma": "definition", "after": " ", "pos": "NNS", "characterOffsetEnd": 115, "segment_span": [13, 37], "characterOffsetBegin": 104, "originalText": "definitions", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 124, "segment_span": [13, 37], "characterOffsetBegin": 116, "originalText": "somewhat", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 126, "segment_span": [13, 37], "characterOffsetBegin": 125, "originalText": ",", "ArgType": null, "before": " "}, {"index": 23, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 130, "segment_span": [13, 37], "characterOffsetBegin": 127, "originalText": "but", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 134, "segment_span": [13, 37], "characterOffsetBegin": 131, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 144, "segment_span": [13, 37], "characterOffsetBegin": 135, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 26, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 156, "segment_span": [13, 37], "characterOffsetBegin": 145, "originalText": "transducers", "ArgType": "subj", "before": " "}, {"index": 27, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 160, "segment_span": [13, 37], "characterOffsetBegin": 157, "originalText": "are", "ArgType": null, "before": " "}, {"index": 28, "word": "equivalent", "lemma": "equivalent", "after": " ", "pos": "JJ", "characterOffsetEnd": 171, "segment_span": [13, 37], "characterOffsetBegin": 161, "originalText": "equivalent", "ArgType": null, "before": " "}, {"index": 29, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 174, "segment_span": [13, 37], "characterOffsetBegin": 172, "originalText": "to", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 178, "segment_span": [13, 37], "characterOffsetBegin": 175, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 190, "segment_span": [13, 37], "characterOffsetBegin": 179, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 32, "word": "produced", "lemma": "produce", "after": " ", "pos": "VBN", "characterOffsetEnd": 199, "segment_span": [13, 37], "characterOffsetBegin": 191, "originalText": "produced", "ArgType": null, "before": " "}, {"index": 33, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 202, "segment_span": [13, 37], "characterOffsetBegin": 200, "originalText": "by", "ArgType": null, "before": " "}, {"index": 34, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 205, "segment_span": [13, 37], "characterOffsetBegin": 204, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 35, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 215, "segment_span": [13, 37], "characterOffsetBegin": 206, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 36, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 220, "segment_span": [13, 37], "characterOffsetBegin": 216, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 37, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 222, "segment_span": [13, 37], "characterOffsetBegin": 221, "originalText": ")", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 225, "characterOffsetBegin": 224, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Since we have defined a constraint as a transducer which marks candidate strings , we need to alter the definitions somewhat , but the resulting transducers are equivalent to the transducers produced by ( Karttunen 1998 ) ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "use", "lemma": "use", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 6, "segment_span": [0, 20], "tense": "P", "characterOffsetBegin": 3, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 20], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 12, "segment_span": [0, 20], "characterOffsetBegin": 11, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "left-associative", "lemma": "left-associative", "after": " ", "pos": "JJ", "characterOffsetEnd": 29, "segment_span": [0, 20], "characterOffsetBegin": 13, "originalText": "left-associative", "ArgType": null, "before": " "}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 31, "segment_span": [0, 20], "characterOffsetBegin": 30, "originalText": ")", "ArgType": null, "before": " "}, {"index": 7, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 20], "characterOffsetBegin": 32, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 8, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 20], "characterOffsetBegin": 43, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "oo", "lemma": "oo", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 20], "characterOffsetBegin": 52, "originalText": "oo", "ArgType": null, "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [0, 20], "characterOffsetBegin": 55, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "applying", "lemma": "apply", "after": " ", "pos": "VBG", "characterOffsetEnd": 67, "segment_span": [0, 20], "characterOffsetBegin": 59, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 12, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [0, 20], "characterOffsetBegin": 68, "originalText": "an", "ArgType": null, "before": " "}, {"index": 13, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 20], "characterOffsetBegin": 71, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 14, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 20], "characterOffsetBegin": 74, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 87, "segment_span": [0, 20], "characterOffsetBegin": 85, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [0, 20], "characterOffsetBegin": 88, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 95, "segment_span": [0, 20], "characterOffsetBegin": 90, "originalText": "given", "ArgType": null, "before": " "}, {"index": 18, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [0, 20], "characterOffsetBegin": 96, "originalText": "set", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 20], "characterOffsetBegin": 100, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 113, "segment_span": [0, 20], "characterOffsetBegin": 103, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 21, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 115, "characterOffsetBegin": 114, "originalText": ":", "ArgType": null, "before": " "}], "text": "We use the ( left-associative ) optimality operator oo for applying an OT constraint to a given set of candidates :"}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 6, "segment_span": [0, 12], "characterOffsetBegin": 5, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 12], "characterOffsetBegin": 11, "originalText": "set", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [0, 12], "characterOffsetBegin": 15, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 28, "segment_span": [0, 12], "characterOffsetBegin": 18, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 29, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "first", "ArgType": null, "before": " "}, {"index": 9, "word": "composed", "is_pass": true, "lemma": "compose", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 38, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 12], "characterOffsetBegin": 47, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [0, 12], "characterOffsetBegin": 52, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [0, 12], "characterOffsetBegin": 56, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 13, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 72, "segment_span": [12, 16], "characterOffsetBegin": 67, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 14, "word": "marks", "lemma": "mark", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 78, "segment_span": [12, 16], "tense": "Z", "characterOffsetBegin": 73, "originalText": "marks", "ArgType": null, "before": " "}, {"index": 15, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [12, 16], "characterOffsetBegin": 79, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 16, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 100, "segment_span": [12, 16], "characterOffsetBegin": 90, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 102, "characterOffsetBegin": 101, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here , the set of candidates is first composed with the transducer which marks constraint violations ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 14], "characterOffsetBegin": 3, "originalText": "then", "ArgType": null, "before": " "}, {"index": 3, "word": "leniently", "lemma": "leniently", "after": " ", "pos": "RB", "characterOffsetEnd": 17, "segment_span": [0, 14], "characterOffsetBegin": 8, "originalText": "leniently", "ArgType": null, "before": " "}, {"index": 4, "word": "compose", "lemma": "compose", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 25, "segment_span": [0, 14], "tense": "B", "characterOffsetBegin": 18, "originalText": "compose", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [0, 14], "characterOffsetBegin": 26, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 39, "segment_span": [0, 14], "characterOffsetBegin": 30, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 14], "characterOffsetBegin": 40, "originalText": "transducer", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [0, 14], "characterOffsetBegin": 51, "originalText": "with", "ArgType": null, "before": " "}, {"index": 9, "word": "~", "lemma": "~", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [0, 14], "characterOffsetBegin": 56, "originalText": "~", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 59, "segment_span": [0, 14], "characterOffsetBegin": 58, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "$", "lemma": "$", "after": " ", "pos": "$", "characterOffsetEnd": 61, "segment_span": [0, 14], "characterOffsetBegin": 60, "originalText": "$", "ArgType": null, "before": " "}, {"index": 12, "word": "@", "lemma": "@", "after": " ", "pos": "SYM", "characterOffsetEnd": 63, "segment_span": [0, 14], "characterOffsetBegin": 62, "originalText": "@", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 65, "segment_span": [0, 14], "characterOffsetBegin": 64, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 67, "segment_span": [0, 14], "characterOffsetBegin": 66, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 73, "segment_span": [14, 18], "characterOffsetBegin": 68, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 16, "word": "encodes", "lemma": "encode", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 81, "segment_span": [14, 18], "tense": "Z", "characterOffsetBegin": 74, "originalText": "encodes", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [14, 18], "characterOffsetBegin": 82, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "requirement", "lemma": "requirement", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [14, 18], "characterOffsetBegin": 86, "originalText": "requirement", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [18, 28], "characterOffsetBegin": 98, "originalText": "that", "ArgType": null, "before": " "}, {"index": 20, "word": "no", "lemma": "no", "after": " ", "pos": "DT", "characterOffsetEnd": 105, "segment_span": [18, 28], "characterOffsetBegin": 103, "originalText": "no", "ArgType": null, "before": " "}, {"index": 21, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 110, "segment_span": [18, 28], "characterOffsetBegin": 106, "originalText": "such", "ArgType": null, "before": " "}, {"index": 22, "word": "marks", "lemma": "mark", "after": " ", "pos": "NNS", "characterOffsetEnd": 116, "segment_span": [18, 28], "characterOffsetBegin": 111, "originalText": "marks", "ArgType": null, "before": " "}, {"index": 23, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 123, "segment_span": [18, 28], "characterOffsetBegin": 117, "originalText": "should", "ArgType": null, "before": " "}, {"index": 24, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 126, "segment_span": [18, 28], "characterOffsetBegin": 124, "originalText": "be", "ArgType": null, "before": " "}, {"index": 25, "word": "contained", "is_pass": true, "lemma": "contain", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 136, "segment_span": [18, 28], "tense": "N", "characterOffsetBegin": 127, "originalText": "contained", "has_aux": true, "ArgType": null, "before": " "}, {"index": 26, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [18, 28], "characterOffsetBegin": 137, "originalText": "in", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 143, "segment_span": [18, 28], "characterOffsetBegin": 140, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [18, 28], "characterOffsetBegin": 144, "originalText": "string", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 152, "characterOffsetBegin": 151, "originalText": ".", "ArgType": null, "before": " "}], "text": "We then leniently compose the resulting transducer with ~ ( $ @ ) , which encodes the requirement that no such marks should be contained in the string ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 17], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 17], "characterOffsetBegin": 10, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "remaining", "lemma": "remain", "after": " ", "pos": "VBG", "characterOffsetEnd": 23, "segment_span": [0, 17], "characterOffsetBegin": 14, "originalText": "remaining", "ArgType": null, "before": " "}, {"index": 5, "word": "marks", "lemma": "mark", "after": " ", "pos": "NNS", "characterOffsetEnd": 29, "segment_span": [0, 17], "characterOffsetBegin": 24, "originalText": "marks", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 31, "segment_span": [0, 17], "characterOffsetBegin": 30, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 17], "characterOffsetBegin": 32, "originalText": "if", "ArgType": null, "before": " "}, {"index": 8, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 38, "segment_span": [0, 17], "characterOffsetBegin": 35, "originalText": "any", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 40, "segment_span": [0, 17], "characterOffsetBegin": 39, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 44, "segment_span": [0, 17], "characterOffsetBegin": 41, "originalText": "are", "ArgType": null, "before": " "}, {"index": 11, "word": "removed", "lemma": "remove", "after": " ", "pos": "VBN", "characterOffsetEnd": 52, "segment_span": [0, 17], "characterOffsetBegin": 45, "originalText": "removed", "ArgType": null, "before": " "}, {"index": 12, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 17], "characterOffsetBegin": 53, "originalText": "from", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 61, "segment_span": [0, 17], "characterOffsetBegin": 58, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 17], "characterOffsetBegin": 62, "originalText": "set", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [0, 17], "characterOffsetBegin": 66, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "surviving", "lemma": "survive", "after": " ", "pos": "VBG", "characterOffsetEnd": 78, "segment_span": [0, 17], "characterOffsetBegin": 69, "originalText": "surviving", "ArgType": null, "before": " "}, {"index": 17, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 89, "segment_span": [0, 17], "characterOffsetBegin": 79, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 91, "characterOffsetBegin": 90, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , the remaining marks ( if any ) are removed from the set of surviving candidates ."}, {"tokens": [{"index": 1, "word": "Using", "lemma": "use", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 5, "segment_span": [0, 4], "tense": "G", "characterOffsetBegin": 0, "originalText": "Using", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 4], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 4], "characterOffsetBegin": 10, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 4, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 4], "characterOffsetBegin": 21, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 31, "segment_span": [4, 30], "characterOffsetBegin": 30, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 34, "segment_span": [4, 30], "characterOffsetBegin": 32, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 38, "segment_span": [4, 30], "characterOffsetBegin": 35, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [4, 30], "characterOffsetBegin": 39, "originalText": "then", "ArgType": null, "before": " "}, {"index": 9, "word": "combine", "lemma": "combine", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 51, "segment_span": [4, 30], "tense": "B", "characterOffsetBegin": 44, "originalText": "combine", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [4, 30], "characterOffsetBegin": 52, "originalText": "Gen", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 59, "segment_span": [4, 30], "characterOffsetBegin": 56, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 63, "segment_span": [4, 30], "characterOffsetBegin": 60, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [4, 30], "characterOffsetBegin": 64, "originalText": "various", "ArgType": null, "before": " "}, {"index": 14, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [4, 30], "characterOffsetBegin": 72, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 15, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [4, 30], "characterOffsetBegin": 84, "originalText": "as", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [4, 30], "characterOffsetBegin": 87, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [4, 30], "characterOffsetBegin": 90, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 103, "segment_span": [4, 30], "characterOffsetBegin": 94, "originalText": "following", "ArgType": null, "before": " "}, {"index": 19, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 111, "segment_span": [4, 30], "characterOffsetBegin": 104, "originalText": "example", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 113, "segment_span": [4, 30], "characterOffsetBegin": 112, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "equivalent", "lemma": "equivalent", "after": " ", "pos": "JJ", "characterOffsetEnd": 124, "segment_span": [4, 30], "characterOffsetBegin": 114, "originalText": "equivalent", "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 127, "segment_span": [4, 30], "characterOffsetBegin": 125, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "figure", "lemma": "figure", "after": " ", "pos": "VB", "characterOffsetEnd": 134, "segment_span": [4, 30], "characterOffsetBegin": 128, "originalText": "figure", "ArgType": null, "before": " "}, {"index": 24, "word": "14", "lemma": "14", "after": " ", "pos": "CD", "characterOffsetEnd": 137, "segment_span": [4, 30], "characterOffsetBegin": 135, "originalText": "14", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 140, "segment_span": [4, 30], "characterOffsetBegin": 138, "originalText": "of", "ArgType": null, "before": " "}, {"index": 26, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 143, "segment_span": [4, 30], "characterOffsetBegin": 142, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 27, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 153, "segment_span": [4, 30], "characterOffsetBegin": 144, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 28, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 158, "segment_span": [4, 30], "characterOffsetBegin": 154, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 160, "segment_span": [4, 30], "characterOffsetBegin": 159, "originalText": ")", "ArgType": null, "before": " "}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 163, "segment_span": [4, 30], "characterOffsetBegin": 162, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 31, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 165, "characterOffsetBegin": 164, "originalText": ":", "ArgType": null, "before": " "}], "text": "Using the optimality operator , we can then combine Gen and the various constraints as in the following example ( equivalent to figure 14 of ( Karttunen 1998 ) ) :"}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "mentioned", "lemma": "mention", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 3], "tense": "N", "characterOffsetBegin": 3, "originalText": "mentioned", "ArgType": null, "before": " "}, {"index": 3, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 3], "characterOffsetBegin": 13, "originalText": "above", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 20, "segment_span": [3, 15], "characterOffsetBegin": 19, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [3, 15], "characterOffsetBegin": 21, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [3, 15], "characterOffsetBegin": 23, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 7, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [3, 15], "characterOffsetBegin": 33, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 8, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 43, "segment_span": [3, 15], "characterOffsetBegin": 40, "originalText": "can", "ArgType": null, "before": " "}, {"index": 9, "word": "violate", "lemma": "violate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 51, "segment_span": [3, 15], "tense": "B", "characterOffsetBegin": 44, "originalText": "violate", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 53, "segment_span": [3, 15], "characterOffsetBegin": 52, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [3, 15], "characterOffsetBegin": 54, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 12, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [3, 15], "characterOffsetBegin": 65, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 13, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 79, "segment_span": [3, 15], "characterOffsetBegin": 74, "originalText": "times", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 83, "segment_span": [3, 15], "characterOffsetBegin": 80, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 94, "segment_span": [3, 15], "characterOffsetBegin": 84, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 99, "segment_span": [15, 19], "characterOffsetBegin": 95, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 17, "word": "violate", "lemma": "violate", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 107, "segment_span": [15, 19], "tense": "P", "characterOffsetBegin": 100, "originalText": "violate", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 111, "segment_span": [15, 19], "characterOffsetBegin": 108, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [15, 19], "characterOffsetBegin": 112, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 126, "segment_span": [19, 28], "characterOffsetBegin": 123, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 132, "segment_span": [19, 28], "characterOffsetBegin": 127, "originalText": "least", "ArgType": null, "before": " "}, {"index": 22, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [19, 28], "characterOffsetBegin": 133, "originalText": "number", "ArgType": "subj", "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 142, "segment_span": [19, 28], "characterOffsetBegin": 140, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 148, "segment_span": [19, 28], "characterOffsetBegin": 143, "originalText": "times", "ArgType": null, "before": " "}, {"index": 25, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 153, "segment_span": [19, 28], "tense": "P", "characterOffsetBegin": 149, "originalText": "need", "ArgType": null, "before": " "}, {"index": 26, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 156, "segment_span": [19, 28], "characterOffsetBegin": 154, "originalText": "to", "ArgType": null, "before": " "}, {"index": 27, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 159, "segment_span": [19, 28], "characterOffsetBegin": 157, "originalText": "be", "ArgType": null, "before": " "}, {"index": 28, "word": "preferred", "lemma": "prefer", "after": " ", "pos": "VBN", "characterOffsetEnd": 169, "segment_span": [19, 28], "characterOffsetBegin": 160, "originalText": "preferred", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 171, "characterOffsetBegin": 170, "originalText": ".", "ArgType": null, "before": " "}], "text": "As mentioned above , a candidate string can violate a constraint multiple times and candidates that violate the constraint the least number of times need to be preferred ."}, {"tokens": [{"index": 1, "word": "Lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "Lenient", "ArgType": null, "before": ""}, {"index": 2, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 15], "characterOffsetBegin": 8, "originalText": "composition", "ArgType": "subj", "before": " "}, {"index": 3, "word": "can", "lemma": "can", "after": "", "pos": "MD", "characterOffsetEnd": 23, "segment_span": [0, 15], "characterOffsetBegin": 20, "originalText": "can", "ArgType": null, "before": " "}, {"index": 4, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 26, "segment_span": [0, 15], "characterOffsetBegin": 23, "originalText": "not", "ArgType": null, "before": ""}, {"index": 5, "word": "distinguish", "lemma": "distinguish", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 38, "segment_span": [0, 15], "tense": "B", "characterOffsetBegin": 27, "originalText": "distinguish", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 42, "segment_span": [0, 15], "characterOffsetBegin": 39, "originalText": "two", "ArgType": null, "before": " "}, {"index": 7, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 53, "segment_span": [0, 15], "characterOffsetBegin": 43, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [7, 13], "characterOffsetBegin": 54, "originalText": "if", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [7, 13], "characterOffsetBegin": 57, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [7, 13], "characterOffsetBegin": 61, "originalText": "first", "ArgType": "subj", "before": " "}, {"index": 11, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 75, "segment_span": [7, 13], "tense": "Z", "characterOffsetBegin": 67, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 12, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 79, "segment_span": [7, 13], "characterOffsetBegin": 76, "originalText": "one", "ArgType": null, "before": " "}, {"index": 13, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [7, 13], "characterOffsetBegin": 80, "originalText": "violation", "ArgType": "dobj", "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 91, "segment_span": [0, 15], "characterOffsetBegin": 90, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 95, "segment_span": [0, 15], "characterOffsetBegin": 92, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 99, "segment_span": [15, 22], "characterOffsetBegin": 96, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 106, "segment_span": [15, 22], "characterOffsetBegin": 100, "originalText": "second", "ArgType": "subj", "before": " "}, {"index": 18, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 115, "segment_span": [15, 22], "tense": "Z", "characterOffsetBegin": 107, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 19, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [15, 22], "characterOffsetBegin": 116, "originalText": "at", "ArgType": null, "before": " "}, {"index": 20, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 124, "segment_span": [15, 22], "characterOffsetBegin": 119, "originalText": "least", "ArgType": null, "before": " "}, {"index": 21, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 128, "segment_span": [15, 22], "characterOffsetBegin": 125, "originalText": "two", "ArgType": null, "before": " "}, {"index": 22, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 139, "segment_span": [15, 22], "characterOffsetBegin": 129, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 141, "characterOffsetBegin": 140, "originalText": ".", "ArgType": null, "before": " "}], "text": "Lenient composition can not distinguish two candidates if the first contains one violation , and the second contains at least two violations ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 15], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 15], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 15], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "above", "lemma": "above", "after": " ", "pos": "JJ", "characterOffsetEnd": 23, "segment_span": [0, 15], "characterOffsetBegin": 18, "originalText": "above", "ArgType": null, "before": " "}, {"index": 6, "word": "syllabify", "lemma": "syllabify", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 15], "characterOffsetBegin": 24, "originalText": "syllabify", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 15], "characterOffsetBegin": 34, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 8, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 49, "segment_span": [0, 15], "characterOffsetBegin": 45, "originalText": "will", "ArgType": null, "before": " "}, {"index": 9, "word": "assign", "lemma": "assign", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 56, "segment_span": [0, 15], "tense": "B", "characterOffsetBegin": 50, "originalText": "assign", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 62, "segment_span": [0, 15], "characterOffsetBegin": 57, "originalText": "three", "ArgType": null, "before": " "}, {"index": 11, "word": "outputs", "lemma": "output", "after": " ", "pos": "NNS", "characterOffsetEnd": 70, "segment_span": [0, 15], "characterOffsetBegin": 63, "originalText": "outputs", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 73, "segment_span": [0, 15], "characterOffsetBegin": 71, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 77, "segment_span": [0, 15], "characterOffsetBegin": 74, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [0, 15], "characterOffsetBegin": 78, "originalText": "input", "ArgType": null, "before": " "}, {"index": 15, "word": "bebop", "lemma": "bebop", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [0, 15], "characterOffsetBegin": 84, "originalText": "bebop", "ArgType": null, "before": " "}, {"index": 16, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 91, "characterOffsetBegin": 90, "originalText": ":", "ArgType": null, "before": " "}], "text": "For example , the above syllabify transducer will assign three outputs to the input bebop :"}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 16], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 16], "characterOffsetBegin": 8, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 16], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 16], "characterOffsetBegin": 15, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 25, "segment_span": [0, 16], "characterOffsetBegin": 19, "originalText": "second", "ArgType": null, "before": " "}, {"index": 7, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 16], "characterOffsetBegin": 26, "originalText": "output", "ArgType": null, "before": " "}, {"index": 8, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 39, "segment_span": [0, 16], "characterOffsetBegin": 33, "originalText": "should", "ArgType": null, "before": " "}, {"index": 9, "word": "have", "lemma": "have", "after": " ", "pos": "VB", "characterOffsetEnd": 44, "segment_span": [0, 16], "characterOffsetBegin": 40, "originalText": "have", "ArgType": null, "before": " "}, {"index": 10, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 49, "segment_span": [0, 16], "characterOffsetBegin": 45, "originalText": "been", "ArgType": null, "before": " "}, {"index": 11, "word": "preferred", "is_pass": true, "lemma": "prefer", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 59, "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 50, "originalText": "preferred", "has_aux": true, "ArgType": null, "before": " "}, {"index": 12, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 16], "characterOffsetBegin": 60, "originalText": "over", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 68, "segment_span": [0, 16], "characterOffsetBegin": 65, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 74, "segment_span": [0, 16], "characterOffsetBegin": 69, "originalText": "other", "ArgType": null, "before": " "}, {"index": 15, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 78, "segment_span": [0, 16], "characterOffsetBegin": 75, "originalText": "two", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 80, "segment_span": [0, 16], "characterOffsetBegin": 79, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "because", "lemma": "because", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [16, 27], "characterOffsetBegin": 81, "originalText": "because", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 92, "segment_span": [16, 27], "characterOffsetBegin": 89, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 99, "segment_span": [16, 27], "characterOffsetBegin": 93, "originalText": "second", "ArgType": null, "before": " "}, {"index": 20, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [16, 27], "characterOffsetBegin": 100, "originalText": "output", "ArgType": "subj", "before": " "}, {"index": 21, "word": "violates", "lemma": "violate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 115, "segment_span": [16, 27], "tense": "Z", "characterOffsetBegin": 107, "originalText": "violates", "ArgType": null, "before": " "}, {"index": 22, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 117, "segment_span": [16, 27], "characterOffsetBegin": 116, "originalText": "`", "ArgType": null, "before": " "}, {"index": 23, "word": "Parse", "lemma": "Parse", "after": " ", "pos": "NNP", "characterOffsetEnd": 123, "segment_span": [16, 27], "characterOffsetBegin": 118, "originalText": "Parse", "ArgType": null, "before": " "}, {"index": 24, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 125, "segment_span": [16, 27], "characterOffsetBegin": 124, "originalText": "'", "ArgType": null, "before": " "}, {"index": 25, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 130, "segment_span": [16, 27], "characterOffsetBegin": 126, "originalText": "only", "ArgType": null, "before": " "}, {"index": 26, "word": "once", "lemma": "once", "after": " ", "pos": "RB", "characterOffsetEnd": 135, "segment_span": [16, 27], "characterOffsetBegin": 131, "originalText": "once", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 137, "segment_span": [16, 27], "characterOffsetBegin": 136, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "whereas", "lemma": "whereas", "after": " ", "pos": "IN", "characterOffsetEnd": 145, "segment_span": [27, 37], "characterOffsetBegin": 138, "originalText": "whereas", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 149, "segment_span": [27, 37], "characterOffsetBegin": 146, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 155, "segment_span": [27, 37], "characterOffsetBegin": 150, "originalText": "other", "ArgType": null, "before": " "}, {"index": 31, "word": "outputs", "lemma": "output", "after": " ", "pos": "NNS", "characterOffsetEnd": 163, "segment_span": [27, 37], "characterOffsetBegin": 156, "originalText": "outputs", "ArgType": "subj", "before": " "}, {"index": 32, "word": "violate", "lemma": "violate", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 171, "segment_span": [27, 37], "tense": "P", "characterOffsetBegin": 164, "originalText": "violate", "ArgType": null, "before": " "}, {"index": 33, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 173, "segment_span": [27, 37], "characterOffsetBegin": 172, "originalText": "`", "ArgType": null, "before": " "}, {"index": 34, "word": "Parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 179, "segment_span": [27, 37], "characterOffsetBegin": 174, "originalText": "Parse", "ArgType": null, "before": " "}, {"index": 35, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 181, "segment_span": [27, 37], "characterOffsetBegin": 180, "originalText": "'", "ArgType": null, "before": " "}, {"index": 36, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 187, "segment_span": [27, 37], "characterOffsetBegin": 182, "originalText": "three", "ArgType": null, "before": " "}, {"index": 37, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 193, "segment_span": [27, 37], "characterOffsetBegin": 188, "originalText": "times", "ArgType": "dobj", "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 195, "characterOffsetBegin": 194, "originalText": ".", "ArgType": null, "before": " "}], "text": "In this case , the second output should have been preferred over the other two , because the second output violates ` Parse ' only once , whereas the other outputs violate ` Parse ' three times ."}, {"tokens": [{"index": 1, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 9, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "Karttunen", "ArgType": "subj", "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 10, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 15, "segment_span": [0, 8], "characterOffsetBegin": 11, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 16, "segment_span": [0, 8], "characterOffsetBegin": 15, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": "recognizes", "lemma": "recognize", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 28, "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 18, "originalText": "recognizes", "ArgType": "verb", "before": "  "}, {"index": 6, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 8], "characterOffsetBegin": 29, "originalText": "this", "ArgType": null, "before": " "}, {"index": 7, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 8], "characterOffsetBegin": 34, "originalText": "problem", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 45, "segment_span": [0, 8], "characterOffsetBegin": 42, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "proposes", "lemma": "propose", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 54, "segment_span": [8, 23], "tense": "Z", "characterOffsetBegin": 46, "originalText": "proposes", "ArgType": null, "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 57, "segment_span": [8, 23], "characterOffsetBegin": 55, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "have", "lemma": "have", "after": " ", "pos": "VB", "characterOffsetEnd": 62, "segment_span": [8, 23], "characterOffsetBegin": 58, "originalText": "have", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [8, 23], "characterOffsetBegin": 63, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [8, 23], "characterOffsetBegin": 65, "originalText": "sequence", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [8, 23], "characterOffsetBegin": 74, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 88, "segment_span": [8, 23], "characterOffsetBegin": 77, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 16, "word": "Parse0", "lemma": "parse0", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [8, 23], "characterOffsetBegin": 89, "originalText": "Parse0", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 97, "segment_span": [8, 23], "characterOffsetBegin": 96, "originalText": ",", "ArgType": null, "before": " "}, {"index": 18, "word": "Parse1", "lemma": "parse1", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [8, 23], "characterOffsetBegin": 98, "originalText": "Parse1", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 106, "segment_span": [8, 23], "characterOffsetBegin": 105, "originalText": ",", "ArgType": null, "before": " "}, {"index": 20, "word": "Parse2", "lemma": "parse2", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [8, 23], "characterOffsetBegin": 107, "originalText": "Parse2", "ArgType": null, "before": " "}, {"index": 21, "word": "...", "lemma": "...", "after": "", "pos": ":", "characterOffsetEnd": 117, "segment_span": [8, 23], "characterOffsetBegin": 114, "originalText": "...", "ArgType": null, "before": " "}, {"index": 22, "word": "ParseN", "lemma": "ParseN", "after": " ", "pos": "NNP", "characterOffsetEnd": 123, "segment_span": [8, 23], "characterOffsetBegin": 117, "originalText": "ParseN", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 125, "segment_span": [8, 23], "characterOffsetBegin": 124, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 131, "segment_span": [23, 28], "characterOffsetBegin": 126, "originalText": "where", "ArgType": null, "before": " "}, {"index": 25, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 136, "segment_span": [23, 28], "characterOffsetBegin": 132, "originalText": "each", "ArgType": null, "before": " "}, {"index": 26, "word": "ParseX", "lemma": "parsex", "after": " ", "pos": "NN", "characterOffsetEnd": 143, "segment_span": [23, 28], "characterOffsetBegin": 137, "originalText": "ParseX", "ArgType": null, "before": " "}, {"index": 27, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 154, "segment_span": [23, 28], "characterOffsetBegin": 144, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 28, "word": "requires", "lemma": "require", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 163, "segment_span": [23, 28], "tense": "Z", "characterOffsetBegin": 155, "originalText": "requires", "ArgType": null, "before": " "}, {"index": 29, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 168, "segment_span": [28, 37], "characterOffsetBegin": 164, "originalText": "that", "ArgType": null, "before": " "}, {"index": 30, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 179, "segment_span": [28, 37], "characterOffsetBegin": 169, "originalText": "candidates", "ArgType": "subj", "before": " "}, {"index": 31, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 183, "segment_span": [28, 37], "characterOffsetBegin": 180, "originalText": "not", "ArgType": null, "before": " "}, {"index": 32, "word": "contain", "lemma": "contain", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 191, "segment_span": [28, 37], "tense": "P", "characterOffsetBegin": 184, "originalText": "contain", "ArgType": null, "before": " "}, {"index": 33, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 196, "segment_span": [28, 37], "characterOffsetBegin": 192, "originalText": "more", "ArgType": "dobj", "before": " "}, {"index": 34, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 201, "segment_span": [28, 37], "characterOffsetBegin": 197, "originalText": "than", "ArgType": null, "before": " "}, {"index": 35, "word": "X", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 203, "segment_span": [28, 37], "characterOffsetBegin": 202, "originalText": "X", "ArgType": null, "before": " "}, {"index": 36, "word": "unparsed", "lemma": "unparsed", "after": " ", "pos": "JJ", "characterOffsetEnd": 212, "segment_span": [28, 37], "characterOffsetBegin": 204, "originalText": "unparsed", "ArgType": null, "before": " "}, {"index": 37, "word": "constituents", "lemma": "constituent", "after": " ", "pos": "NNS", "characterOffsetEnd": 225, "segment_span": [28, 37], "characterOffsetBegin": 213, "originalText": "constituents", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 227, "characterOffsetBegin": 226, "originalText": ".", "ArgType": null, "before": " "}], "text": "Karttunen ( 0000 ) recognizes this problem and proposes to have a sequence of constraints Parse0 , Parse1 , Parse2 ... ParseN , where each ParseX constraint requires that candidates not contain more than X unparsed constituents ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 13], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 13], "characterOffsetBegin": 8, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 13], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 13], "characterOffsetBegin": 15, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 28, "segment_span": [0, 13], "characterOffsetBegin": 19, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 13], "characterOffsetBegin": 29, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 8, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 44, "segment_span": [0, 13], "characterOffsetBegin": 40, "originalText": "only", "ArgType": null, "before": " "}, {"index": 9, "word": "approximates", "lemma": "approximate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 57, "segment_span": [0, 13], "tense": "Z", "characterOffsetBegin": 45, "originalText": "approximates", "ArgType": "verb", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 61, "segment_span": [0, 13], "characterOffsetBegin": 58, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [0, 13], "characterOffsetBegin": 62, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 12, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 13], "characterOffsetBegin": 65, "originalText": "analysis", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 75, "segment_span": [0, 13], "characterOffsetBegin": 74, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "because", "lemma": "because", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [13, 17], "characterOffsetBegin": 76, "originalText": "because", "ArgType": null, "before": " "}, {"index": 15, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 86, "segment_span": [13, 17], "characterOffsetBegin": 84, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 16, "word": "turns", "lemma": "turn", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 92, "segment_span": [13, 17], "tense": "Z", "characterOffsetBegin": 87, "originalText": "turns", "ArgType": null, "before": " "}, {"index": 17, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 96, "segment_span": [13, 17], "characterOffsetBegin": 93, "originalText": "out", "ArgType": null, "before": " "}, {"index": 18, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 101, "segment_span": [17, 25], "characterOffsetBegin": 97, "originalText": "that", "ArgType": null, "before": " "}, {"index": 19, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 105, "segment_span": [17, 25], "characterOffsetBegin": 102, "originalText": "for", "ArgType": null, "before": " "}, {"index": 20, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [17, 25], "characterOffsetBegin": 106, "originalText": "any", "ArgType": null, "before": " "}, {"index": 21, "word": "X", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 111, "segment_span": [17, 25], "characterOffsetBegin": 110, "originalText": "X", "ArgType": null, "before": " "}, {"index": 22, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 117, "segment_span": [17, 25], "characterOffsetBegin": 112, "originalText": "there", "ArgType": null, "before": " "}, {"index": 23, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 121, "segment_span": [17, 25], "tense": "P", "characterOffsetBegin": 118, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 24, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [17, 25], "characterOffsetBegin": 122, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 25, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 139, "segment_span": [17, 25], "characterOffsetBegin": 132, "originalText": "strings", "ArgType": "subj", "before": " "}, {"index": 26, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 144, "segment_span": [25, 46], "characterOffsetBegin": 140, "originalText": "that", "ArgType": null, "before": " "}, {"index": 27, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 149, "segment_span": [25, 46], "characterOffsetBegin": 145, "originalText": "this", "ArgType": null, "before": " "}, {"index": 28, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 160, "segment_span": [25, 46], "characterOffsetBegin": 150, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 29, "word": "fails", "lemma": "fail", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 166, "segment_span": [25, 46], "tense": "Z", "characterOffsetBegin": 161, "originalText": "fails", "ArgType": null, "before": " "}, {"index": 30, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 169, "segment_span": [25, 46], "characterOffsetBegin": 167, "originalText": "to", "ArgType": null, "before": " "}, {"index": 31, "word": "handle", "lemma": "handle", "after": " ", "pos": "VB", "characterOffsetEnd": 176, "segment_span": [25, 46], "characterOffsetBegin": 170, "originalText": "handle", "ArgType": null, "before": " "}, {"index": 32, "word": "correctly", "lemma": "correctly", "after": " ", "pos": "RB", "characterOffsetEnd": 186, "segment_span": [25, 46], "characterOffsetBegin": 177, "originalText": "correctly", "ArgType": null, "before": " "}, {"index": 33, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 188, "segment_span": [25, 46], "characterOffsetBegin": 187, "originalText": "(", "ArgType": null, "before": " "}, {"index": 34, "word": "assuming", "lemma": "assume", "after": " ", "pos": "VBG", "characterOffsetEnd": 197, "segment_span": [25, 46], "characterOffsetBegin": 189, "originalText": "assuming", "ArgType": null, "before": " "}, {"index": 35, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 202, "segment_span": [34, 45], "characterOffsetBegin": 198, "originalText": "that", "ArgType": null, "before": " "}, {"index": 36, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 208, "segment_span": [34, 45], "characterOffsetBegin": 203, "originalText": "there", "ArgType": null, "before": " "}, {"index": 37, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 211, "segment_span": [34, 45], "tense": "Z", "characterOffsetBegin": 209, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 38, "word": "no", "lemma": "no", "after": " ", "pos": "DT", "characterOffsetEnd": 214, "segment_span": [34, 45], "characterOffsetBegin": 212, "originalText": "no", "ArgType": null, "before": " "}, {"index": 39, "word": "bound", "lemma": "bind", "after": " ", "pos": "VBN", "characterOffsetEnd": 220, "segment_span": [34, 45], "characterOffsetBegin": 215, "originalText": "bound", "ArgType": "subj", "before": " "}, {"index": 40, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 223, "segment_span": [34, 45], "characterOffsetBegin": 221, "originalText": "on", "ArgType": null, "before": " "}, {"index": 41, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 227, "segment_span": [34, 45], "characterOffsetBegin": 224, "originalText": "the", "ArgType": null, "before": " "}, {"index": 42, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 234, "segment_span": [34, 45], "characterOffsetBegin": 228, "originalText": "length", "ArgType": null, "before": " "}, {"index": 43, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 237, "segment_span": [34, 45], "characterOffsetBegin": 235, "originalText": "of", "ArgType": null, "before": " "}, {"index": 44, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 247, "segment_span": [34, 45], "characterOffsetBegin": 238, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 45, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 255, "segment_span": [34, 45], "characterOffsetBegin": 248, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 46, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 257, "segment_span": [25, 46], "characterOffsetBegin": 256, "originalText": ")", "ArgType": null, "before": " "}, {"index": 47, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 259, "characterOffsetBegin": 258, "originalText": ".", "ArgType": null, "before": " "}], "text": "In this case , the resulting transducer only approximates the OT analysis , because it turns out that for any X there are candidate strings that this transducer fails to handle correctly ( assuming that there is no bound on the length of candidate strings ) ."}, {"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 3, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "Our", "ArgType": null, "before": ""}, {"index": 2, "word": "notation", "lemma": "notation", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 17], "characterOffsetBegin": 4, "originalText": "notation", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 15, "segment_span": [0, 17], "characterOffsetBegin": 13, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 24, "segment_span": [0, 17], "characterOffsetBegin": 16, "originalText": "somewhat", "ArgType": null, "before": " "}, {"index": 5, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 34, "segment_span": [0, 17], "characterOffsetBegin": 25, "originalText": "different", "ArgType": "verb", "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 36, "segment_span": [0, 17], "characterOffsetBegin": 35, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 40, "segment_span": [0, 17], "characterOffsetBegin": 37, "originalText": "but", "ArgType": null, "before": " "}, {"index": 8, "word": "equivalent", "lemma": "equivalent", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 17], "characterOffsetBegin": 41, "originalText": "equivalent", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 54, "segment_span": [0, 17], "characterOffsetBegin": 52, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 17], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "notation", "lemma": "notation", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 17], "characterOffsetBegin": 59, "originalText": "notation", "ArgType": null, "before": " "}, {"index": 12, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 72, "segment_span": [0, 17], "characterOffsetBegin": 68, "originalText": "used", "ArgType": null, "before": " "}, {"index": 13, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [0, 17], "characterOffsetBegin": 73, "originalText": "by", "ArgType": null, "before": " "}, {"index": 14, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 86, "segment_span": [0, 17], "characterOffsetBegin": 77, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 88, "segment_span": [0, 17], "characterOffsetBegin": 87, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 92, "segment_span": [0, 17], "characterOffsetBegin": 88, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 93, "segment_span": [0, 17], "characterOffsetBegin": 92, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 96, "characterOffsetBegin": 95, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Our notation is somewhat different , but equivalent to the notation used by Karttunen ( 0000 ) ."}, {"tokens": [{"index": 1, "word": "Instead", "lemma": "instead", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "Instead", "ArgType": null, "before": ""}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 10, "segment_span": [0, 7], "characterOffsetBegin": 8, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 7], "characterOffsetBegin": 11, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 7], "characterOffsetBegin": 13, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 7], "characterOffsetBegin": 22, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 7], "characterOffsetBegin": 25, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 7, "word": "Cons0", "lemma": "cons0", "after": "     ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 7], "characterOffsetBegin": 37, "originalText": "Cons0", "ArgType": null, "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 48, "characterOffsetBegin": 47, "originalText": ".", "ArgType": null, "before": "     "}], "text": "Instead of a sequence of constraints Cons0 ."}, {"tokens": [{"index": 1, "word": "ConsX", "lemma": "ConsX", "after": " ", "pos": "NNP", "characterOffsetEnd": 5, "segment_span": [0, 29], "characterOffsetBegin": 0, "originalText": "ConsX", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 7, "segment_span": [0, 29], "characterOffsetBegin": 6, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 10, "segment_span": [0, 29], "characterOffsetBegin": 8, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 15, "segment_span": [0, 29], "characterOffsetBegin": 11, "originalText": "will", "ArgType": null, "before": " "}, {"index": 5, "word": "write", "lemma": "write", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 21, "segment_span": [0, 29], "tense": "B", "characterOffsetBegin": 16, "originalText": "write", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "Cands", "lemma": "Cands", "after": " ", "pos": "NNP", "characterOffsetEnd": 27, "segment_span": [0, 29], "characterOffsetBegin": 22, "originalText": "Cands", "ArgType": null, "before": " "}, {"index": 7, "word": "oo", "lemma": "oo", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 29], "characterOffsetBegin": 28, "originalText": "oo", "ArgType": null, "before": " "}, {"index": 8, "word": "Prec", "lemma": "Prec", "after": " ", "pos": "NNP", "characterOffsetEnd": 35, "segment_span": [0, 29], "characterOffsetBegin": 31, "originalText": "Prec", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 37, "segment_span": [0, 29], "characterOffsetBegin": 36, "originalText": ":", "ArgType": null, "before": " "}, {"index": 10, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 39, "segment_span": [0, 29], "characterOffsetBegin": 38, "originalText": ":", "ArgType": null, "before": " "}, {"index": 11, "word": "Cons", "lemma": "con", "after": " ", "pos": "NNS", "characterOffsetEnd": 44, "segment_span": [0, 29], "characterOffsetBegin": 40, "originalText": "Cons", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 46, "segment_span": [0, 29], "characterOffsetBegin": 45, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 52, "segment_span": [12, 16], "characterOffsetBegin": 47, "originalText": "which", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 55, "segment_span": [12, 16], "characterOffsetBegin": 53, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "read", "is_pass": true, "lemma": "read", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 60, "segment_span": [12, 16], "tense": "N", "characterOffsetBegin": 56, "originalText": "read", "ArgType": null, "before": " "}, {"index": 16, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [12, 16], "characterOffsetBegin": 61, "originalText": "as", "ArgType": null, "before": " "}, {"index": 17, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 65, "segment_span": [0, 29], "characterOffsetBegin": 64, "originalText": ":", "ArgType": null, "before": " "}, {"index": 18, "word": "apply", "lemma": "apply", "after": " ", "pos": "VB", "characterOffsetEnd": 71, "segment_span": [0, 29], "characterOffsetBegin": 66, "originalText": "apply", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 29], "characterOffsetBegin": 72, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 20, "word": "Cons", "lemma": "con", "after": " ", "pos": "NNS", "characterOffsetEnd": 87, "segment_span": [0, 29], "characterOffsetBegin": 83, "originalText": "Cons", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 90, "segment_span": [0, 29], "characterOffsetBegin": 88, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 94, "segment_span": [0, 29], "characterOffsetBegin": 91, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [0, 29], "characterOffsetBegin": 95, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 24, "word": "set", "lemma": "set", "after": " ", "pos": "VBN", "characterOffsetEnd": 108, "segment_span": [0, 29], "characterOffsetBegin": 105, "originalText": "set", "ArgType": null, "before": " "}, {"index": 25, "word": "Cands", "lemma": "cand", "after": " ", "pos": "NNS", "characterOffsetEnd": 114, "segment_span": [0, 29], "characterOffsetBegin": 109, "originalText": "Cands", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 119, "segment_span": [0, 29], "characterOffsetBegin": 115, "originalText": "with", "ArgType": null, "before": " "}, {"index": 27, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 129, "segment_span": [0, 29], "characterOffsetBegin": 120, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 28, "word": "Prec", "lemma": "Prec", "after": " ", "pos": "NNP", "characterOffsetEnd": 134, "segment_span": [0, 29], "characterOffsetBegin": 130, "originalText": "Prec", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 136, "segment_span": [0, 29], "characterOffsetBegin": 135, "originalText": ",", "ArgType": null, "before": " "}, {"index": 30, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 142, "segment_span": [29, 39], "characterOffsetBegin": 137, "originalText": "where", "ArgType": null, "before": " "}, {"index": 31, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 145, "segment_span": [29, 39], "characterOffsetBegin": 143, "originalText": "``", "ArgType": null, "before": " "}, {"index": 32, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [29, 39], "characterOffsetBegin": 146, "originalText": "precision", "ArgType": "subj", "before": " "}, {"index": 33, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 158, "segment_span": [29, 39], "characterOffsetBegin": 156, "originalText": "''", "ArgType": null, "before": " "}, {"index": 34, "word": "means", "lemma": "mean", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 164, "segment_span": [29, 39], "tense": "Z", "characterOffsetBegin": 159, "originalText": "means", "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 168, "segment_span": [29, 39], "characterOffsetBegin": 165, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "predetermined", "lemma": "predetermined", "after": " ", "pos": "JJ", "characterOffsetEnd": 182, "segment_span": [29, 39], "characterOffsetBegin": 169, "originalText": "predetermined", "ArgType": null, "before": " "}, {"index": 37, "word": "bound", "lemma": "bind", "after": " ", "pos": "VBN", "characterOffsetEnd": 188, "segment_span": [29, 39], "characterOffsetBegin": 183, "originalText": "bound", "ArgType": null, "before": " "}, {"index": 38, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 191, "segment_span": [29, 39], "characterOffsetBegin": 189, "originalText": "on", "ArgType": null, "before": " "}, {"index": 39, "word": "counting", "lemma": "counting", "after": " ", "pos": "NN", "characterOffsetEnd": 200, "segment_span": [29, 39], "characterOffsetBegin": 192, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 202, "characterOffsetBegin": 201, "originalText": ".", "ArgType": null, "before": " "}], "text": "ConsX , we will write Cands oo Prec : : Cons , which is read as : apply constraint Cons to the candidate set Cands with precision Prec , where `` precision '' means the predetermined bound on counting ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 13], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 13], "characterOffsetBegin": 14, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "variant", "lemma": "variant", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 13], "characterOffsetBegin": 16, "originalText": "variant", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 13], "characterOffsetBegin": 24, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 13], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "syllabify", "lemma": "syllabify", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 13], "characterOffsetBegin": 31, "originalText": "syllabify", "ArgType": null, "before": " "}, {"index": 9, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 13], "characterOffsetBegin": 41, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 10, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 55, "segment_span": [0, 13], "characterOffsetBegin": 52, "originalText": "can", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 58, "segment_span": [0, 13], "characterOffsetBegin": 56, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 66, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 59, "originalText": "defined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [0, 13], "characterOffsetBegin": 67, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 71, "characterOffsetBegin": 70, "originalText": ":", "ArgType": null, "before": " "}], "text": "For example , a variant of the syllabify constraint can be defined as :"}, {"tokens": [{"index": 1, "word": "Using", "lemma": "use", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 5, "segment_span": [0, 6], "tense": "G", "characterOffsetBegin": 0, "originalText": "Using", "ArgType": null, "before": ""}, {"index": 2, "word": "techniques", "lemma": "technique", "after": " ", "pos": "NNS", "characterOffsetEnd": 16, "segment_span": [0, 6], "characterOffsetBegin": 6, "originalText": "techniques", "ArgType": "dobj", "before": " "}, {"index": 3, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 26, "segment_span": [0, 6], "characterOffsetBegin": 17, "originalText": "described", "ArgType": null, "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 6], "characterOffsetBegin": 27, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 6], "characterOffsetBegin": 31, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 6, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 42, "segment_span": [0, 6], "characterOffsetBegin": 41, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 7, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 48, "segment_span": [6, 22], "characterOffsetBegin": 44, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 51, "segment_span": [6, 22], "characterOffsetBegin": 50, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 9, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 56, "segment_span": [6, 22], "characterOffsetBegin": 52, "originalText": "this", "ArgType": null, "before": " "}, {"index": 10, "word": "variant", "lemma": "variant", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [6, 22], "characterOffsetBegin": 57, "originalText": "variant", "ArgType": null, "before": " "}, {"index": 11, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 68, "segment_span": [6, 22], "characterOffsetBegin": 65, "originalText": "can", "ArgType": null, "before": " "}, {"index": 12, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 71, "segment_span": [6, 22], "characterOffsetBegin": 69, "originalText": "be", "ArgType": null, "before": " "}, {"index": 13, "word": "shown", "is_pass": true, "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 77, "segment_span": [6, 22], "tense": "N", "characterOffsetBegin": 72, "originalText": "shown", "has_aux": true, "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 80, "segment_span": [6, 22], "characterOffsetBegin": 78, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 83, "segment_span": [6, 22], "characterOffsetBegin": 81, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 89, "segment_span": [6, 22], "characterOffsetBegin": 84, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 17, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 93, "segment_span": [6, 22], "characterOffsetBegin": 90, "originalText": "for", "ArgType": null, "before": " "}, {"index": 18, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 97, "segment_span": [6, 22], "characterOffsetBegin": 94, "originalText": "all", "ArgType": null, "before": " "}, {"index": 19, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 105, "segment_span": [6, 22], "characterOffsetBegin": 98, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [6, 22], "characterOffsetBegin": 106, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "length", "lemma": "length", "after": "  ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [6, 22], "characterOffsetBegin": 109, "originalText": "length", "ArgType": null, "before": " "}, {"index": 22, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 125, "segment_span": [6, 22], "characterOffsetBegin": 117, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 128, "characterOffsetBegin": 127, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Using techniques described in equation ; CREF , this variant can be shown to be exact for all strings of length equation ."}, {"tokens": [{"index": 1, "word": "Note", "lemma": "note", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 4, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Note", "ArgType": null, "before": ""}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 9, "segment_span": [1, 15], "characterOffsetBegin": 5, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [1, 15], "characterOffsetBegin": 10, "originalText": "if", "ArgType": null, "before": " "}, {"index": 4, "word": "no", "lemma": "no", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [1, 15], "characterOffsetBegin": 13, "originalText": "no", "ArgType": null, "before": " "}, {"index": 5, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [1, 15], "characterOffsetBegin": 16, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 28, "segment_span": [1, 15], "characterOffsetBegin": 26, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "specified", "is_pass": true, "lemma": "specify", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 38, "segment_span": [1, 15], "tense": "N", "characterOffsetBegin": 29, "originalText": "specified", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 40, "segment_span": [1, 15], "characterOffsetBegin": 39, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 45, "segment_span": [1, 15], "characterOffsetBegin": 41, "originalText": "then", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [1, 15], "characterOffsetBegin": 46, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [1, 15], "characterOffsetBegin": 48, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [1, 15], "characterOffsetBegin": 58, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 62, "segment_span": [1, 15], "characterOffsetBegin": 61, "originalText": "0", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 65, "segment_span": [1, 15], "characterOffsetBegin": 63, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "assumed", "is_pass": true, "lemma": "assume", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 73, "segment_span": [1, 15], "tense": "N", "characterOffsetBegin": 66, "originalText": "assumed", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 75, "characterOffsetBegin": 74, "originalText": ".", "ArgType": null, "before": " "}], "text": "Note that if no precision is specified , then a precision of 0 is assumed ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "construct", "lemma": "construct", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 5], "characterOffsetBegin": 5, "originalText": "construct", "ArgType": null, "before": " "}, {"index": 3, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 18, "segment_span": [0, 5], "characterOffsetBegin": 15, "originalText": "can", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 21, "segment_span": [0, 5], "characterOffsetBegin": 19, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 22, "originalText": "defined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [5, 25], "characterOffsetBegin": 30, "originalText": "as", "ArgType": null, "before": " "}, {"index": 7, "word": "follows", "lemma": "follow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 40, "segment_span": [5, 25], "tense": "Z", "characterOffsetBegin": 33, "originalText": "follows", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 42, "segment_span": [5, 25], "characterOffsetBegin": 41, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [5, 25], "characterOffsetBegin": 43, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [5, 25], "characterOffsetBegin": 46, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "actual", "lemma": "actual", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [5, 25], "characterOffsetBegin": 50, "originalText": "actual", "ArgType": null, "before": " "}, {"index": 12, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [5, 25], "characterOffsetBegin": 57, "originalText": "implementation", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [5, 25], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 83, "segment_span": [5, 25], "characterOffsetBegin": 76, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 15, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [5, 25], "characterOffsetBegin": 84, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 97, "segment_span": [5, 25], "characterOffsetBegin": 95, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "computed", "lemma": "compute", "after": " ", "pos": "VBN", "characterOffsetEnd": 106, "segment_span": [5, 25], "characterOffsetBegin": 98, "originalText": "computed", "ArgType": null, "before": " "}, {"index": 18, "word": "dynamically", "lemma": "dynamically", "after": " ", "pos": "RB", "characterOffsetEnd": 118, "segment_span": [5, 25], "characterOffsetBegin": 107, "originalText": "dynamically", "ArgType": null, "before": " "}, {"index": 19, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 124, "segment_span": [5, 25], "characterOffsetBegin": 119, "originalText": "based", "ArgType": null, "before": " "}, {"index": 20, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 127, "segment_span": [5, 25], "characterOffsetBegin": 125, "originalText": "on", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 131, "segment_span": [5, 25], "characterOffsetBegin": 128, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "value", "lemma": "value", "after": " ", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [5, 25], "characterOffsetBegin": 132, "originalText": "value", "ArgType": null, "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 140, "segment_span": [5, 25], "characterOffsetBegin": 138, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "Prec", "lemma": "prec", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [5, 25], "characterOffsetBegin": 141, "originalText": "Prec", "ArgType": null, "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 147, "segment_span": [5, 25], "characterOffsetBegin": 146, "originalText": ")", "ArgType": null, "before": " "}, {"index": 26, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 149, "characterOffsetBegin": 148, "originalText": ":", "ArgType": null, "before": " "}], "text": "This construct can be defined as follows ( in the actual implementation the regular expression is computed dynamically based on the value of Prec ) :"}]}], "title": "The Counting Approach"}, {"num": 3, "subsections": [{"title": "", "num": 0, "sentences": []}, {"title": "Introduction", "num": 1, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 22], "characterOffsetBegin": 3, "originalText": "order", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 11, "segment_span": [0, 22], "characterOffsetBegin": 9, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "illustrate", "lemma": "illustrate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 22], "tense": "B", "characterOffsetBegin": 12, "originalText": "illustrate", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 22], "characterOffsetBegin": 23, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 22], "characterOffsetBegin": 27, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 22], "characterOffsetBegin": 39, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 49, "segment_span": [0, 22], "characterOffsetBegin": 48, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 55, "segment_span": [8, 9], "tense": "N", "characterOffsetBegin": 50, "originalText": "based", "ArgType": null, "before": " "}, {"index": 10, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [9, 11], "characterOffsetBegin": 56, "originalText": "on", "ArgType": null, "before": " "}, {"index": 11, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 67, "segment_span": [9, 11], "tense": "G", "characterOffsetBegin": 59, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 12, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 70, "segment_span": [11, 19], "characterOffsetBegin": 68, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 13, "word": "return", "lemma": "return", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 77, "segment_span": [11, 19], "tense": "B", "characterOffsetBegin": 71, "originalText": "return", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 80, "segment_span": [11, 19], "characterOffsetBegin": 78, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 84, "segment_span": [11, 19], "characterOffsetBegin": 81, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "bebop", "lemma": "bebop", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [11, 19], "characterOffsetBegin": 85, "originalText": "bebop", "ArgType": null, "before": " "}, {"index": 17, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [11, 19], "characterOffsetBegin": 91, "originalText": "example", "ArgType": null, "before": " "}, {"index": 18, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 104, "segment_span": [11, 19], "characterOffsetBegin": 99, "originalText": "given", "ArgType": null, "before": " "}, {"index": 19, "word": "earlier", "lemma": "earlier", "after": " ", "pos": "RBR", "characterOffsetEnd": 112, "segment_span": [11, 19], "characterOffsetBegin": 105, "originalText": "earlier", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 114, "segment_span": [0, 22], "characterOffsetBegin": 113, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "repeated", "lemma": "repeat", "after": " ", "pos": "VBN", "characterOffsetEnd": 123, "segment_span": [0, 22], "characterOffsetBegin": 115, "originalText": "repeated", "ArgType": null, "before": " "}, {"index": 22, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 128, "segment_span": [0, 22], "characterOffsetBegin": 124, "originalText": "here", "ArgType": null, "before": " "}, {"index": 23, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 130, "characterOffsetBegin": 129, "originalText": ":", "ArgType": null, "before": " "}], "text": "In order to illustrate the alternative approach , based on matching we return to the bebop example given earlier , repeated here :"}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 6], "characterOffsetBegin": 5, "originalText": "an", "ArgType": null, "before": " "}, {"index": 3, "word": "instance", "lemma": "instance", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 6], "characterOffsetBegin": 8, "originalText": "instance", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [0, 6], "characterOffsetBegin": 17, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 21, "segment_span": [0, 6], "characterOffsetBegin": 20, "originalText": "'", "ArgType": null, "before": " "}, {"index": 6, "word": "X", "lemma": "x", "after": "", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 6], "characterOffsetBegin": 22, "originalText": "X", "ArgType": null, "before": " "}, {"index": 7, "word": "[", "lemma": "-lsb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 24, "segment_span": [6, 19], "characterOffsetBegin": 23, "originalText": "[", "ArgType": null, "before": ""}, {"index": 8, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 26, "segment_span": [6, 19], "characterOffsetBegin": 25, "originalText": "'", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 29, "segment_span": [6, 19], "characterOffsetBegin": 27, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [6, 19], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [6, 19], "characterOffsetBegin": 32, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 12, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [6, 19], "characterOffsetBegin": 43, "originalText": "violation", "ArgType": "subj", "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [6, 19], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "so", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 57, "segment_span": [6, 19], "characterOffsetBegin": 55, "originalText": "so", "ArgType": null, "before": " "}, {"index": 15, "word": "c2", "lemma": "c2", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [6, 19], "characterOffsetBegin": 58, "originalText": "c2", "ArgType": null, "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 63, "segment_span": [6, 19], "characterOffsetBegin": 61, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 67, "segment_span": [6, 19], "characterOffsetBegin": 64, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 72, "segment_span": [6, 19], "characterOffsetBegin": 68, "originalText": "best", "ArgType": null, "before": " "}, {"index": 19, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [6, 19], "characterOffsetBegin": 73, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here an instance of ' X [ ' is a constraint violation , so c2 is the best candidate ."}, {"tokens": [{"index": 1, "word": "By", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "By", "ArgType": null, "before": ""}, {"index": 2, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 2], "tense": "G", "characterOffsetBegin": 3, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [2, 6], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "one", "lemma": "one", "after": " ", "pos": "PRP", "characterOffsetEnd": 17, "segment_span": [2, 6], "characterOffsetBegin": 14, "originalText": "one", "ArgType": "subj", "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 21, "segment_span": [2, 6], "characterOffsetBegin": 18, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "see", "lemma": "see", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 25, "segment_span": [2, 6], "tense": "B", "characterOffsetBegin": 22, "originalText": "see", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [6, 12], "characterOffsetBegin": 26, "originalText": "that", "ArgType": null, "before": " "}, {"index": 8, "word": "c2", "lemma": "c2", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [6, 12], "characterOffsetBegin": 31, "originalText": "c2", "ArgType": "subj", "before": " "}, {"index": 9, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 37, "segment_span": [6, 12], "tense": "Z", "characterOffsetBegin": 34, "originalText": "has", "ArgType": null, "before": " "}, {"index": 10, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 41, "segment_span": [6, 12], "characterOffsetBegin": 38, "originalText": "one", "ArgType": null, "before": " "}, {"index": 11, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [6, 12], "characterOffsetBegin": 42, "originalText": "violation", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 53, "segment_span": [6, 12], "characterOffsetBegin": 52, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "while", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [12, 19], "characterOffsetBegin": 54, "originalText": "while", "ArgType": null, "before": " "}, {"index": 14, "word": "c1", "lemma": "c1", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [12, 19], "characterOffsetBegin": 60, "originalText": "c1", "ArgType": "subj", "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 66, "segment_span": [12, 19], "characterOffsetBegin": 63, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "c3", "lemma": "c3", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [12, 19], "characterOffsetBegin": 67, "originalText": "c3", "ArgType": null, "before": " "}, {"index": 17, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [12, 19], "characterOffsetBegin": 70, "originalText": "each", "ArgType": "subj", "before": " "}, {"index": 18, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 79, "segment_span": [12, 19], "tense": "P", "characterOffsetBegin": 75, "originalText": "have", "ArgType": null, "before": " "}, {"index": 19, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 81, "segment_span": [12, 19], "characterOffsetBegin": 80, "originalText": "3", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 83, "characterOffsetBegin": 82, "originalText": ".", "ArgType": null, "before": " "}], "text": "By counting , one can see that c2 has one violation , while c1 and c3 each have 3 ."}, {"tokens": [{"index": 1, "word": "By", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "By", "ArgType": null, "before": ""}, {"index": 2, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 2], "tense": "G", "characterOffsetBegin": 3, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [2, 17], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "one", "lemma": "one", "after": " ", "pos": "PRP", "characterOffsetEnd": 17, "segment_span": [2, 17], "characterOffsetBegin": 14, "originalText": "one", "ArgType": "subj", "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 21, "segment_span": [2, 17], "characterOffsetBegin": 18, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "see", "lemma": "see", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 25, "segment_span": [2, 17], "tense": "B", "characterOffsetBegin": 22, "originalText": "see", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [6, 15], "characterOffsetBegin": 26, "originalText": "that", "ArgType": null, "before": " "}, {"index": 8, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [6, 15], "characterOffsetBegin": 31, "originalText": "all", "ArgType": null, "before": " "}, {"index": 9, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 45, "segment_span": [6, 15], "characterOffsetBegin": 35, "originalText": "candidates", "ArgType": "subj", "before": " "}, {"index": 10, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 50, "segment_span": [6, 15], "tense": "P", "characterOffsetBegin": 46, "originalText": "have", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [6, 15], "characterOffsetBegin": 51, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [6, 15], "characterOffsetBegin": 53, "originalText": "violation", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [6, 15], "characterOffsetBegin": 63, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [6, 15], "characterOffsetBegin": 66, "originalText": "position", "ArgType": null, "before": " "}, {"index": 15, "word": "13", "lemma": "13", "after": " ", "pos": "CD", "characterOffsetEnd": 77, "segment_span": [6, 15], "characterOffsetBegin": 75, "originalText": "13", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 79, "segment_span": [2, 17], "characterOffsetBegin": 78, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 83, "segment_span": [2, 17], "characterOffsetBegin": 80, "originalText": "but", "ArgType": null, "before": " "}, {"index": 18, "word": "c1", "lemma": "c1", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [17, 31], "characterOffsetBegin": 84, "originalText": "c1", "ArgType": "subj", "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 90, "segment_span": [17, 31], "characterOffsetBegin": 87, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "c3", "lemma": "c3", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [17, 31], "characterOffsetBegin": 91, "originalText": "c3", "ArgType": null, "before": " "}, {"index": 21, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 98, "segment_span": [17, 31], "characterOffsetBegin": 94, "originalText": "also", "ArgType": null, "before": " "}, {"index": 22, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 103, "segment_span": [17, 31], "tense": "P", "characterOffsetBegin": 99, "originalText": "have", "ArgType": null, "before": " "}, {"index": 23, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 114, "segment_span": [17, 31], "characterOffsetBegin": 104, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 117, "segment_span": [17, 31], "characterOffsetBegin": 115, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "positions", "lemma": "position", "after": " ", "pos": "NNS", "characterOffsetEnd": 127, "segment_span": [17, 31], "characterOffsetBegin": 118, "originalText": "positions", "ArgType": null, "before": " "}, {"index": 26, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 131, "segment_span": [17, 31], "characterOffsetBegin": 128, "originalText": "not", "ArgType": null, "before": " "}, {"index": 27, "word": "corresponding", "lemma": "correspond", "after": " ", "pos": "VBG", "characterOffsetEnd": 145, "segment_span": [17, 31], "characterOffsetBegin": 132, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 28, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 148, "segment_span": [17, 31], "characterOffsetBegin": 146, "originalText": "to", "ArgType": null, "before": " "}, {"index": 29, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 159, "segment_span": [17, 31], "characterOffsetBegin": 149, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 30, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 162, "segment_span": [17, 31], "characterOffsetBegin": 160, "originalText": "in", "ArgType": null, "before": " "}, {"index": 31, "word": "c2", "lemma": "c2", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [17, 31], "characterOffsetBegin": 163, "originalText": "c2", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 167, "characterOffsetBegin": 166, "originalText": ".", "ArgType": null, "before": " "}], "text": "By matching , one can see that all candidates have a violation in position 13 , but c1 and c3 also have violations in positions not corresponding to violations in c2 ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 2, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "long", "lemma": "long", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 21], "characterOffsetBegin": 3, "originalText": "long", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 21], "characterOffsetBegin": 8, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "positions", "lemma": "position", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [0, 21], "characterOffsetBegin": 12, "originalText": "positions", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 21], "characterOffsetBegin": 22, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 35, "segment_span": [0, 21], "characterOffsetBegin": 25, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 7, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 21], "characterOffsetBegin": 36, "originalText": "line", "ArgType": null, "before": " "}, {"index": 8, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 43, "segment_span": [0, 21], "characterOffsetBegin": 41, "originalText": "up", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 21], "characterOffsetBegin": 44, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [0, 21], "characterOffsetBegin": 47, "originalText": "this", "ArgType": null, "before": " "}, {"index": 11, "word": "manner", "lemma": "manner", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 21], "characterOffsetBegin": 52, "originalText": "manner", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 60, "segment_span": [0, 21], "characterOffsetBegin": 59, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 63, "segment_span": [0, 21], "characterOffsetBegin": 61, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 66, "segment_span": [0, 21], "characterOffsetBegin": 64, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 75, "segment_span": [0, 21], "characterOffsetBegin": 67, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 78, "segment_span": [0, 21], "characterOffsetBegin": 76, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "construct", "lemma": "construct", "after": " ", "pos": "VB", "characterOffsetEnd": 88, "segment_span": [0, 21], "characterOffsetBegin": 79, "originalText": "construct", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 90, "segment_span": [0, 21], "characterOffsetBegin": 89, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 97, "segment_span": [0, 21], "characterOffsetBegin": 91, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 20, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 21], "characterOffsetBegin": 98, "originalText": "state", "ArgType": null, "before": " "}, {"index": 21, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 21], "characterOffsetBegin": 104, "originalText": "filter", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 113, "segment_span": [21, 31], "characterOffsetBegin": 111, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "rule", "lemma": "rule", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 118, "segment_span": [21, 31], "tense": "B", "characterOffsetBegin": 114, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 24, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 122, "segment_span": [21, 31], "characterOffsetBegin": 119, "originalText": "out", "ArgType": null, "before": " "}, {"index": 25, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 133, "segment_span": [21, 31], "characterOffsetBegin": 123, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 138, "segment_span": [21, 31], "characterOffsetBegin": 134, "originalText": "with", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 140, "segment_span": [21, 31], "characterOffsetBegin": 139, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "non-minimal", "lemma": "non-minimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 152, "segment_span": [21, 31], "characterOffsetBegin": 141, "originalText": "non-minimal", "ArgType": null, "before": " "}, {"index": 29, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 159, "segment_span": [21, 31], "characterOffsetBegin": 153, "originalText": "number", "ArgType": null, "before": " "}, {"index": 30, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 162, "segment_span": [21, 31], "characterOffsetBegin": 160, "originalText": "of", "ArgType": null, "before": " "}, {"index": 31, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 173, "segment_span": [21, 31], "characterOffsetBegin": 163, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 175, "characterOffsetBegin": 174, "originalText": ".", "ArgType": null, "before": " "}], "text": "As long the positions of violations line up in this manner , it is possible to construct a finite state filter to rule out candidates with a non-minimal number of violations ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "filter", "ArgType": "subj", "before": " "}, {"index": 3, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 15, "segment_span": [0, 10], "characterOffsetBegin": 11, "originalText": "will", "ArgType": null, "before": " "}, {"index": 4, "word": "take", "lemma": "take", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 10], "tense": "B", "characterOffsetBegin": 16, "originalText": "take", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 21, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "set", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 10], "characterOffsetBegin": 29, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 42, "segment_span": [0, 10], "characterOffsetBegin": 32, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 44, "segment_span": [0, 10], "characterOffsetBegin": 43, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 48, "segment_span": [0, 10], "characterOffsetBegin": 45, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "subtract", "lemma": "subtract", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 57, "segment_span": [10, 20], "tense": "B", "characterOffsetBegin": 49, "originalText": "subtract", "ArgType": null, "before": " "}, {"index": 12, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [10, 20], "characterOffsetBegin": 58, "originalText": "from", "ArgType": null, "before": " "}, {"index": 13, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 67, "segment_span": [10, 20], "characterOffsetBegin": 63, "originalText": "that", "ArgType": null, "before": " "}, {"index": 14, "word": "set", "lemma": "set", "after": " ", "pos": "VBN", "characterOffsetEnd": 71, "segment_span": [10, 20], "characterOffsetBegin": 68, "originalText": "set", "ArgType": null, "before": " "}, {"index": 15, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [10, 20], "characterOffsetBegin": 72, "originalText": "all", "ArgType": null, "before": " "}, {"index": 16, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [10, 20], "characterOffsetBegin": 76, "originalText": "strings", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 88, "segment_span": [16, 19], "characterOffsetBegin": 84, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 18, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 92, "segment_span": [16, 19], "characterOffsetBegin": 89, "originalText": "are", "ArgType": null, "before": " "}, {"index": 19, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 100, "segment_span": [16, 19], "characterOffsetBegin": 93, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 102, "segment_span": [10, 20], "characterOffsetBegin": 101, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [20, 27], "characterOffsetBegin": 103, "originalText": "except", "ArgType": null, "before": " "}, {"index": 22, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 114, "segment_span": [20, 27], "characterOffsetBegin": 110, "originalText": "that", "ArgType": null, "before": " "}, {"index": 23, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 119, "segment_span": [20, 27], "characterOffsetBegin": 115, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 24, "word": "contain", "lemma": "contain", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 127, "segment_span": [20, 27], "tense": "P", "characterOffsetBegin": 120, "originalText": "contain", "ArgType": null, "before": " "}, {"index": 25, "word": "additional", "lemma": "additional", "after": " ", "pos": "JJ", "characterOffsetEnd": 138, "segment_span": [20, 27], "characterOffsetBegin": 128, "originalText": "additional", "ArgType": null, "before": " "}, {"index": 26, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [20, 27], "characterOffsetBegin": 139, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 27, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 160, "segment_span": [20, 27], "characterOffsetBegin": 150, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 162, "characterOffsetBegin": 161, "originalText": ".", "ArgType": null, "before": " "}], "text": "The filter will take the set of candidates , and subtract from that set all strings that are similar , except that they contain additional constraint violations ."}, {"tokens": [{"index": 1, "word": "Given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Given", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 20], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 20], "characterOffsetBegin": 10, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 21, "segment_span": [0, 20], "characterOffsetBegin": 19, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "marking", "lemma": "mark", "after": " ", "pos": "VBG", "characterOffsetEnd": 29, "segment_span": [0, 20], "characterOffsetBegin": 22, "originalText": "marking", "ArgType": null, "before": " "}, {"index": 6, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 32, "segment_span": [0, 20], "characterOffsetBegin": 30, "originalText": "up", "ArgType": null, "before": " "}, {"index": 7, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 20], "characterOffsetBegin": 33, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 8, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 54, "segment_span": [0, 20], "characterOffsetBegin": 44, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "introduced", "lemma": "introduce", "after": " ", "pos": "VBN", "characterOffsetEnd": 65, "segment_span": [0, 20], "characterOffsetBegin": 55, "originalText": "introduced", "ArgType": null, "before": " "}, {"index": 10, "word": "earlier", "lemma": "earlier", "after": " ", "pos": "RBR", "characterOffsetEnd": 73, "segment_span": [0, 20], "characterOffsetBegin": 66, "originalText": "earlier", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 75, "segment_span": [0, 20], "characterOffsetBegin": 74, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 78, "segment_span": [0, 20], "characterOffsetBegin": 76, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 81, "segment_span": [0, 20], "characterOffsetBegin": 79, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [0, 20], "characterOffsetBegin": 82, "originalText": "possible", "ArgType": "verb", "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 93, "segment_span": [0, 20], "characterOffsetBegin": 91, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "construct", "lemma": "construct", "after": " ", "pos": "VB", "characterOffsetEnd": 103, "segment_span": [0, 20], "characterOffsetBegin": 94, "originalText": "construct", "ArgType": null, "before": " "}, {"index": 17, "word": "such", "lemma": "such", "after": " ", "pos": "PDT", "characterOffsetEnd": 108, "segment_span": [0, 20], "characterOffsetBegin": 104, "originalText": "such", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [0, 20], "characterOffsetBegin": 109, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 119, "segment_span": [0, 20], "characterOffsetBegin": 111, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 20, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [0, 20], "characterOffsetBegin": 120, "originalText": "filter", "ArgType": "dobj", "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 128, "characterOffsetBegin": 127, "originalText": ".", "ArgType": null, "before": " "}], "text": "Given the approach of marking up constraint violations introduced earlier , it is possible to construct such a matching filter ."}, {"tokens": [{"index": 1, "word": "Consider", "lemma": "consider", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 8, "segment_span": [0, 7], "tense": "B", "characterOffsetBegin": 0, "originalText": "Consider", "ArgType": null, "before": ""}, {"index": 2, "word": "again", "lemma": "again", "after": " ", "pos": "RB", "characterOffsetEnd": 14, "segment_span": [0, 7], "characterOffsetBegin": 9, "originalText": "again", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 7], "characterOffsetBegin": 15, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 19, "originalText": "`", "ArgType": null, "before": " "}, {"index": 5, "word": "bebop", "lemma": "bebop", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "bebop", "ArgType": null, "before": " "}, {"index": 6, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 28, "segment_span": [0, 7], "characterOffsetBegin": 27, "originalText": "'", "ArgType": null, "before": " "}, {"index": 7, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 7], "characterOffsetBegin": 29, "originalText": "example", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 38, "characterOffsetBegin": 37, "originalText": ".", "ArgType": null, "before": " "}], "text": "Consider again the ` bebop ' example ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 5], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 17, "segment_span": [0, 5], "characterOffsetBegin": 7, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 4, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 21, "segment_span": [0, 5], "characterOffsetBegin": 18, "originalText": "are", "ArgType": null, "before": " "}, {"index": 5, "word": "marked", "is_pass": true, "lemma": "marked", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 5], "characterOffsetBegin": 22, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 30, "segment_span": [5, 11], "characterOffsetBegin": 29, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [5, 11], "characterOffsetBegin": 31, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 45, "segment_span": [5, 11], "characterOffsetBegin": 35, "originalText": "candidates", "ArgType": "subj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [5, 11], "characterOffsetBegin": 46, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "interest", "lemma": "interest", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [5, 11], "characterOffsetBegin": 49, "originalText": "interest", "ArgType": null, "before": " "}, {"index": 11, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 61, "segment_span": [5, 11], "tense": "P", "characterOffsetBegin": 58, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 63, "characterOffsetBegin": 62, "originalText": ":", "ArgType": null, "before": " "}], "text": "If the violations are marked , the candidates of interest are :"}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 15], "characterOffsetBegin": 4, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 15], "characterOffsetBegin": 8, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 16, "segment_span": [0, 15], "characterOffsetBegin": 15, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 19, "segment_span": [0, 15], "characterOffsetBegin": 17, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "want", "lemma": "want", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 15], "tense": "P", "characterOffsetBegin": 20, "originalText": "want", "ArgType": "verb", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 27, "segment_span": [0, 15], "characterOffsetBegin": 25, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "compare", "lemma": "compare", "after": " ", "pos": "VB", "characterOffsetEnd": 35, "segment_span": [0, 15], "characterOffsetBegin": 28, "originalText": "compare", "ArgType": null, "before": " "}, {"index": 9, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 47, "segment_span": [0, 15], "characterOffsetBegin": 36, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 10, "word": "mark-ups", "lemma": "mark-up", "after": " ", "pos": "NNS", "characterOffsetEnd": 56, "segment_span": [0, 15], "characterOffsetBegin": 48, "originalText": "mark-ups", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [0, 15], "characterOffsetBegin": 57, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [0, 15], "characterOffsetBegin": 61, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 69, "segment_span": [0, 15], "characterOffsetBegin": 65, "originalText": "same", "ArgType": null, "before": " "}, {"index": 14, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [0, 15], "characterOffsetBegin": 70, "originalText": "input", "ArgType": null, "before": " "}, {"index": 15, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 15], "characterOffsetBegin": 76, "originalText": "string", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ".", "ArgType": null, "before": " "}], "text": "For the filter , we want to compare alternative mark-ups for the same input string ."}, {"tokens": [{"index": 1, "word": "Any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Any", "ArgType": null, "before": ""}, {"index": 2, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "other", "ArgType": null, "before": " "}, {"index": 3, "word": "differences", "lemma": "difference", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [0, 9], "characterOffsetBegin": 10, "originalText": "differences", "ArgType": null, "before": " "}, {"index": 4, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 9], "characterOffsetBegin": 22, "originalText": "between", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 9], "characterOffsetBegin": 30, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 44, "segment_span": [0, 9], "characterOffsetBegin": 34, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 48, "segment_span": [0, 9], "characterOffsetBegin": 45, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 51, "segment_span": [0, 9], "characterOffsetBegin": 49, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "ignored", "is_pass": true, "lemma": "ignore", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 59, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 52, "originalText": "ignored", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 61, "characterOffsetBegin": 60, "originalText": ".", "ArgType": null, "before": " "}], "text": "Any other differences between the candidates can be ignored ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "So", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 19], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 19], "characterOffsetBegin": 7, "originalText": "first", "ArgType": null, "before": " "}, {"index": 4, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 19], "characterOffsetBegin": 13, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 20, "segment_span": [0, 19], "characterOffsetBegin": 18, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "constructing", "lemma": "construct", "after": " ", "pos": "VBG", "characterOffsetEnd": 33, "segment_span": [0, 19], "characterOffsetBegin": 21, "originalText": "constructing", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 37, "segment_span": [0, 19], "characterOffsetBegin": 34, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 19], "characterOffsetBegin": 38, "originalText": "filter", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 47, "segment_span": [0, 19], "tense": "Z", "characterOffsetBegin": 45, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 50, "segment_span": [0, 19], "characterOffsetBegin": 48, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "eliminate", "lemma": "eliminate", "after": " ", "pos": "VB", "characterOffsetEnd": 60, "segment_span": [0, 19], "characterOffsetBegin": 51, "originalText": "eliminate", "ArgType": null, "before": " "}, {"index": 12, "word": "everything", "lemma": "everything", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 19], "characterOffsetBegin": 61, "originalText": "everything", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 78, "segment_span": [0, 19], "characterOffsetBegin": 72, "originalText": "except", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 82, "segment_span": [0, 19], "characterOffsetBegin": 79, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 90, "segment_span": [0, 19], "characterOffsetBegin": 83, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 94, "segment_span": [0, 19], "characterOffsetBegin": 91, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [0, 19], "characterOffsetBegin": 95, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 107, "segment_span": [0, 19], "characterOffsetBegin": 99, "originalText": "original", "ArgType": null, "before": " "}, {"index": 19, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [0, 19], "characterOffsetBegin": 108, "originalText": "input", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 115, "characterOffsetBegin": 114, "originalText": ".", "ArgType": null, "before": " "}], "text": "So the first step in constructing the filter is to eliminate everything except the markers and the original input ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 4, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "syllable", "lemma": "syllable", "after": " ", "pos": "JJ", "characterOffsetEnd": 16, "segment_span": [0, 7], "characterOffsetBegin": 8, "originalText": "syllable", "ArgType": null, "before": " "}, {"index": 4, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 7], "characterOffsetBegin": 17, "originalText": "structure", "ArgType": null, "before": " "}, {"index": 5, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 7], "characterOffsetBegin": 27, "originalText": "example", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 36, "segment_span": [0, 7], "characterOffsetBegin": 35, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "finding", "lemma": "find", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 44, "segment_span": [0, 7], "tense": "G", "characterOffsetBegin": 37, "originalText": "finding", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 48, "segment_span": [7, 12], "characterOffsetBegin": 45, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 57, "segment_span": [7, 12], "characterOffsetBegin": 49, "originalText": "original", "ArgType": null, "before": " "}, {"index": 10, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [7, 12], "characterOffsetBegin": 58, "originalText": "input", "ArgType": "subj", "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 66, "segment_span": [7, 12], "characterOffsetBegin": 64, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "easy", "lemma": "easy", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [7, 12], "characterOffsetBegin": 67, "originalText": "easy", "ArgType": null, "before": " "}, {"index": 13, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 77, "segment_span": [12, 17], "characterOffsetBegin": 72, "originalText": "since", "ArgType": null, "before": " "}, {"index": 14, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 80, "segment_span": [12, 17], "characterOffsetBegin": 78, "originalText": "it", "ArgType": null, "before": " "}, {"index": 15, "word": "never", "lemma": "never", "after": " ", "pos": "RB", "characterOffsetEnd": 86, "segment_span": [12, 17], "characterOffsetBegin": 81, "originalText": "never", "ArgType": null, "before": " "}, {"index": 16, "word": "gets", "lemma": "get", "after": " ", "pos": "VBZ", "characterOffsetEnd": 91, "segment_span": [12, 17], "characterOffsetBegin": 87, "originalText": "gets", "ArgType": null, "before": " "}, {"index": 17, "word": "changed", "is_pass": true, "lemma": "change", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 99, "segment_span": [12, 17], "tense": "N", "characterOffsetBegin": 92, "originalText": "changed", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 101, "characterOffsetBegin": 100, "originalText": ".", "ArgType": null, "before": " "}], "text": "For the syllable structure example , finding the original input is easy since it never gets changed ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 10, "segment_span": [0, 11], "characterOffsetBegin": 8, "originalText": "``", "ArgType": null, "before": " "}, {"index": 4, "word": "bebop", "lemma": "bebop", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 11], "characterOffsetBegin": 11, "originalText": "bebop", "ArgType": null, "before": " "}, {"index": 5, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 19, "segment_span": [0, 11], "characterOffsetBegin": 17, "originalText": "''", "ArgType": null, "before": " "}, {"index": 6, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "example", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 29, "segment_span": [0, 11], "characterOffsetBegin": 28, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 11], "characterOffsetBegin": 30, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 34, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 10, "word": "first", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 46, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "first", "ArgType": null, "before": " "}, {"index": 11, "word": "constructs", "lemma": "construct", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [0, 11], "characterOffsetBegin": 47, "originalText": "constructs", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 59, "characterOffsetBegin": 58, "originalText": ":", "ArgType": null, "before": " "}], "text": "For the `` bebop '' example , the filter first constructs :"}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "Since", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 8, "segment_span": [0, 16], "characterOffsetBegin": 6, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "want", "lemma": "want", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 9, "originalText": "want", "ArgType": null, "before": " "}, {"index": 4, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 16, "segment_span": [0, 16], "characterOffsetBegin": 14, "originalText": "to", "ArgType": null, "before": " "}, {"index": 5, "word": "rule", "lemma": "rule", "after": " ", "pos": "VB", "characterOffsetEnd": 21, "segment_span": [0, 16], "characterOffsetBegin": 17, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 6, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 25, "segment_span": [0, 16], "characterOffsetBegin": 22, "originalText": "out", "ArgType": null, "before": " "}, {"index": 7, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 16], "characterOffsetBegin": 26, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 41, "segment_span": [0, 16], "characterOffsetBegin": 37, "originalText": "with", "ArgType": null, "before": " "}, {"index": 9, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [0, 16], "characterOffsetBegin": 42, "originalText": "at", "ArgType": null, "before": " "}, {"index": 10, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 50, "segment_span": [0, 16], "characterOffsetBegin": 45, "originalText": "least", "ArgType": null, "before": " "}, {"index": 11, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 54, "segment_span": [0, 16], "characterOffsetBegin": 51, "originalText": "one", "ArgType": null, "before": " "}, {"index": 12, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 59, "segment_span": [0, 16], "characterOffsetBegin": 55, "originalText": "more", "ArgType": null, "before": " "}, {"index": 13, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 16], "characterOffsetBegin": 60, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 14, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 16], "characterOffsetBegin": 71, "originalText": "violation", "ArgType": null, "before": " "}, {"index": 15, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [0, 16], "characterOffsetBegin": 81, "originalText": "than", "ArgType": null, "before": " "}, {"index": 16, "word": "necessary", "lemma": "necessary", "after": " ", "pos": "JJ", "characterOffsetEnd": 95, "segment_span": [0, 16], "characterOffsetBegin": 86, "originalText": "necessary", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 97, "segment_span": [16, 24], "characterOffsetBegin": 96, "originalText": ",", "ArgType": null, "before": " "}, {"index": 18, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 100, "segment_span": [16, 24], "characterOffsetBegin": 98, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 19, "word": "apply", "lemma": "apply", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 106, "segment_span": [16, 24], "tense": "P", "characterOffsetBegin": 101, "originalText": "apply", "ArgType": "verb", "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 108, "segment_span": [16, 24], "characterOffsetBegin": 107, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [16, 24], "characterOffsetBegin": 109, "originalText": "transducer", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 122, "segment_span": [16, 24], "characterOffsetBegin": 120, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 127, "segment_span": [16, 24], "characterOffsetBegin": 123, "originalText": "this", "ArgType": null, "before": " "}, {"index": 24, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [16, 24], "characterOffsetBegin": 128, "originalText": "set", "ArgType": null, "before": " "}, {"index": 25, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 137, "segment_span": [24, 31], "characterOffsetBegin": 132, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 26, "word": "inserts", "lemma": "insert", "after": " ", "pos": "NNS", "characterOffsetEnd": 145, "segment_span": [24, 31], "characterOffsetBegin": 138, "originalText": "inserts", "ArgType": null, "before": " "}, {"index": 27, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 148, "segment_span": [24, 31], "characterOffsetBegin": 146, "originalText": "at", "ArgType": null, "before": " "}, {"index": 28, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 154, "segment_span": [24, 31], "characterOffsetBegin": 149, "originalText": "least", "ArgType": null, "before": " "}, {"index": 29, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 158, "segment_span": [24, 31], "characterOffsetBegin": 155, "originalText": "one", "ArgType": null, "before": " "}, {"index": 30, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 163, "segment_span": [24, 31], "characterOffsetBegin": 159, "originalText": "more", "ArgType": null, "before": " "}, {"index": 31, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 170, "segment_span": [24, 31], "characterOffsetBegin": 164, "originalText": "marker", "ArgType": "dobj", "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 172, "characterOffsetBegin": 171, "originalText": ".", "ArgType": null, "before": " "}], "text": "Since we want to rule out candidates with at least one more constraint violation than necessary , we apply a transducer to this set which inserts at least one more marker ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 5, "originalText": "will", "ArgType": null, "before": " "}, {"index": 3, "word": "yield", "lemma": "yield", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 15, "segment_span": [0, 9], "tense": "B", "characterOffsetBegin": 10, "originalText": "yield", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 9], "characterOffsetBegin": 16, "originalText": "an", "ArgType": null, "before": " "}, {"index": 5, "word": "infinite", "lemma": "infinite", "after": " ", "pos": "JJ", "characterOffsetEnd": 27, "segment_span": [0, 9], "characterOffsetBegin": 19, "originalText": "infinite", "ArgType": null, "before": " "}, {"index": 6, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 9], "characterOffsetBegin": 28, "originalText": "set", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 9], "characterOffsetBegin": 32, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "bad", "lemma": "bad", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 35, "originalText": "bad", "ArgType": null, "before": " "}, {"index": 9, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 49, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 10, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [9, 31], "characterOffsetBegin": 50, "originalText": "each", "ArgType": "subj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [9, 31], "characterOffsetBegin": 55, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 63, "segment_span": [9, 31], "characterOffsetBegin": 58, "originalText": "which", "ArgType": null, "before": " "}, {"index": 13, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 67, "segment_span": [9, 31], "tense": "Z", "characterOffsetBegin": 64, "originalText": "has", "ArgType": null, "before": " "}, {"index": 14, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [9, 31], "characterOffsetBegin": 68, "originalText": "at", "ArgType": null, "before": " "}, {"index": 15, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 76, "segment_span": [9, 31], "characterOffsetBegin": 71, "originalText": "least", "ArgType": null, "before": " "}, {"index": 16, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 80, "segment_span": [9, 31], "characterOffsetBegin": 77, "originalText": "two", "ArgType": null, "before": " "}, {"index": 17, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 88, "segment_span": [9, 31], "characterOffsetBegin": 81, "originalText": "markers", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 92, "segment_span": [9, 31], "characterOffsetBegin": 89, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [9, 31], "characterOffsetBegin": 93, "originalText": "with", "ArgType": null, "before": " "}, {"index": 20, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 101, "segment_span": [9, 31], "characterOffsetBegin": 98, "originalText": "one", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 104, "segment_span": [9, 31], "characterOffsetBegin": 102, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 108, "segment_span": [9, 31], "characterOffsetBegin": 105, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 116, "segment_span": [9, 31], "characterOffsetBegin": 109, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 24, "word": "coming", "lemma": "come", "after": " ", "pos": "VBG", "characterOffsetEnd": 123, "segment_span": [9, 31], "characterOffsetBegin": 117, "originalText": "coming", "ArgType": null, "before": " "}, {"index": 25, "word": "directly", "lemma": "directly", "after": " ", "pos": "RB", "characterOffsetEnd": 132, "segment_span": [9, 31], "characterOffsetBegin": 124, "originalText": "directly", "ArgType": null, "before": " "}, {"index": 26, "word": "before", "lemma": "before", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [9, 31], "characterOffsetBegin": 133, "originalText": "before", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 143, "segment_span": [9, 31], "characterOffsetBegin": 140, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 149, "segment_span": [9, 31], "characterOffsetBegin": 144, "originalText": "final", "ArgType": null, "before": " "}, {"index": 29, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 151, "segment_span": [9, 31], "characterOffsetBegin": 150, "originalText": "`", "ArgType": null, "before": " "}, {"index": 30, "word": "p", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 153, "segment_span": [9, 31], "characterOffsetBegin": 152, "originalText": "p", "ArgType": null, "before": " "}, {"index": 31, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 155, "segment_span": [9, 31], "characterOffsetBegin": 154, "originalText": "'", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 157, "characterOffsetBegin": 156, "originalText": ".", "ArgType": null, "before": " "}], "text": "This will yield an infinite set of bad candidates each of which has at least two markers and with one of the markers coming directly before the final ` p ' ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 12], "characterOffsetBegin": 3, "originalText": "order", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 11, "segment_span": [0, 12], "characterOffsetBegin": 9, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "use", "lemma": "use", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 15, "segment_span": [0, 12], "tense": "B", "characterOffsetBegin": 12, "originalText": "use", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 20, "segment_span": [0, 12], "characterOffsetBegin": 16, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 12], "characterOffsetBegin": 21, "originalText": "set", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 12], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "bad", "lemma": "bad", "after": " ", "pos": "JJ", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 28, "originalText": "bad", "ArgType": null, "before": " "}, {"index": 9, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 42, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [0, 12], "characterOffsetBegin": 43, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [0, 12], "characterOffsetBegin": 46, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 12], "characterOffsetBegin": 48, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 56, "segment_span": [12, 18], "characterOffsetBegin": 55, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 65, "segment_span": [12, 18], "characterOffsetBegin": 57, "originalText": "brackets", "ArgType": "subj", "before": " "}, {"index": 15, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 70, "segment_span": [12, 18], "tense": "P", "characterOffsetBegin": 66, "originalText": "have", "ArgType": "verb", "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 73, "segment_span": [12, 18], "characterOffsetBegin": 71, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 76, "segment_span": [12, 18], "characterOffsetBegin": 74, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "reinserted", "lemma": "reinsert", "after": " ", "pos": "VBN", "characterOffsetEnd": 87, "segment_span": [12, 18], "characterOffsetBegin": 77, "originalText": "reinserted", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 89, "characterOffsetBegin": 88, "originalText": ".", "ArgType": null, "before": " "}], "text": "In order to use this set of bad candidates as a filter , brackets have to be reinserted ."}, {"tokens": [{"index": 1, "word": "But", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 3, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "But", "ArgType": null, "before": ""}, {"index": 2, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 9, "segment_span": [1, 11], "characterOffsetBegin": 4, "originalText": "since", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [1, 11], "characterOffsetBegin": 10, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [1, 11], "characterOffsetBegin": 14, "originalText": "filter", "ArgType": "subj", "before": " "}, {"index": 5, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 25, "segment_span": [1, 11], "characterOffsetBegin": 21, "originalText": "does", "ArgType": null, "before": " "}, {"index": 6, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 29, "segment_span": [1, 11], "characterOffsetBegin": 26, "originalText": "not", "ArgType": null, "before": " "}, {"index": 7, "word": "care", "lemma": "care", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 34, "segment_span": [1, 11], "tense": "B", "characterOffsetBegin": 30, "originalText": "care", "has_aux": true, "ArgType": null, "before": " "}, {"index": 8, "word": "about", "lemma": "about", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [1, 11], "characterOffsetBegin": 35, "originalText": "about", "ArgType": null, "before": " "}, {"index": 9, "word": "positions", "lemma": "position", "after": " ", "pos": "NNS", "characterOffsetEnd": 50, "segment_span": [1, 11], "characterOffsetBegin": 41, "originalText": "positions", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [1, 11], "characterOffsetBegin": 51, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 62, "segment_span": [1, 11], "characterOffsetBegin": 54, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 64, "segment_span": [0, 17], "characterOffsetBegin": 63, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [0, 17], "characterOffsetBegin": 65, "originalText": "these", "ArgType": null, "before": " "}, {"index": 14, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 74, "segment_span": [0, 17], "characterOffsetBegin": 71, "originalText": "can", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 77, "segment_span": [0, 17], "characterOffsetBegin": 75, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "inserted", "is_pass": true, "lemma": "insert", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 86, "segment_span": [0, 17], "tense": "N", "characterOffsetBegin": 78, "originalText": "inserted", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "randomly", "lemma": "randomly", "after": " ", "pos": "RB", "characterOffsetEnd": 95, "segment_span": [0, 17], "characterOffsetBegin": 87, "originalText": "randomly", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 97, "characterOffsetBegin": 96, "originalText": ".", "ArgType": null, "before": " "}], "text": "But since the filter does not care about positions of brackets , these can be inserted randomly ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 31], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 31], "characterOffsetBegin": 4, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 13, "segment_span": [0, 31], "characterOffsetBegin": 11, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 31], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 31], "characterOffsetBegin": 18, "originalText": "set", "ArgType": "verb", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 31], "characterOffsetBegin": 22, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 31], "characterOffsetBegin": 25, "originalText": "all", "ArgType": null, "before": " "}, {"index": 8, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 31], "characterOffsetBegin": 29, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 9, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 41, "segment_span": [0, 31], "characterOffsetBegin": 37, "originalText": "with", "ArgType": null, "before": " "}, {"index": 10, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [0, 31], "characterOffsetBegin": 42, "originalText": "at", "ArgType": null, "before": " "}, {"index": 11, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 50, "segment_span": [0, 31], "characterOffsetBegin": 45, "originalText": "least", "ArgType": null, "before": " "}, {"index": 12, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 54, "segment_span": [0, 31], "characterOffsetBegin": 51, "originalText": "two", "ArgType": null, "before": " "}, {"index": 13, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 62, "segment_span": [0, 31], "characterOffsetBegin": 55, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 64, "segment_span": [0, 31], "characterOffsetBegin": 63, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 68, "segment_span": [0, 31], "characterOffsetBegin": 65, "originalText": "one", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [0, 31], "characterOffsetBegin": 69, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [0, 31], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [0, 31], "characterOffsetBegin": 76, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 19, "word": "coming", "lemma": "come", "after": " ", "pos": "VBG", "characterOffsetEnd": 90, "segment_span": [0, 31], "characterOffsetBegin": 84, "originalText": "coming", "ArgType": null, "before": " "}, {"index": 20, "word": "directly", "lemma": "directly", "after": " ", "pos": "RB", "characterOffsetEnd": 99, "segment_span": [0, 31], "characterOffsetBegin": 91, "originalText": "directly", "ArgType": null, "before": " "}, {"index": 21, "word": "before", "lemma": "before", "after": " ", "pos": "IN", "characterOffsetEnd": 106, "segment_span": [0, 31], "characterOffsetBegin": 100, "originalText": "before", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [0, 31], "characterOffsetBegin": 107, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [0, 31], "characterOffsetBegin": 111, "originalText": "final", "ArgType": null, "before": " "}, {"index": 24, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 118, "segment_span": [0, 31], "characterOffsetBegin": 117, "originalText": "`", "ArgType": null, "before": " "}, {"index": 25, "word": "p", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [0, 31], "characterOffsetBegin": 119, "originalText": "p", "ArgType": null, "before": " "}, {"index": 26, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 122, "segment_span": [0, 31], "characterOffsetBegin": 121, "originalText": "'", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 124, "segment_span": [0, 31], "characterOffsetBegin": 123, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 128, "segment_span": [0, 31], "characterOffsetBegin": 125, "originalText": "and", "ArgType": null, "before": " "}, {"index": 29, "word": "arbitrary", "lemma": "arbitrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 138, "segment_span": [0, 31], "characterOffsetBegin": 129, "originalText": "arbitrary", "ArgType": null, "before": " "}, {"index": 30, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 147, "segment_span": [0, 31], "characterOffsetBegin": 139, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 31, "word": "anywhere", "lemma": "anywhere", "after": " ", "pos": "RB", "characterOffsetEnd": 156, "segment_span": [0, 31], "characterOffsetBegin": 148, "originalText": "anywhere", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 158, "characterOffsetBegin": 157, "originalText": ".", "ArgType": null, "before": " "}], "text": "The result is the set of all strings with at least two markers , one of the markers coming directly before the final ` p ' , and arbitrary brackets anywhere ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 10], "characterOffsetBegin": 5, "originalText": "set", "ArgType": "subj", "before": " "}, {"index": 3, "word": "includes", "lemma": "include", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 9, "originalText": "includes", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 10], "characterOffsetBegin": 18, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 25, "segment_span": [0, 10], "characterOffsetBegin": 22, "originalText": "two", "ArgType": null, "before": " "}, {"index": 6, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 10], "characterOffsetBegin": 26, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "c1", "lemma": "c1", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 10], "characterOffsetBegin": 37, "originalText": "c1", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 43, "segment_span": [0, 10], "characterOffsetBegin": 40, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "c3", "lemma": "c3", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 44, "originalText": "c3", "ArgType": null, "before": " "}, {"index": 10, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 10], "characterOffsetBegin": 47, "originalText": "above", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 54, "characterOffsetBegin": 53, "originalText": ".", "ArgType": null, "before": " "}], "text": "This set includes the two candidates c1 and c3 above ."}, {"tokens": [{"index": 1, "word": "Therefore", "lemma": "therefore", "after": " ", "pos": "RB", "characterOffsetEnd": 9, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Therefore", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 11, "segment_span": [0, 11], "characterOffsetBegin": 10, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "after", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [2, 6], "characterOffsetBegin": 12, "originalText": "after", "ArgType": null, "before": " "}, {"index": 4, "word": "applying", "lemma": "apply", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 26, "segment_span": [2, 6], "tense": "G", "characterOffsetBegin": 18, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [2, 6], "characterOffsetBegin": 27, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [2, 6], "characterOffsetBegin": 32, "originalText": "filter", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [0, 11], "characterOffsetBegin": 39, "originalText": "only", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [0, 11], "characterOffsetBegin": 44, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "optimal", "lemma": "optimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 55, "segment_span": [0, 11], "characterOffsetBegin": 48, "originalText": "optimal", "ArgType": null, "before": " "}, {"index": 10, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 11], "characterOffsetBegin": 56, "originalText": "candidate", "ArgType": "subj", "before": " "}, {"index": 11, "word": "survives", "lemma": "survive", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 74, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 66, "originalText": "survives", "ArgType": "verb", "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 76, "characterOffsetBegin": 75, "originalText": ".", "ArgType": null, "before": " "}], "text": "Therefore , after applying this filter only the optimal candidate survives ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 9, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "three", "ArgType": null, "before": " "}, {"index": 3, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 10, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "deleting", "lemma": "delete", "after": " ", "pos": "VBG", "characterOffsetEnd": 27, "segment_span": [0, 11], "characterOffsetBegin": 19, "originalText": "deleting", "ArgType": null, "before": " "}, {"index": 6, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 28, "originalText": "brackets", "ArgType": "dobj", "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 38, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "adding", "lemma": "add", "after": " ", "pos": "VBG", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 39, "originalText": "adding", "ArgType": null, "before": " "}, {"index": 9, "word": "extra", "lemma": "extra", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "extra", "ArgType": null, "before": " "}, {"index": 10, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "markers", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 63, "segment_span": [0, 11], "characterOffsetBegin": 60, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "randomly", "lemma": "randomly", "after": " ", "pos": "RB", "characterOffsetEnd": 72, "segment_span": [11, 13], "characterOffsetBegin": 64, "originalText": "randomly", "ArgType": null, "before": " "}, {"index": 13, "word": "reinserting", "lemma": "reinsert", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 84, "segment_span": [11, 13], "tense": "G", "characterOffsetBegin": 73, "originalText": "reinserting", "ArgType": null, "before": " "}, {"index": 14, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 93, "segment_span": [13, 24], "characterOffsetBegin": 85, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 97, "segment_span": [13, 24], "characterOffsetBegin": 94, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "encoded", "is_pass": true, "lemma": "encode", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 105, "segment_span": [13, 24], "tense": "N", "characterOffsetBegin": 98, "originalText": "encoded", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [13, 24], "characterOffsetBegin": 106, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 112, "segment_span": [13, 24], "characterOffsetBegin": 109, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "add_violation", "lemma": "add_violation", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [13, 24], "characterOffsetBegin": 113, "originalText": "add_violation", "ArgType": null, "before": " "}, {"index": 20, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [13, 24], "characterOffsetBegin": 127, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 21, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 138, "segment_span": [13, 24], "characterOffsetBegin": 133, "originalText": "given", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [13, 24], "characterOffsetBegin": 139, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "fig", "lemma": "fig", "after": "   ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [13, 24], "characterOffsetBegin": 142, "originalText": "fig", "ArgType": null, "before": " "}, {"index": 24, "word": "CREF", "lemma": "cref", "after": "   ", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [13, 24], "characterOffsetBegin": 148, "originalText": "CREF", "ArgType": null, "before": "   "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 156, "characterOffsetBegin": 155, "originalText": ".", "ArgType": null, "before": "   "}], "text": "The three steps of deleting brackets , adding extra markers and randomly reinserting brackets are encoded in the add_violation macro given in fig CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "application", "lemma": "application", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "application", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 10], "characterOffsetBegin": 19, "originalText": "an", "ArgType": null, "before": " "}, {"index": 5, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 22, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 6, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 39, "segment_span": [0, 10], "characterOffsetBegin": 36, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [0, 10], "characterOffsetBegin": 40, "originalText": "now", "ArgType": null, "before": " "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 44, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 54, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 47, "originalText": "defined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [10, 21], "characterOffsetBegin": 55, "originalText": "as", "ArgType": null, "before": " "}, {"index": 12, "word": "follows", "lemma": "follow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 65, "segment_span": [10, 21], "tense": "Z", "characterOffsetBegin": 58, "originalText": "follows", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 67, "segment_span": [10, 21], "characterOffsetBegin": 66, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 73, "segment_span": [10, 21], "characterOffsetBegin": 68, "originalText": "using", "ArgType": null, "before": " "}, {"index": 15, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 76, "segment_span": [10, 21], "characterOffsetBegin": 74, "originalText": "an", "ArgType": null, "before": " "}, {"index": 16, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 88, "segment_span": [10, 21], "characterOffsetBegin": 77, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 17, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [10, 21], "characterOffsetBegin": 89, "originalText": "definition", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [10, 21], "characterOffsetBegin": 100, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 106, "segment_span": [10, 21], "characterOffsetBegin": 103, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [10, 21], "characterOffsetBegin": 107, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 21, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [10, 21], "characterOffsetBegin": 118, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 22, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 128, "characterOffsetBegin": 127, "originalText": ":", "ArgType": null, "before": " "}], "text": "The application of an OT constraint can now be defined as follows , using an alternative definition of the optimality operator :"}, {"tokens": [{"index": 1, "word": "Note", "lemma": "note", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 4, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Note", "ArgType": null, "before": ""}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 9, "segment_span": [1, 15], "characterOffsetBegin": 5, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [1, 15], "characterOffsetBegin": 10, "originalText": "this", "ArgType": null, "before": " "}, {"index": 4, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 21, "segment_span": [1, 15], "characterOffsetBegin": 15, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 5, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [1, 15], "characterOffsetBegin": 22, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 6, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 35, "segment_span": [1, 15], "characterOffsetBegin": 31, "originalText": "only", "ArgType": null, "before": " "}, {"index": 7, "word": "works", "lemma": "work", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 41, "segment_span": [1, 15], "tense": "Z", "characterOffsetBegin": 36, "originalText": "works", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [1, 15], "characterOffsetBegin": 42, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 50, "segment_span": [1, 15], "characterOffsetBegin": 45, "originalText": "cases", "ArgType": null, "before": " "}, {"index": 10, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 56, "segment_span": [1, 15], "characterOffsetBegin": 51, "originalText": "where", "ArgType": null, "before": " "}, {"index": 11, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [1, 15], "characterOffsetBegin": 57, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 12, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 78, "segment_span": [1, 15], "characterOffsetBegin": 68, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 13, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [1, 15], "characterOffsetBegin": 79, "originalText": "line", "ArgType": null, "before": " "}, {"index": 14, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 86, "segment_span": [1, 15], "characterOffsetBegin": 84, "originalText": "up", "ArgType": null, "before": " "}, {"index": 15, "word": "neatly", "lemma": "neatly", "after": " ", "pos": "RB", "characterOffsetEnd": 93, "segment_span": [1, 15], "characterOffsetBegin": 87, "originalText": "neatly", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 95, "characterOffsetBegin": 94, "originalText": ".", "ArgType": null, "before": " "}], "text": "Note that this simple approach only works in cases where constraint violations line up neatly ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "turns", "lemma": "turn", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 8, "segment_span": [0, 15], "tense": "Z", "characterOffsetBegin": 3, "originalText": "turns", "ArgType": "verb", "before": " "}, {"index": 3, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 12, "segment_span": [0, 15], "characterOffsetBegin": 9, "originalText": "out", "ArgType": null, "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [0, 15], "characterOffsetBegin": 13, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 21, "segment_span": [0, 15], "characterOffsetBegin": 18, "originalText": "for", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 25, "segment_span": [0, 15], "characterOffsetBegin": 22, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 15], "characterOffsetBegin": 26, "originalText": "syllabification", "ArgType": null, "before": " "}, {"index": 8, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 15], "characterOffsetBegin": 42, "originalText": "example", "ArgType": null, "before": " "}, {"index": 9, "word": "discussed", "lemma": "discuss", "after": " ", "pos": "VBN", "characterOffsetEnd": 59, "segment_span": [0, 15], "characterOffsetBegin": 50, "originalText": "discussed", "ArgType": null, "before": " "}, {"index": 10, "word": "earlier", "lemma": "earlier", "after": " ", "pos": "RBR", "characterOffsetEnd": 67, "segment_span": [0, 15], "characterOffsetBegin": 60, "originalText": "earlier", "ArgType": null, "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 15], "characterOffsetBegin": 68, "originalText": "that", "ArgType": null, "before": " "}, {"index": 12, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 77, "segment_span": [0, 15], "characterOffsetBegin": 73, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 80, "segment_span": [0, 15], "characterOffsetBegin": 78, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 84, "segment_span": [0, 15], "characterOffsetBegin": 81, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [0, 15], "characterOffsetBegin": 85, "originalText": "case", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 91, "characterOffsetBegin": 90, "originalText": ".", "ArgType": null, "before": " "}], "text": "It turns out that for the syllabification example discussed earlier that this is the case ."}, {"tokens": [{"index": 1, "word": "Using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 5, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "Using", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 23], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "syllabify", "lemma": "syllabify", "after": " ", "pos": "JJ", "characterOffsetEnd": 19, "segment_span": [0, 23], "characterOffsetBegin": 10, "originalText": "syllabify", "ArgType": null, "before": " "}, {"index": 4, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 23], "characterOffsetBegin": 20, "originalText": "macro", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 31, "segment_span": [0, 23], "characterOffsetBegin": 26, "originalText": "given", "ArgType": null, "before": " "}, {"index": 6, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [0, 23], "characterOffsetBegin": 32, "originalText": "above", "ArgType": null, "before": " "}, {"index": 7, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 23], "characterOffsetBegin": 38, "originalText": "with", "ArgType": null, "before": " "}, {"index": 8, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [0, 23], "characterOffsetBegin": 43, "originalText": "this", "ArgType": null, "before": " "}, {"index": 9, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 56, "segment_span": [0, 23], "characterOffsetBegin": 48, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 10, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 23], "characterOffsetBegin": 57, "originalText": "implementation", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 74, "segment_span": [0, 23], "characterOffsetBegin": 72, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [0, 23], "characterOffsetBegin": 75, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [0, 23], "characterOffsetBegin": 79, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 14, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [0, 23], "characterOffsetBegin": 90, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 15, "word": "produces", "lemma": "produce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 107, "segment_span": [0, 23], "tense": "Z", "characterOffsetBegin": 99, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [0, 23], "characterOffsetBegin": 108, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [0, 23], "characterOffsetBegin": 110, "originalText": "transducer", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 123, "segment_span": [0, 23], "characterOffsetBegin": 121, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 128, "segment_span": [0, 23], "characterOffsetBegin": 124, "originalText": "only", "ArgType": null, "before": " "}, {"index": 20, "word": "22", "lemma": "22", "after": " ", "pos": "CD", "characterOffsetEnd": 131, "segment_span": [0, 23], "characterOffsetBegin": 129, "originalText": "22", "ArgType": null, "before": " "}, {"index": 21, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 138, "segment_span": [0, 23], "characterOffsetBegin": 132, "originalText": "states", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 140, "segment_span": [0, 23], "characterOffsetBegin": 139, "originalText": ",", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 144, "segment_span": [0, 23], "characterOffsetBegin": 141, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 148, "segment_span": [23, 32], "characterOffsetBegin": 145, "originalText": "can", "ArgType": null, "before": " "}, {"index": 25, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 151, "segment_span": [23, 32], "characterOffsetBegin": 149, "originalText": "be", "ArgType": null, "before": " "}, {"index": 26, "word": "shown", "is_pass": true, "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 157, "segment_span": [23, 32], "tense": "N", "characterOffsetBegin": 152, "originalText": "shown", "has_aux": true, "ArgType": null, "before": " "}, {"index": 27, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 160, "segment_span": [23, 32], "characterOffsetBegin": 158, "originalText": "to", "ArgType": null, "before": " "}, {"index": 28, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 163, "segment_span": [23, 32], "characterOffsetBegin": 161, "originalText": "be", "ArgType": null, "before": " "}, {"index": 29, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 169, "segment_span": [23, 32], "characterOffsetBegin": 164, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 30, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 173, "segment_span": [23, 32], "characterOffsetBegin": 170, "originalText": "for", "ArgType": null, "before": " "}, {"index": 31, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 177, "segment_span": [23, 32], "characterOffsetBegin": 174, "originalText": "all", "ArgType": null, "before": " "}, {"index": 32, "word": "inputs", "lemma": "input", "after": "", "pos": "NNS", "characterOffsetEnd": 184, "segment_span": [23, 32], "characterOffsetBegin": 178, "originalText": "inputs", "ArgType": null, "before": " "}, {"index": 33, "word": "!", "lemma": "!", "after": "", "pos": ".", "characterOffsetEnd": 185, "characterOffsetBegin": 184, "originalText": "!", "ArgType": null, "before": ""}], "text": "Using the syllabify macro given above with this matching implementation of the optimality operator produces a transducer of only 22 states , and can be shown to be exact for all inputs !"}]}, {"title": "Permutation", "num": 2, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 13], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 13], "characterOffsetBegin": 7, "originalText": "general", "ArgType": null, "before": " "}, {"index": 4, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 13], "characterOffsetBegin": 15, "originalText": "case", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [0, 13], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 29, "segment_span": [0, 13], "characterOffsetBegin": 22, "originalText": "however", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 31, "segment_span": [0, 13], "characterOffsetBegin": 30, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 13], "characterOffsetBegin": 32, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 9, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 53, "segment_span": [0, 13], "characterOffsetBegin": 43, "originalText": "violations", "ArgType": "subj", "before": " "}, {"index": 10, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 58, "segment_span": [0, 13], "tense": "P", "characterOffsetBegin": 54, "originalText": "need", "ArgType": "verb", "before": " "}, {"index": 11, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 62, "segment_span": [0, 13], "characterOffsetBegin": 59, "originalText": "not", "ArgType": null, "before": " "}, {"index": 12, "word": "line", "lemma": "line", "after": " ", "pos": "VB", "characterOffsetEnd": 67, "segment_span": [0, 13], "characterOffsetBegin": 63, "originalText": "line", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 70, "segment_span": [0, 13], "characterOffsetBegin": 68, "originalText": "up", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 72, "characterOffsetBegin": 71, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the general case , however , constraint violations need not line up ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 13], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 13], "characterOffsetBegin": 14, "originalText": "if", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 20, "segment_span": [0, 13], "characterOffsetBegin": 17, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 13], "characterOffsetBegin": 21, "originalText": "order", "ArgType": null, "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 13], "characterOffsetBegin": 27, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 41, "segment_span": [0, 13], "characterOffsetBegin": 30, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 44, "segment_span": [0, 13], "characterOffsetBegin": 42, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 53, "segment_span": [0, 13], "characterOffsetBegin": 45, "originalText": "somewhat", "ArgType": null, "before": " "}, {"index": 11, "word": "rearranged", "lemma": "rearrange", "after": " ", "pos": "VBN", "characterOffsetEnd": 64, "segment_span": [0, 13], "characterOffsetBegin": 54, "originalText": "rearranged", "ArgType": null, "before": " "}, {"index": 12, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [0, 13], "characterOffsetBegin": 65, "originalText": "as", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 13], "characterOffsetBegin": 68, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 72, "characterOffsetBegin": 71, "originalText": ":", "ArgType": null, "before": " "}], "text": "For example , if the order of constraints is somewhat rearranged as in :"}, {"tokens": [{"index": 1, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "the", "ArgType": null, "before": ""}, {"index": 2, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 7], "characterOffsetBegin": 4, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 7], "characterOffsetBegin": 13, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 24, "segment_span": [0, 7], "characterOffsetBegin": 22, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 28, "segment_span": [0, 7], "characterOffsetBegin": 25, "originalText": "not", "ArgType": null, "before": " "}, {"index": 6, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 34, "segment_span": [0, 7], "characterOffsetBegin": 29, "originalText": "exact", "ArgType": "verb", "before": " "}, {"index": 7, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 36, "segment_span": [0, 7], "characterOffsetBegin": 35, "originalText": ":", "ArgType": null, "before": " "}, {"index": 8, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 39, "segment_span": [7, 20], "characterOffsetBegin": 37, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 9, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 44, "segment_span": [7, 20], "characterOffsetBegin": 40, "originalText": "will", "ArgType": null, "before": " "}, {"index": 10, "word": "produce", "lemma": "produce", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 52, "segment_span": [7, 20], "tense": "B", "characterOffsetBegin": 45, "originalText": "produce", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "wrong", "lemma": "wrong", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [7, 20], "characterOffsetBegin": 53, "originalText": "wrong", "ArgType": null, "before": " "}, {"index": 12, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 66, "segment_span": [7, 20], "characterOffsetBegin": 59, "originalText": "results", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [7, 20], "characterOffsetBegin": 67, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 73, "segment_span": [7, 20], "characterOffsetBegin": 71, "originalText": "an", "ArgType": null, "before": " "}, {"index": 15, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [7, 20], "characterOffsetBegin": 74, "originalText": "input", "ArgType": null, "before": " "}, {"index": 16, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 84, "segment_span": [7, 20], "characterOffsetBegin": 80, "originalText": "such", "ArgType": null, "before": " "}, {"index": 17, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 87, "segment_span": [7, 20], "characterOffsetBegin": 85, "originalText": "as", "ArgType": null, "before": " "}, {"index": 18, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 89, "segment_span": [7, 20], "characterOffsetBegin": 88, "originalText": "`", "ArgType": null, "before": " "}, {"index": 19, "word": "arts", "lemma": "art", "after": " ", "pos": "NNS", "characterOffsetEnd": 94, "segment_span": [7, 20], "characterOffsetBegin": 90, "originalText": "arts", "ArgType": null, "before": " "}, {"index": 20, "word": "'", "lemma": "'", "after": " ", "pos": "POS", "characterOffsetEnd": 96, "segment_span": [7, 20], "characterOffsetBegin": 95, "originalText": "'", "ArgType": null, "before": " "}, {"index": 21, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 98, "characterOffsetBegin": 97, "originalText": ":", "ArgType": null, "before": " "}], "text": "the matching approach is not exact : it will produce wrong results for an input such as ` arts ' :"}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 6, "segment_span": [0, 9], "characterOffsetBegin": 5, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 9], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 9], "characterOffsetBegin": 11, "originalText": "second", "ArgType": null, "before": " "}, {"index": 5, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 9], "characterOffsetBegin": 18, "originalText": "output", "ArgType": null, "before": " "}, {"index": 6, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 31, "segment_span": [0, 9], "characterOffsetBegin": 25, "originalText": "should", "ArgType": null, "before": " "}, {"index": 7, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 35, "segment_span": [0, 9], "characterOffsetBegin": 32, "originalText": "not", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 36, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "produced", "is_pass": true, "lemma": "produce", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 47, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 39, "originalText": "produced", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "because", "lemma": "because", "after": " ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [9, 19], "characterOffsetBegin": 48, "originalText": "because", "ArgType": null, "before": " "}, {"index": 11, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 58, "segment_span": [9, 19], "characterOffsetBegin": 56, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 12, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 67, "segment_span": [9, 19], "tense": "Z", "characterOffsetBegin": 59, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 13, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 71, "segment_span": [9, 19], "characterOffsetBegin": 68, "originalText": "one", "ArgType": null, "before": " "}, {"index": 14, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 76, "segment_span": [9, 19], "characterOffsetBegin": 72, "originalText": "more", "ArgType": null, "before": " "}, {"index": 15, "word": "violation", "lemma": "violation", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [9, 19], "characterOffsetBegin": 77, "originalText": "violation", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [9, 19], "characterOffsetBegin": 87, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [9, 19], "characterOffsetBegin": 90, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "fill_nuc", "lemma": "fill_nuc", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [9, 19], "characterOffsetBegin": 94, "originalText": "fill_nuc", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [9, 19], "characterOffsetBegin": 103, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 115, "characterOffsetBegin": 114, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here , the second output should not be produced because it contains one more violation of the fill_nuc constraint ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 22], "characterOffsetBegin": 3, "originalText": "such", "ArgType": null, "before": " "}, {"index": 3, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 13, "segment_span": [0, 22], "characterOffsetBegin": 8, "originalText": "cases", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 22], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 22], "characterOffsetBegin": 16, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "limited", "lemma": "limited", "after": " ", "pos": "JJ", "characterOffsetEnd": 25, "segment_span": [0, 22], "characterOffsetBegin": 18, "originalText": "limited", "ArgType": null, "before": " "}, {"index": 7, "word": "amount", "lemma": "amount", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 22], "characterOffsetBegin": 26, "originalText": "amount", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 35, "segment_span": [0, 22], "characterOffsetBegin": 33, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 22], "characterOffsetBegin": 36, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 10, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 51, "segment_span": [0, 22], "characterOffsetBegin": 48, "originalText": "can", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 54, "segment_span": [0, 22], "characterOffsetBegin": 52, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 59, "segment_span": [0, 22], "tense": "N", "characterOffsetBegin": 55, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 22], "characterOffsetBegin": 60, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 66, "segment_span": [0, 22], "characterOffsetBegin": 63, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 22], "characterOffsetBegin": 67, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 76, "segment_span": [0, 22], "characterOffsetBegin": 74, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "make", "lemma": "make", "after": " ", "pos": "VB", "characterOffsetEnd": 81, "segment_span": [0, 22], "characterOffsetBegin": 77, "originalText": "make", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [0, 22], "characterOffsetBegin": 82, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 22], "characterOffsetBegin": 86, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 20, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 100, "segment_span": [0, 22], "characterOffsetBegin": 93, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 21, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 22], "characterOffsetBegin": 101, "originalText": "line", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 108, "segment_span": [0, 22], "characterOffsetBegin": 106, "originalText": "up", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 110, "characterOffsetBegin": 109, "originalText": ".", "ArgType": null, "before": " "}], "text": "In such cases , a limited amount of permutation can be used in the filter to make the marker symbols line up ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 18], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "add_violation", "lemma": "add_violation", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 18], "characterOffsetBegin": 4, "originalText": "add_violation", "ArgType": null, "before": " "}, {"index": 3, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 18], "characterOffsetBegin": 18, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 18], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "fig", "lemma": "fig", "after": "   ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 18], "characterOffsetBegin": 28, "originalText": "fig", "ArgType": null, "before": " "}, {"index": 6, "word": "CREF", "lemma": "cref", "after": "  ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 18], "characterOffsetBegin": 34, "originalText": "CREF", "ArgType": null, "before": "   "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 43, "segment_span": [0, 18], "characterOffsetBegin": 40, "originalText": "can", "ArgType": null, "before": "  "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 46, "segment_span": [0, 18], "characterOffsetBegin": 44, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "extended", "is_pass": true, "lemma": "extend", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 55, "segment_span": [0, 18], "tense": "N", "characterOffsetBegin": 47, "originalText": "extended", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [0, 18], "characterOffsetBegin": 56, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [0, 18], "characterOffsetBegin": 61, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 74, "segment_span": [0, 18], "characterOffsetBegin": 65, "originalText": "following", "ArgType": null, "before": " "}, {"index": 13, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [0, 18], "characterOffsetBegin": 75, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 14, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 91, "segment_span": [0, 18], "characterOffsetBegin": 86, "originalText": "which", "ArgType": null, "before": " "}, {"index": 15, "word": "permutes", "lemma": "permute", "after": " ", "pos": "VBZ", "characterOffsetEnd": 100, "segment_span": [0, 18], "characterOffsetBegin": 92, "originalText": "permutes", "ArgType": null, "before": " "}, {"index": 16, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [0, 18], "characterOffsetBegin": 101, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 17, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 115, "segment_span": [0, 18], "characterOffsetBegin": 108, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 18, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 117, "segment_span": [0, 18], "characterOffsetBegin": 116, "originalText": ":", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 119, "characterOffsetBegin": 118, "originalText": ".", "ArgType": null, "before": " "}], "text": "The add_violation filter of fig CREF can be extended with the following transducer which permutes marker symbols : ."}, {"tokens": [{"index": 1, "word": "Greater", "lemma": "Greater", "after": " ", "pos": "NNP", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "Greater", "ArgType": null, "before": ""}, {"index": 2, "word": "degrees", "lemma": "degree", "after": " ", "pos": "NNS", "characterOffsetEnd": 15, "segment_span": [0, 7], "characterOffsetBegin": 8, "originalText": "degrees", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 7], "characterOffsetBegin": 16, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 7], "characterOffsetBegin": 19, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 34, "segment_span": [0, 7], "characterOffsetBegin": 31, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 37, "segment_span": [0, 7], "characterOffsetBegin": 35, "originalText": "be", "ArgType": null, "before": " "}, {"index": 7, "word": "achieved", "is_pass": true, "lemma": "achieve", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 7], "tense": "N", "characterOffsetBegin": 38, "originalText": "achieved", "has_aux": true, "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [7, 12], "characterOffsetBegin": 47, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "composing", "lemma": "compose", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 59, "segment_span": [7, 12], "tense": "G", "characterOffsetBegin": 50, "originalText": "composing", "ArgType": null, "before": " "}, {"index": 10, "word": "permute_marker", "lemma": "permute_marker", "after": " ", "pos": "JJR", "characterOffsetEnd": 74, "segment_span": [7, 12], "characterOffsetBegin": 60, "originalText": "permute_marker", "ArgType": null, "before": " "}, {"index": 11, "word": "several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 82, "segment_span": [7, 12], "characterOffsetBegin": 75, "originalText": "several", "ArgType": null, "before": " "}, {"index": 12, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 88, "segment_span": [7, 12], "characterOffsetBegin": 83, "originalText": "times", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 90, "characterOffsetBegin": 89, "originalText": ".", "ArgType": null, "before": " "}], "text": "Greater degrees of permutation can be achieved by composing permute_marker several times ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 2], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 13, "characterOffsetBegin": 12, "originalText": ":", "ArgType": null, "before": " "}], "text": "For example :"}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 24], "characterOffsetBegin": 0, "originalText": "So", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 5, "segment_span": [0, 24], "characterOffsetBegin": 3, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 9, "segment_span": [0, 24], "characterOffsetBegin": 6, "originalText": "can", "ArgType": null, "before": " "}, {"index": 4, "word": "incorporate", "lemma": "incorporate", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 21, "segment_span": [0, 24], "tense": "B", "characterOffsetBegin": 10, "originalText": "incorporate", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [0, 24], "characterOffsetBegin": 22, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "notion", "lemma": "notion", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 24], "characterOffsetBegin": 24, "originalText": "notion", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 33, "segment_span": [0, 24], "characterOffsetBegin": 31, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "`", "lemma": "`", "after": " ", "pos": "``", "characterOffsetEnd": 35, "segment_span": [0, 24], "characterOffsetBegin": 34, "originalText": "`", "ArgType": null, "before": " "}, {"index": 9, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 24], "characterOffsetBegin": 36, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 10, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 47, "segment_span": [0, 24], "characterOffsetBegin": 46, "originalText": "'", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 50, "segment_span": [0, 24], "characterOffsetBegin": 48, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 24], "characterOffsetBegin": 51, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 24], "characterOffsetBegin": 55, "originalText": "definition", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [0, 24], "characterOffsetBegin": 66, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 72, "segment_span": [0, 24], "characterOffsetBegin": 69, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "optimality", "lemma": "optimality", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [0, 24], "characterOffsetBegin": 73, "originalText": "optimality", "ArgType": null, "before": " "}, {"index": 17, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 24], "characterOffsetBegin": 84, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 18, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 96, "segment_span": [0, 24], "characterOffsetBegin": 93, "originalText": "for", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [0, 24], "characterOffsetBegin": 97, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [0, 24], "characterOffsetBegin": 101, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 21, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [0, 24], "characterOffsetBegin": 110, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 22, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 121, "segment_span": [0, 24], "characterOffsetBegin": 119, "originalText": "as", "ArgType": null, "before": " "}, {"index": 23, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 126, "segment_span": [0, 24], "characterOffsetBegin": 122, "originalText": "well", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 128, "segment_span": [0, 24], "characterOffsetBegin": 127, "originalText": ",", "ArgType": null, "before": " "}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 131, "segment_span": [24, 26], "characterOffsetBegin": 129, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "defining", "lemma": "define", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 140, "segment_span": [24, 26], "tense": "G", "characterOffsetBegin": 132, "originalText": "defining", "ArgType": null, "before": " "}, {"index": 27, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 142, "characterOffsetBegin": 141, "originalText": ":", "ArgType": null, "before": " "}], "text": "So we can incorporate a notion of ` precision ' in the definition of the optimality operator for the matching approach as well , by defining :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 4, "originalText": "use", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 10, "segment_span": [0, 7], "characterOffsetBegin": 8, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 7], "characterOffsetBegin": 11, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 25, "segment_span": [0, 7], "characterOffsetBegin": 23, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "most", "lemma": "most", "after": " ", "pos": "RBS", "characterOffsetEnd": 30, "segment_span": [0, 7], "characterOffsetBegin": 26, "originalText": "most", "ArgType": null, "before": " "}, {"index": 7, "word": "effective", "lemma": "effective", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 7], "characterOffsetBegin": 31, "originalText": "effective", "ArgType": "verb", "before": " "}, {"index": 8, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 45, "segment_span": [7, 19], "characterOffsetBegin": 41, "originalText": "when", "ArgType": null, "before": " "}, {"index": 9, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [7, 19], "characterOffsetBegin": 46, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 10, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 67, "segment_span": [7, 19], "characterOffsetBegin": 57, "originalText": "violations", "ArgType": "subj", "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [7, 19], "characterOffsetBegin": 68, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 82, "segment_span": [7, 19], "characterOffsetBegin": 71, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 13, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 93, "segment_span": [7, 19], "characterOffsetBegin": 83, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 14, "word": "tend", "lemma": "tend", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 98, "segment_span": [7, 19], "tense": "P", "characterOffsetBegin": 94, "originalText": "tend", "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 101, "segment_span": [7, 19], "characterOffsetBegin": 99, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "occur", "lemma": "occur", "after": " ", "pos": "VB", "characterOffsetEnd": 107, "segment_span": [7, 19], "characterOffsetBegin": 102, "originalText": "occur", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [7, 19], "characterOffsetBegin": 108, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "corresponding", "lemma": "corresponding", "after": " ", "pos": "JJ", "characterOffsetEnd": 124, "segment_span": [7, 19], "characterOffsetBegin": 111, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 19, "word": "positions", "lemma": "position", "after": " ", "pos": "NNS", "characterOffsetEnd": 134, "segment_span": [7, 19], "characterOffsetBegin": 125, "originalText": "positions", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 136, "characterOffsetBegin": 135, "originalText": ".", "ArgType": null, "before": " "}], "text": "The use of permutation is most effective when constraint violations in alternative candidates tend to occur in corresponding positions ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 12], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "worst", "lemma": "worst", "after": " ", "pos": "JJS", "characterOffsetEnd": 12, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": "worst", "ArgType": null, "before": " "}, {"index": 4, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 12], "characterOffsetBegin": 13, "originalText": "case", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 19, "segment_span": [0, 12], "characterOffsetBegin": 18, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "none", "lemma": "none", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 12], "characterOffsetBegin": 20, "originalText": "none", "ArgType": "subj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 12], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 42, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 10, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 46, "segment_span": [0, 12], "characterOffsetBegin": 43, "originalText": "may", "ArgType": null, "before": " "}, {"index": 11, "word": "line", "lemma": "line", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 51, "segment_span": [0, 12], "tense": "B", "characterOffsetBegin": 47, "originalText": "line", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 12, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 54, "segment_span": [0, 12], "characterOffsetBegin": 52, "originalText": "up", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 56, "characterOffsetBegin": 55, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the worst case , none of the violations may line up ."}, {"tokens": [{"index": 1, "word": "Suppose", "lemma": "suppose", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Suppose", "ArgType": null, "before": ""}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [1, 15], "characterOffsetBegin": 8, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [1, 15], "characterOffsetBegin": 13, "originalText": "for", "ArgType": null, "before": " "}, {"index": 4, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [1, 15], "characterOffsetBegin": 17, "originalText": "some", "ArgType": null, "before": " "}, {"index": 5, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [1, 15], "characterOffsetBegin": 22, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 34, "segment_span": [1, 15], "characterOffsetBegin": 33, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 38, "segment_span": [1, 15], "characterOffsetBegin": 35, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [1, 15], "characterOffsetBegin": 39, "originalText": "input", "ArgType": null, "before": " "}, {"index": 9, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 47, "segment_span": [1, 15], "characterOffsetBegin": 45, "originalText": "``", "ArgType": null, "before": " "}, {"index": 10, "word": "bebop", "lemma": "bebop", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [1, 15], "characterOffsetBegin": 48, "originalText": "bebop", "ArgType": null, "before": " "}, {"index": 11, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 56, "segment_span": [1, 15], "characterOffsetBegin": 54, "originalText": "''", "ArgType": null, "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 59, "segment_span": [1, 15], "characterOffsetBegin": 57, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 66, "segment_span": [1, 15], "tense": "N", "characterOffsetBegin": 60, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 14, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 69, "segment_span": [1, 15], "characterOffsetBegin": 67, "originalText": "up", "ArgType": null, "before": " "}, {"index": 15, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [1, 15], "characterOffsetBegin": 70, "originalText": "as", "ArgType": null, "before": " "}, {"index": 16, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 74, "characterOffsetBegin": 73, "originalText": ":", "ArgType": null, "before": " "}], "text": "Suppose that for some constraint , the input `` bebop '' is marked up as :"}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 24], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 24], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 24], "characterOffsetBegin": 8, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 24], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 24], "characterOffsetBegin": 15, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 24], "characterOffsetBegin": 19, "originalText": "precision", "ArgType": "subj", "before": " "}, {"index": 7, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 34, "segment_span": [0, 24], "tense": "Z", "characterOffsetBegin": 29, "originalText": "needs", "ArgType": "verb", "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 37, "segment_span": [0, 24], "characterOffsetBegin": 35, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 40, "segment_span": [0, 24], "characterOffsetBegin": 38, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 44, "segment_span": [0, 24], "characterOffsetBegin": 41, "originalText": "two", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [0, 24], "characterOffsetBegin": 45, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 24], "characterOffsetBegin": 48, "originalText": "order", "ArgType": null, "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 24], "characterOffsetBegin": 54, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 61, "segment_span": [0, 24], "characterOffsetBegin": 58, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 69, "segment_span": [0, 24], "characterOffsetBegin": 62, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 24], "characterOffsetBegin": 70, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "c1", "lemma": "c1", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [0, 24], "characterOffsetBegin": 73, "originalText": "c1", "ArgType": null, "before": " "}, {"index": 18, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 78, "segment_span": [0, 24], "characterOffsetBegin": 76, "originalText": "to", "ArgType": null, "before": " "}, {"index": 19, "word": "line", "lemma": "line", "after": " ", "pos": "VB", "characterOffsetEnd": 83, "segment_span": [0, 24], "characterOffsetBegin": 79, "originalText": "line", "ArgType": null, "before": " "}, {"index": 20, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 86, "segment_span": [0, 24], "characterOffsetBegin": 84, "originalText": "up", "ArgType": null, "before": " "}, {"index": 21, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [0, 24], "characterOffsetBegin": 87, "originalText": "with", "ArgType": null, "before": " "}, {"index": 22, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [0, 24], "characterOffsetBegin": 92, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 24], "characterOffsetBegin": 100, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "c2", "lemma": "c2", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 24], "characterOffsetBegin": 103, "originalText": "c2", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 107, "characterOffsetBegin": 106, "originalText": ".", "ArgType": null, "before": " "}], "text": "In this case , the precision needs to be two in order for the markers in c1 to line up with markers in c2 ."}, {"tokens": [{"index": 1, "word": "Similarly", "lemma": "similarly", "after": " ", "pos": "RB", "characterOffsetEnd": 9, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Similarly", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 11, "segment_span": [0, 11], "characterOffsetBegin": 10, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 12, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 5, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 6, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 38, "segment_span": [0, 11], "characterOffsetBegin": 34, "originalText": "also", "ArgType": null, "before": " "}, {"index": 7, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 44, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 39, "originalText": "needs", "ArgType": "verb", "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 46, "segment_span": [0, 11], "characterOffsetBegin": 45, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 11], "characterOffsetBegin": 47, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 57, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 63, "segment_span": [0, 11], "characterOffsetBegin": 60, "originalText": "two", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [11, 21], "characterOffsetBegin": 64, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [11, 21], "characterOffsetBegin": 67, "originalText": "order", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 75, "segment_span": [11, 21], "characterOffsetBegin": 73, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "count", "lemma": "count", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 81, "segment_span": [11, 21], "tense": "B", "characterOffsetBegin": 76, "originalText": "count", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [11, 21], "characterOffsetBegin": 82, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 89, "segment_span": [11, 21], "characterOffsetBegin": 86, "originalText": "two", "ArgType": null, "before": " "}, {"index": 18, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 97, "segment_span": [11, 21], "characterOffsetBegin": 90, "originalText": "markers", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [11, 21], "characterOffsetBegin": 98, "originalText": "in", "ArgType": null, "before": " "}, {"index": 20, "word": "c1", "lemma": "c1", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [11, 21], "characterOffsetBegin": 101, "originalText": "c1", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 107, "segment_span": [11, 21], "characterOffsetBegin": 104, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "prefer", "lemma": "prefer", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 114, "segment_span": [21, 31], "tense": "P", "characterOffsetBegin": 108, "originalText": "prefer", "ArgType": null, "before": " "}, {"index": 23, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 119, "segment_span": [21, 31], "characterOffsetBegin": 115, "originalText": "this", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [21, 31], "characterOffsetBegin": 120, "originalText": "over", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 128, "segment_span": [21, 31], "characterOffsetBegin": 125, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "greater", "lemma": "greater", "after": " ", "pos": "JJR", "characterOffsetEnd": 136, "segment_span": [21, 31], "characterOffsetBegin": 129, "originalText": "greater", "ArgType": null, "before": " "}, {"index": 27, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [21, 31], "characterOffsetBegin": 137, "originalText": "than", "ArgType": null, "before": " "}, {"index": 28, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 145, "segment_span": [21, 31], "characterOffsetBegin": 142, "originalText": "two", "ArgType": null, "before": " "}, {"index": 29, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 153, "segment_span": [21, 31], "characterOffsetBegin": 146, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 30, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 156, "segment_span": [21, 31], "characterOffsetBegin": 154, "originalText": "in", "ArgType": null, "before": " "}, {"index": 31, "word": "c2", "lemma": "c2", "after": " ", "pos": "NN", "characterOffsetEnd": 159, "segment_span": [21, 31], "characterOffsetBegin": 157, "originalText": "c2", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 161, "characterOffsetBegin": 160, "originalText": ".", "ArgType": null, "before": " "}], "text": "Similarly , the counting approach also needs a precision of two in order to count the two markers in c1 and prefer this over the greater than two markers in c2 ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 11, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "general", "ArgType": null, "before": " "}, {"index": 3, "word": "pattern", "lemma": "pattern", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 4], "characterOffsetBegin": 12, "originalText": "pattern", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 20, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [4, 21], "characterOffsetBegin": 23, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [4, 21], "characterOffsetBegin": 28, "originalText": "any", "ArgType": null, "before": " "}, {"index": 7, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [4, 21], "characterOffsetBegin": 32, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 47, "segment_span": [4, 21], "characterOffsetBegin": 43, "originalText": "that", "ArgType": null, "before": " "}, {"index": 9, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 51, "segment_span": [4, 21], "characterOffsetBegin": 48, "originalText": "can", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 54, "segment_span": [4, 21], "characterOffsetBegin": 52, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "treated", "is_pass": true, "lemma": "treat", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 62, "segment_span": [4, 21], "tense": "N", "characterOffsetBegin": 55, "originalText": "treated", "has_aux": true, "ArgType": null, "before": " "}, {"index": 12, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 70, "segment_span": [4, 21], "characterOffsetBegin": 63, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 13, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [4, 21], "characterOffsetBegin": 71, "originalText": "with", "ArgType": null, "before": " "}, {"index": 14, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 84, "segment_span": [4, 21], "tense": "G", "characterOffsetBegin": 76, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 15, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [4, 21], "characterOffsetBegin": 85, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "N", "lemma": "n", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [4, 21], "characterOffsetBegin": 95, "originalText": "N", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [4, 21], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": " "}, {"index": 18, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 102, "segment_span": [4, 21], "characterOffsetBegin": 99, "originalText": "can", "ArgType": null, "before": " "}, {"index": 19, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 107, "segment_span": [4, 21], "characterOffsetBegin": 103, "originalText": "also", "ArgType": null, "before": " "}, {"index": 20, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 110, "segment_span": [4, 21], "characterOffsetBegin": 108, "originalText": "be", "ArgType": null, "before": " "}, {"index": 21, "word": "handled", "is_pass": true, "lemma": "handle", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 118, "segment_span": [4, 21], "tense": "N", "characterOffsetBegin": 111, "originalText": "handled", "has_aux": true, "ArgType": null, "before": " "}, {"index": 22, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [21, 31], "characterOffsetBegin": 119, "originalText": "by", "ArgType": null, "before": " "}, {"index": 23, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 130, "segment_span": [21, 31], "tense": "G", "characterOffsetBegin": 122, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 24, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [21, 31], "characterOffsetBegin": 131, "originalText": "with", "ArgType": null, "before": " "}, {"index": 25, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [21, 31], "characterOffsetBegin": 136, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 26, "word": "less", "lemma": "less", "after": " ", "pos": "RBR", "characterOffsetEnd": 150, "segment_span": [21, 31], "characterOffsetBegin": 146, "originalText": "less", "ArgType": null, "before": " "}, {"index": 27, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 155, "segment_span": [21, 31], "characterOffsetBegin": 151, "originalText": "than", "ArgType": null, "before": " "}, {"index": 28, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 158, "segment_span": [21, 31], "characterOffsetBegin": 156, "originalText": "or", "ArgType": null, "before": " "}, {"index": 29, "word": "equal", "lemma": "equal", "after": " ", "pos": "JJ", "characterOffsetEnd": 164, "segment_span": [21, 31], "characterOffsetBegin": 159, "originalText": "equal", "ArgType": null, "before": " "}, {"index": 30, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 167, "segment_span": [21, 31], "characterOffsetBegin": 165, "originalText": "to", "ArgType": null, "before": " "}, {"index": 31, "word": "N", "lemma": "n", "after": " ", "pos": "NN", "characterOffsetEnd": 169, "segment_span": [21, 31], "characterOffsetBegin": 168, "originalText": "N", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 171, "characterOffsetBegin": 170, "originalText": ".", "ArgType": null, "before": " "}], "text": "The general pattern is that any constraint that can be treated exactly with counting precision N , can also be handled by matching with precision less than or equal to N ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 28], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 28], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 28], "characterOffsetBegin": 7, "originalText": "other", "ArgType": null, "before": " "}, {"index": 4, "word": "direction", "lemma": "direction", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 28], "characterOffsetBegin": 13, "originalText": "direction", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 24, "segment_span": [0, 28], "characterOffsetBegin": 23, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 32, "segment_span": [0, 28], "characterOffsetBegin": 25, "originalText": "however", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 34, "segment_span": [0, 28], "characterOffsetBegin": 33, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 40, "segment_span": [0, 28], "characterOffsetBegin": 35, "originalText": "there", "ArgType": null, "before": " "}, {"index": 9, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 44, "segment_span": [0, 28], "tense": "P", "characterOffsetBegin": 41, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 10, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 56, "segment_span": [0, 28], "characterOffsetBegin": 45, "originalText": "constraints", "ArgType": "subj", "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 58, "segment_span": [0, 28], "characterOffsetBegin": 57, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [0, 28], "characterOffsetBegin": 59, "originalText": "such", "ArgType": null, "before": " "}, {"index": 13, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 28], "characterOffsetBegin": 64, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 72, "segment_span": [0, 28], "characterOffsetBegin": 67, "originalText": "those", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [0, 28], "characterOffsetBegin": 73, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": "  ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [0, 28], "characterOffsetBegin": 76, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 87, "segment_span": [0, 28], "characterOffsetBegin": 81, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 89, "segment_span": [0, 28], "characterOffsetBegin": 88, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 93, "segment_span": [0, 28], "characterOffsetBegin": 89, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 94, "segment_span": [0, 28], "characterOffsetBegin": 93, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 99, "segment_span": [0, 28], "characterOffsetBegin": 96, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 22, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 110, "segment_span": [0, 28], "characterOffsetBegin": 101, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 112, "segment_span": [0, 28], "characterOffsetBegin": 111, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 116, "segment_span": [0, 28], "characterOffsetBegin": 112, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 117, "segment_span": [0, 28], "characterOffsetBegin": 116, "originalText": ")", "ArgType": null, "before": ""}, {"index": 26, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [0, 28], "characterOffsetBegin": 119, "originalText": "syllabification", "ArgType": null, "before": "  "}, {"index": 27, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 142, "segment_span": [0, 28], "characterOffsetBegin": 135, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 144, "segment_span": [0, 28], "characterOffsetBegin": 143, "originalText": ",", "ArgType": null, "before": " "}, {"index": 29, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 149, "segment_span": [28, 38], "characterOffsetBegin": 145, "originalText": "that", "ArgType": null, "before": " "}, {"index": 30, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 153, "segment_span": [28, 38], "characterOffsetBegin": 150, "originalText": "can", "ArgType": null, "before": " "}, {"index": 31, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 158, "segment_span": [28, 38], "characterOffsetBegin": 154, "originalText": "only", "ArgType": null, "before": " "}, {"index": 32, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 161, "segment_span": [28, 38], "characterOffsetBegin": 159, "originalText": "be", "ArgType": null, "before": " "}, {"index": 33, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 169, "segment_span": [28, 38], "characterOffsetBegin": 162, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 34, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 181, "segment_span": [28, 38], "tense": "N", "characterOffsetBegin": 170, "originalText": "implemented", "has_aux": true, "ArgType": null, "before": " "}, {"index": 35, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 184, "segment_span": [28, 38], "characterOffsetBegin": 182, "originalText": "by", "ArgType": null, "before": " "}, {"index": 36, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 188, "segment_span": [28, 38], "characterOffsetBegin": 185, "originalText": "the", "ArgType": null, "before": " "}, {"index": 37, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 197, "segment_span": [28, 38], "characterOffsetBegin": 189, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 38, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [28, 38], "characterOffsetBegin": 198, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 39, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 208, "characterOffsetBegin": 207, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the other direction , however , there are constraints , such as those in the Prince ( 0000 ) and Smolensky ( 0000 ) syllabification problem , that can only be exactly implemented by the matching approach ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 29], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 8, "segment_span": [0, 29], "characterOffsetBegin": 4, "originalText": "each", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 11, "segment_span": [0, 29], "characterOffsetBegin": 9, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 29], "characterOffsetBegin": 12, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 29], "characterOffsetBegin": 16, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 6, "word": "orderings", "lemma": "ordering", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 29], "characterOffsetBegin": 27, "originalText": "orderings", "ArgType": null, "before": " "}, {"index": 7, "word": "discussed", "lemma": "discuss", "after": " ", "pos": "VBN", "characterOffsetEnd": 46, "segment_span": [0, 29], "characterOffsetBegin": 37, "originalText": "discussed", "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [0, 29], "characterOffsetBegin": 47, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 57, "segment_span": [0, 29], "characterOffsetBegin": 51, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 59, "segment_span": [0, 29], "characterOffsetBegin": 58, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 63, "segment_span": [0, 29], "characterOffsetBegin": 59, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 64, "segment_span": [0, 29], "characterOffsetBegin": 63, "originalText": ")", "ArgType": null, "before": ""}, {"index": 13, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 69, "segment_span": [0, 29], "characterOffsetBegin": 66, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 14, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 80, "segment_span": [0, 29], "characterOffsetBegin": 71, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 82, "segment_span": [0, 29], "characterOffsetBegin": 81, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 86, "segment_span": [0, 29], "characterOffsetBegin": 82, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 87, "segment_span": [0, 29], "characterOffsetBegin": 86, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 90, "segment_span": [0, 29], "characterOffsetBegin": 89, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 19, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 93, "segment_span": [0, 29], "characterOffsetBegin": 91, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 20, "word": "turns", "lemma": "turn", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 99, "segment_span": [0, 29], "tense": "Z", "characterOffsetBegin": 94, "originalText": "turns", "ArgType": "verb", "before": " "}, {"index": 21, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 103, "segment_span": [0, 29], "characterOffsetBegin": 100, "originalText": "out", "ArgType": null, "before": " "}, {"index": 22, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [0, 29], "characterOffsetBegin": 104, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 111, "segment_span": [0, 29], "characterOffsetBegin": 109, "originalText": "at", "ArgType": null, "before": " "}, {"index": 24, "word": "most", "lemma": "most", "after": " ", "pos": "JJS", "characterOffsetEnd": 116, "segment_span": [0, 29], "characterOffsetBegin": 112, "originalText": "most", "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [0, 29], "characterOffsetBegin": 117, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 125, "segment_span": [0, 29], "characterOffsetBegin": 119, "originalText": "single", "ArgType": null, "before": " "}, {"index": 27, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [0, 29], "characterOffsetBegin": 126, "originalText": "step", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 133, "segment_span": [0, 29], "characterOffsetBegin": 131, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [0, 29], "characterOffsetBegin": 134, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 30, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 147, "segment_span": [29, 42], "characterOffsetBegin": 146, "originalText": "(", "ArgType": null, "before": " "}, {"index": 31, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 152, "segment_span": [29, 42], "characterOffsetBegin": 148, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 32, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 154, "segment_span": [29, 42], "characterOffsetBegin": 153, "originalText": "a", "ArgType": null, "before": " "}, {"index": 33, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [29, 42], "characterOffsetBegin": 155, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 34, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 167, "segment_span": [29, 42], "characterOffsetBegin": 165, "originalText": "of", "ArgType": null, "before": " "}, {"index": 35, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 169, "segment_span": [29, 42], "characterOffsetBegin": 168, "originalText": "1", "ArgType": null, "before": " "}, {"index": 36, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 171, "segment_span": [29, 42], "characterOffsetBegin": 170, "originalText": ")", "ArgType": null, "before": " "}, {"index": 37, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 174, "segment_span": [29, 42], "characterOffsetBegin": 172, "originalText": "is", "ArgType": null, "before": " "}, {"index": 38, "word": "required", "is_pass": true, "lemma": "require", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 183, "segment_span": [29, 42], "tense": "N", "characterOffsetBegin": 175, "originalText": "required", "ArgType": null, "before": " "}, {"index": 39, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 187, "segment_span": [29, 42], "characterOffsetBegin": 184, "originalText": "for", "ArgType": null, "before": " "}, {"index": 40, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 190, "segment_span": [29, 42], "characterOffsetBegin": 188, "originalText": "an", "ArgType": null, "before": " "}, {"index": 41, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 196, "segment_span": [29, 42], "characterOffsetBegin": 191, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 42, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 211, "segment_span": [29, 42], "characterOffsetBegin": 197, "originalText": "implementation", "ArgType": null, "before": " "}, {"index": 43, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 213, "characterOffsetBegin": 212, "originalText": ".", "ArgType": null, "before": " "}], "text": "For each of the constraint orderings discussed by Prince ( 0000 ) and Smolensky ( 0000 ) , it turns out that at most a single step of permutation ( i.e. a precision of 1 ) is required for an exact implementation ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "conclude", "lemma": "conclude", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 2], "tense": "P", "characterOffsetBegin": 3, "originalText": "conclude", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [2, 10], "characterOffsetBegin": 12, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [2, 10], "characterOffsetBegin": 17, "originalText": "this", "ArgType": null, "before": " "}, {"index": 5, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [2, 10], "characterOffsetBegin": 22, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 6, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [2, 10], "characterOffsetBegin": 25, "originalText": "analysis", "ArgType": "subj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [2, 10], "characterOffsetBegin": 34, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [2, 10], "characterOffsetBegin": 37, "originalText": "syllabification", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 55, "segment_span": [2, 10], "characterOffsetBegin": 53, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [2, 10], "characterOffsetBegin": 56, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 65, "characterOffsetBegin": 64, "originalText": ".", "ArgType": null, "before": " "}], "text": "We conclude that this OT analysis of syllabification is regular ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "improves", "lemma": "improve", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 5, "originalText": "improves", "ArgType": "verb", "before": " "}, {"index": 3, "word": "upon", "lemma": "upon", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "upon", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 10], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 10], "characterOffsetBegin": 23, "originalText": "result", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 10], "characterOffsetBegin": 30, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 35, "segment_span": [0, 10], "characterOffsetBegin": 34, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 8, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 45, "segment_span": [0, 10], "characterOffsetBegin": 36, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 9, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 50, "segment_span": [0, 10], "characterOffsetBegin": 46, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 52, "segment_span": [0, 10], "characterOffsetBegin": 51, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 55, "characterOffsetBegin": 54, "originalText": ".", "ArgType": null, "before": "  "}], "text": "This improves upon the result of ( Karttunen 1998 ) ."}, {"tokens": [{"index": 1, "word": "Moreover", "lemma": "moreover", "after": " ", "pos": "RB", "characterOffsetEnd": 8, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "Moreover", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 10, "segment_span": [0, 10], "characterOffsetBegin": 9, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [0, 10], "characterOffsetBegin": 11, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 15, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 5, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "transducers", "ArgType": "subj", "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 37, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "typically", "lemma": "typically", "after": " ", "pos": "RB", "characterOffsetEnd": 50, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "typically", "ArgType": null, "before": " "}, {"index": 8, "word": "much", "lemma": "much", "after": " ", "pos": "RB", "characterOffsetEnd": 55, "segment_span": [0, 10], "characterOffsetBegin": 51, "originalText": "much", "ArgType": null, "before": " "}, {"index": 9, "word": "smaller", "lemma": "smaller", "after": " ", "pos": "JJR", "characterOffsetEnd": 63, "segment_span": [0, 10], "characterOffsetBegin": 56, "originalText": "smaller", "ArgType": "verb", "before": " "}, {"index": 10, "word": "too", "lemma": "too", "after": " ", "pos": "RB", "characterOffsetEnd": 67, "segment_span": [0, 10], "characterOffsetBegin": 64, "originalText": "too", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 69, "characterOffsetBegin": 68, "originalText": ".", "ArgType": null, "before": " "}], "text": "Moreover , the resulting transducers are typically much smaller too ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 3, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 15, "segment_span": [0, 4], "characterOffsetBegin": 14, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 4, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 4], "characterOffsetBegin": 17, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 25, "segment_span": [4, 10], "characterOffsetBegin": 23, "originalText": "we", "ArgType": "subj", "before": "  "}, {"index": 6, "word": "present", "lemma": "present", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 33, "segment_span": [4, 10], "tense": "P", "characterOffsetBegin": 26, "originalText": "present", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [4, 10], "characterOffsetBegin": 34, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [4, 10], "characterOffsetBegin": 36, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [4, 10], "characterOffsetBegin": 43, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [4, 10], "characterOffsetBegin": 46, "originalText": "experiments", "ArgType": null, "before": " "}, {"index": 11, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 63, "segment_span": [10, 16], "characterOffsetBegin": 58, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 12, "word": "provide", "lemma": "provide", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 71, "segment_span": [10, 16], "tense": "P", "characterOffsetBegin": 64, "originalText": "provide", "ArgType": null, "before": " "}, {"index": 13, "word": "evidence", "lemma": "evidence", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [10, 16], "characterOffsetBegin": 72, "originalText": "evidence", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [10, 16], "characterOffsetBegin": 81, "originalText": "for", "ArgType": null, "before": " "}, {"index": 15, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [10, 16], "characterOffsetBegin": 85, "originalText": "this", "ArgType": null, "before": " "}, {"index": 16, "word": "observation", "lemma": "observation", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [10, 16], "characterOffsetBegin": 90, "originalText": "observation", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 103, "characterOffsetBegin": 102, "originalText": ".", "ArgType": null, "before": " "}], "text": "In equation ; CREF we present a number of experiments which provide evidence for this observation ."}]}, {"title": "Discussion", "num": 3, "sentences": [{"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "It", "ArgType": null, "before": ""}, {"index": 2, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 8, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "might", "ArgType": null, "before": " "}, {"index": 3, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 11, "segment_span": [0, 4], "characterOffsetBegin": 9, "originalText": "be", "ArgType": null, "before": " "}, {"index": 4, "word": "objected", "is_pass": true, "lemma": "object", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 12, "originalText": "objected", "has_aux": true, "ArgType": null, "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [4, 47], "characterOffsetBegin": 21, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": "  ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [4, 47], "characterOffsetBegin": 26, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 37, "segment_span": [4, 47], "characterOffsetBegin": 31, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 39, "segment_span": [4, 47], "characterOffsetBegin": 38, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 43, "segment_span": [4, 47], "characterOffsetBegin": 39, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 44, "segment_span": [4, 47], "characterOffsetBegin": 43, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 49, "segment_span": [4, 47], "characterOffsetBegin": 46, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 12, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 60, "segment_span": [4, 47], "characterOffsetBegin": 51, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 62, "segment_span": [4, 47], "characterOffsetBegin": 61, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 66, "segment_span": [4, 47], "characterOffsetBegin": 62, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 67, "segment_span": [4, 47], "characterOffsetBegin": 66, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "syllable", "lemma": "syllable", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [4, 47], "characterOffsetBegin": 69, "originalText": "syllable", "ArgType": null, "before": "  "}, {"index": 17, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [4, 47], "characterOffsetBegin": 78, "originalText": "structure", "ArgType": null, "before": " "}, {"index": 18, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [4, 47], "characterOffsetBegin": 88, "originalText": "example", "ArgType": "subj", "before": " "}, {"index": 19, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 98, "segment_span": [4, 47], "characterOffsetBegin": 96, "originalText": "is", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [4, 47], "characterOffsetBegin": 99, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "particularly", "lemma": "particularly", "after": " ", "pos": "RB", "characterOffsetEnd": 113, "segment_span": [4, 47], "characterOffsetBegin": 101, "originalText": "particularly", "ArgType": null, "before": " "}, {"index": 22, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 120, "segment_span": [4, 47], "characterOffsetBegin": 114, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 23, "word": "containment", "lemma": "containment", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [4, 47], "characterOffsetBegin": 121, "originalText": "containment", "ArgType": null, "before": " "}, {"index": 24, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [4, 47], "characterOffsetBegin": 133, "originalText": "theory", "ArgType": null, "before": " "}, {"index": 25, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 148, "segment_span": [4, 47], "characterOffsetBegin": 140, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 152, "segment_span": [4, 47], "characterOffsetBegin": 149, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 157, "segment_span": [4, 47], "characterOffsetBegin": 153, "originalText": "that", "ArgType": null, "before": " "}, {"index": 28, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 163, "segment_span": [4, 47], "characterOffsetBegin": 158, "originalText": "other", "ArgType": null, "before": " "}, {"index": 29, "word": "varieties", "lemma": "variety", "after": " ", "pos": "NNS", "characterOffsetEnd": 173, "segment_span": [4, 47], "characterOffsetBegin": 164, "originalText": "varieties", "ArgType": "subj", "before": " "}, {"index": 30, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 176, "segment_span": [4, 47], "characterOffsetBegin": 174, "originalText": "of", "ArgType": null, "before": " "}, {"index": 31, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 179, "segment_span": [4, 47], "characterOffsetBegin": 177, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 32, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 184, "segment_span": [4, 47], "characterOffsetBegin": 180, "originalText": "such", "ArgType": null, "before": " "}, {"index": 33, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 187, "segment_span": [4, 47], "characterOffsetBegin": 185, "originalText": "as", "ArgType": null, "before": " "}, {"index": 34, "word": "correspondence", "lemma": "correspondence", "after": " ", "pos": "NN", "characterOffsetEnd": 202, "segment_span": [4, 47], "characterOffsetBegin": 188, "originalText": "correspondence", "ArgType": null, "before": " "}, {"index": 35, "word": "theory", "lemma": "theory", "after": "  ", "pos": "NN", "characterOffsetEnd": 209, "segment_span": [4, 47], "characterOffsetBegin": 203, "originalText": "theory", "ArgType": null, "before": " "}, {"index": 36, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 212, "segment_span": [4, 47], "characterOffsetBegin": 211, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 37, "word": "McCarthy", "lemma": "McCarthy", "after": " ", "pos": "NNP", "characterOffsetEnd": 221, "segment_span": [4, 47], "characterOffsetBegin": 213, "originalText": "McCarthy", "ArgType": null, "before": " "}, {"index": 38, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 225, "segment_span": [4, 47], "characterOffsetBegin": 222, "originalText": "and", "ArgType": null, "before": " "}, {"index": 39, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 232, "segment_span": [4, 47], "characterOffsetBegin": 226, "originalText": "Prince", "ArgType": null, "before": " "}, {"index": 40, "word": "1995", "lemma": "1995", "after": " ", "pos": "CD", "characterOffsetEnd": 237, "segment_span": [4, 47], "characterOffsetBegin": 233, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 239, "segment_span": [4, 47], "characterOffsetBegin": 238, "originalText": ")", "ArgType": null, "before": " "}, {"index": 42, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 244, "segment_span": [4, 47], "characterOffsetBegin": 241, "originalText": "are", "ArgType": null, "before": "  "}, {"index": 43, "word": "beyond", "lemma": "beyond", "after": " ", "pos": "IN", "characterOffsetEnd": 251, "segment_span": [4, 47], "characterOffsetBegin": 245, "originalText": "beyond", "ArgType": null, "before": " "}, {"index": 44, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 255, "segment_span": [4, 47], "characterOffsetBegin": 252, "originalText": "the", "ArgType": null, "before": " "}, {"index": 45, "word": "scope", "lemma": "scope", "after": " ", "pos": "NN", "characterOffsetEnd": 261, "segment_span": [4, 47], "characterOffsetBegin": 256, "originalText": "scope", "ArgType": null, "before": " "}, {"index": 46, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 264, "segment_span": [4, 47], "characterOffsetBegin": 262, "originalText": "of", "ArgType": null, "before": " "}, {"index": 47, "word": "matching", "lemma": "matching", "after": " ", "pos": "NN", "characterOffsetEnd": 273, "segment_span": [4, 47], "characterOffsetBegin": 265, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 48, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 275, "characterOffsetBegin": 274, "originalText": ".", "ArgType": null, "before": " "}], "text": "It might be objected that the Prince ( 0000 ) and Smolensky ( 0000 ) syllable structure example is a particularly simple containment theory analysis and that other varieties of OT such as correspondence theory ( McCarthy and Prince 1995 ) are beyond the scope of matching ."}, {"tokens": [{"index": 1, "word": "Indeed", "lemma": "indeed", "after": " ", "pos": "RB", "characterOffsetEnd": 6, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "Indeed", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 9, "segment_span": [0, 7], "characterOffsetBegin": 7, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 14, "segment_span": [0, 7], "characterOffsetBegin": 10, "originalText": "have", "ArgType": null, "before": " "}, {"index": 4, "word": "relied", "lemma": "rely", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 21, "segment_span": [0, 7], "tense": "N", "characterOffsetBegin": 15, "originalText": "relied", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 7], "characterOffsetBegin": 22, "originalText": "on", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 7], "characterOffsetBegin": 25, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "fact", "lemma": "fact", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 7], "characterOffsetBegin": 29, "originalText": "fact", "ArgType": null, "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [7, 13], "characterOffsetBegin": 34, "originalText": "that", "ArgType": null, "before": " "}, {"index": 9, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [7, 13], "characterOffsetBegin": 39, "originalText": "Gen", "ArgType": "subj", "before": " "}, {"index": 10, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 47, "segment_span": [7, 13], "characterOffsetBegin": 43, "originalText": "only", "ArgType": null, "before": " "}, {"index": 11, "word": "adds", "lemma": "add", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 52, "segment_span": [7, 13], "tense": "Z", "characterOffsetBegin": 48, "originalText": "adds", "ArgType": null, "before": " "}, {"index": 12, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 61, "segment_span": [7, 13], "characterOffsetBegin": 53, "originalText": "brackets", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 65, "segment_span": [7, 13], "characterOffsetBegin": 62, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 70, "segment_span": [13, 17], "characterOffsetBegin": 66, "originalText": "does", "ArgType": null, "before": " "}, {"index": 15, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 74, "segment_span": [13, 17], "characterOffsetBegin": 71, "originalText": "not", "ArgType": null, "before": " "}, {"index": 16, "word": "add", "lemma": "add", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 78, "segment_span": [13, 17], "tense": "B", "characterOffsetBegin": 75, "originalText": "add", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 81, "segment_span": [13, 17], "characterOffsetBegin": 79, "originalText": "or", "ArgType": null, "before": " "}, {"index": 18, "word": "delete", "lemma": "delete", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 88, "segment_span": [17, 25], "tense": "B", "characterOffsetBegin": 82, "originalText": "delete", "ArgType": null, "before": " "}, {"index": 19, "word": "anything", "lemma": "anything", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [17, 25], "characterOffsetBegin": 89, "originalText": "anything", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [17, 25], "characterOffsetBegin": 98, "originalText": "from", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 106, "segment_span": [17, 25], "characterOffsetBegin": 103, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [17, 25], "characterOffsetBegin": 107, "originalText": "set", "ArgType": null, "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [17, 25], "characterOffsetBegin": 111, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [17, 25], "characterOffsetBegin": 114, "originalText": "input", "ArgType": null, "before": " "}, {"index": 25, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 127, "segment_span": [17, 25], "characterOffsetBegin": 120, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": " "}], "text": "Indeed we have relied on the fact that Gen only adds brackets and does not add or delete anything from the set of input symbols ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 2], "characterOffsetBegin": 4, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [2, 6], "characterOffsetBegin": 11, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [2, 6], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "construct", "lemma": "construct", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 28, "segment_span": [2, 6], "tense": "P", "characterOffsetBegin": 19, "originalText": "construct", "ArgType": null, "before": " "}, {"index": 6, "word": "needs", "lemma": "need", "after": " ", "pos": "NNS", "characterOffsetEnd": 34, "segment_span": [2, 6], "characterOffsetBegin": 29, "originalText": "needs", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 37, "segment_span": [6, 17], "characterOffsetBegin": 35, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "compare", "lemma": "compare", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 45, "segment_span": [6, 17], "tense": "B", "characterOffsetBegin": 38, "originalText": "compare", "ArgType": null, "before": " "}, {"index": 9, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 56, "segment_span": [6, 17], "characterOffsetBegin": 46, "originalText": "candidates", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [6, 17], "characterOffsetBegin": 57, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [6, 17], "characterOffsetBegin": 62, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 12, "word": "candidates", "lemma": "candidate", "after": " ", "pos": "NNS", "characterOffsetEnd": 84, "segment_span": [6, 17], "characterOffsetBegin": 74, "originalText": "candidates", "ArgType": null, "before": " "}, {"index": 13, "word": "generated", "lemma": "generate", "after": " ", "pos": "VBN", "characterOffsetEnd": 94, "segment_span": [6, 17], "characterOffsetBegin": 85, "originalText": "generated", "ArgType": null, "before": " "}, {"index": 14, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 99, "segment_span": [6, 17], "characterOffsetBegin": 95, "originalText": "from", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 103, "segment_span": [6, 17], "characterOffsetBegin": 100, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 108, "segment_span": [6, 17], "characterOffsetBegin": 104, "originalText": "same", "ArgType": null, "before": " "}, {"index": 17, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [6, 17], "characterOffsetBegin": 109, "originalText": "input", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 116, "characterOffsetBegin": 115, "originalText": ".", "ArgType": null, "before": " "}], "text": "The filter that we construct needs to compare candidates with alternative candidates generated from the same input ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 6, "segment_span": [0, 8], "characterOffsetBegin": 3, "originalText": "Gen", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 9, "segment_span": [0, 8], "characterOffsetBegin": 7, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "allowed", "is_pass": true, "lemma": "allow", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 10, "originalText": "allowed", "ArgType": null, "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 20, "segment_span": [0, 8], "characterOffsetBegin": 18, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "change", "lemma": "change", "after": " ", "pos": "VB", "characterOffsetEnd": 27, "segment_span": [0, 8], "characterOffsetBegin": 21, "originalText": "change", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 8], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 8], "characterOffsetBegin": 32, "originalText": "input", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 42, "segment_span": [8, 19], "characterOffsetBegin": 38, "originalText": "then", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [8, 19], "characterOffsetBegin": 43, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [8, 19], "characterOffsetBegin": 45, "originalText": "way", "ArgType": null, "before": " "}, {"index": 12, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 53, "segment_span": [8, 19], "characterOffsetBegin": 49, "originalText": "must", "ArgType": null, "before": " "}, {"index": 13, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 56, "segment_span": [8, 19], "characterOffsetBegin": 54, "originalText": "be", "ArgType": null, "before": " "}, {"index": 14, "word": "found", "is_pass": true, "lemma": "find", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 62, "segment_span": [8, 19], "tense": "N", "characterOffsetBegin": 57, "originalText": "found", "has_aux": true, "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 65, "segment_span": [8, 19], "characterOffsetBegin": 63, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "remember", "lemma": "remember", "after": " ", "pos": "VB", "characterOffsetEnd": 74, "segment_span": [8, 19], "characterOffsetBegin": 66, "originalText": "remember", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [8, 19], "characterOffsetBegin": 75, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 87, "segment_span": [8, 19], "characterOffsetBegin": 79, "originalText": "original", "ArgType": null, "before": " "}, {"index": 19, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [8, 19], "characterOffsetBegin": 88, "originalText": "input", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 95, "characterOffsetBegin": 94, "originalText": ".", "ArgType": null, "before": " "}], "text": "If Gen is allowed to change the input then a way must be found to remember the original input ."}, {"tokens": [{"index": 1, "word": "Correspondence", "lemma": "correspondence", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 31], "characterOffsetBegin": 0, "originalText": "Correspondence", "ArgType": null, "before": ""}, {"index": 2, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 31], "characterOffsetBegin": 15, "originalText": "theory", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 24, "segment_span": [0, 31], "characterOffsetBegin": 22, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "beyond", "lemma": "beyond", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 31], "characterOffsetBegin": 25, "originalText": "beyond", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [0, 31], "characterOffsetBegin": 32, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "scope", "lemma": "scope", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 31], "characterOffsetBegin": 36, "originalText": "scope", "ArgType": "verb", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [0, 31], "characterOffsetBegin": 42, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [0, 31], "characterOffsetBegin": 45, "originalText": "this", "ArgType": null, "before": " "}, {"index": 9, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 31], "characterOffsetBegin": 50, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 57, "segment_span": [0, 31], "characterOffsetBegin": 56, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 65, "segment_span": [0, 31], "characterOffsetBegin": 58, "originalText": "however", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 67, "segment_span": [0, 31], "characterOffsetBegin": 66, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 74, "segment_span": [0, 31], "characterOffsetBegin": 68, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 14, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 31], "characterOffsetBegin": 75, "originalText": "example", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [0, 31], "characterOffsetBegin": 83, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [0, 31], "characterOffsetBegin": 86, "originalText": "an", "ArgType": null, "before": " "}, {"index": 17, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 31], "characterOffsetBegin": 89, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 18, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 97, "segment_span": [17, 22], "characterOffsetBegin": 92, "originalText": "where", "ArgType": null, "before": " "}, {"index": 19, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [17, 22], "characterOffsetBegin": 98, "originalText": "Gen", "ArgType": "subj", "before": " "}, {"index": 20, "word": "modifies", "lemma": "modify", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 110, "segment_span": [17, 22], "tense": "Z", "characterOffsetBegin": 102, "originalText": "modifies", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 114, "segment_span": [17, 22], "characterOffsetBegin": 111, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [17, 22], "characterOffsetBegin": 115, "originalText": "input", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 123, "segment_span": [0, 31], "characterOffsetBegin": 121, "originalText": "is", "ArgType": null, "before": " "}, {"index": 24, "word": "provided", "lemma": "provide", "after": " ", "pos": "VBN", "characterOffsetEnd": 132, "segment_span": [0, 31], "characterOffsetBegin": 124, "originalText": "provided", "ArgType": null, "before": " "}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [0, 31], "characterOffsetBegin": 133, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 139, "segment_span": [0, 31], "characterOffsetBegin": 136, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 147, "segment_span": [0, 31], "characterOffsetBegin": 140, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 28, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 157, "segment_span": [0, 31], "characterOffsetBegin": 148, "originalText": "described", "ArgType": null, "before": " "}, {"index": 29, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 160, "segment_span": [0, 31], "characterOffsetBegin": 158, "originalText": "in", "ArgType": null, "before": " "}, {"index": 30, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 170, "segment_span": [0, 31], "characterOffsetBegin": 162, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 31, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 173, "segment_span": [0, 31], "characterOffsetBegin": 172, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 32, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 179, "segment_span": [31, 41], "characterOffsetBegin": 175, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 33, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 182, "segment_span": [31, 41], "characterOffsetBegin": 181, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 34, "word": "from", "lemma": "from", "after": "  ", "pos": "IN", "characterOffsetEnd": 187, "segment_span": [31, 41], "characterOffsetBegin": 183, "originalText": "from", "ArgType": null, "before": " "}, {"index": 35, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 190, "segment_span": [31, 41], "characterOffsetBegin": 189, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 36, "word": "Frank", "lemma": "Frank", "after": " ", "pos": "NNP", "characterOffsetEnd": 196, "segment_span": [31, 41], "characterOffsetBegin": 191, "originalText": "Frank", "ArgType": null, "before": " "}, {"index": 37, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 200, "segment_span": [31, 41], "characterOffsetBegin": 197, "originalText": "and", "ArgType": null, "before": " "}, {"index": 38, "word": "Satta", "lemma": "Satta", "after": " ", "pos": "NNP", "characterOffsetEnd": 206, "segment_span": [31, 41], "characterOffsetBegin": 201, "originalText": "Satta", "ArgType": null, "before": " "}, {"index": 39, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 211, "segment_span": [31, 41], "characterOffsetBegin": 207, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 40, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 213, "segment_span": [31, 41], "characterOffsetBegin": 212, "originalText": ")", "ArgType": null, "before": " "}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 216, "segment_span": [31, 41], "characterOffsetBegin": 215, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 42, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 218, "characterOffsetBegin": 217, "originalText": ".", "ArgType": null, "before": " "}], "text": "Correspondence theory is beyond the scope of this paper , however a simple example of an OT where Gen modifies the input is provided by the problem described in equation ; CREF ( from ( Frank and Satta 1998 ) ) ."}, {"tokens": [{"index": 1, "word": "Suppose", "lemma": "suppose", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Suppose", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 10, "segment_span": [1, 5], "characterOffsetBegin": 8, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "modify", "lemma": "modify", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 17, "segment_span": [1, 5], "tense": "B", "characterOffsetBegin": 11, "originalText": "modify", "ArgType": null, "before": " "}, {"index": 4, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [1, 5], "characterOffsetBegin": 18, "originalText": "Gen", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 26, "segment_span": [1, 5], "characterOffsetBegin": 22, "originalText": "here", "ArgType": null, "before": " "}, {"index": 6, "word": "so", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [5, 16], "characterOffsetBegin": 27, "originalText": "so", "ArgType": null, "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [5, 16], "characterOffsetBegin": 30, "originalText": "that", "ArgType": null, "before": " "}, {"index": 8, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 38, "segment_span": [5, 16], "characterOffsetBegin": 35, "originalText": "its", "ArgType": null, "before": " "}, {"index": 9, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [5, 16], "characterOffsetBegin": 39, "originalText": "output", "ArgType": "subj", "before": " "}, {"index": 10, "word": "includes", "lemma": "include", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 54, "segment_span": [5, 16], "tense": "Z", "characterOffsetBegin": 46, "originalText": "includes", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 56, "segment_span": [5, 16], "characterOffsetBegin": 55, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "representation", "lemma": "representation", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [5, 16], "characterOffsetBegin": 57, "originalText": "representation", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 74, "segment_span": [5, 16], "characterOffsetBegin": 72, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [5, 16], "characterOffsetBegin": 75, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 87, "segment_span": [5, 16], "characterOffsetBegin": 79, "originalText": "original", "ArgType": null, "before": " "}, {"index": 16, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [5, 16], "characterOffsetBegin": 88, "originalText": "input", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 95, "characterOffsetBegin": 94, "originalText": ".", "ArgType": null, "before": " "}], "text": "Suppose we modify Gen here so that its output includes a representation of the original input ."}, {"tokens": [{"index": 1, "word": "One", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "One", "ArgType": null, "before": ""}, {"index": 2, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "way", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 10, "segment_span": [0, 4], "characterOffsetBegin": 8, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "do", "lemma": "do", "after": " ", "pos": "VB", "characterOffsetEnd": 13, "segment_span": [0, 4], "characterOffsetBegin": 11, "originalText": "do", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [4, 9], "characterOffsetBegin": 14, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 6, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 24, "segment_span": [4, 9], "characterOffsetBegin": 19, "originalText": "would", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 27, "segment_span": [4, 9], "characterOffsetBegin": 25, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 30, "segment_span": [4, 9], "characterOffsetBegin": 28, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "adopt", "lemma": "adopt", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 36, "segment_span": [4, 9], "tense": "B", "characterOffsetBegin": 31, "originalText": "adopt", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 40, "segment_span": [9, 29], "characterOffsetBegin": 37, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "convention", "lemma": "convention", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [9, 29], "characterOffsetBegin": 41, "originalText": "convention", "ArgType": null, "before": " "}, {"index": 12, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 56, "segment_span": [9, 29], "characterOffsetBegin": 52, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [9, 29], "characterOffsetBegin": 57, "originalText": "input", "ArgType": null, "before": " "}, {"index": 14, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 70, "segment_span": [9, 29], "characterOffsetBegin": 63, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 74, "segment_span": [9, 29], "characterOffsetBegin": 71, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 81, "segment_span": [9, 29], "tense": "N", "characterOffsetBegin": 75, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 17, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [9, 29], "characterOffsetBegin": 82, "originalText": "with", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [9, 29], "characterOffsetBegin": 87, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 98, "segment_span": [9, 29], "characterOffsetBegin": 89, "originalText": "following", "ArgType": null, "before": " "}, {"index": 20, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 100, "segment_span": [9, 29], "characterOffsetBegin": 99, "originalText": "0", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 104, "segment_span": [9, 29], "characterOffsetBegin": 101, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 111, "segment_span": [9, 29], "characterOffsetBegin": 105, "originalText": "output", "ArgType": null, "before": " "}, {"index": 23, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [9, 29], "characterOffsetBegin": 112, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 24, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 123, "segment_span": [9, 29], "characterOffsetBegin": 120, "originalText": "are", "ArgType": null, "before": " "}, {"index": 25, "word": "marked", "is_pass": true, "lemma": "mark", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 130, "segment_span": [9, 29], "tense": "N", "characterOffsetBegin": 124, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 26, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [9, 29], "characterOffsetBegin": 131, "originalText": "with", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 137, "segment_span": [9, 29], "characterOffsetBegin": 136, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 147, "segment_span": [9, 29], "characterOffsetBegin": 138, "originalText": "following", "ArgType": null, "before": " "}, {"index": 29, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 149, "segment_span": [9, 29], "characterOffsetBegin": 148, "originalText": "1", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 151, "characterOffsetBegin": 150, "originalText": ".", "ArgType": null, "before": " "}], "text": "One way to do this would be to adopt the convention that input symbols are marked with a following 0 and output symbols are marked with a following 1 ."}, {"tokens": [{"index": 1, "word": "With", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 4, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "With", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 5], "characterOffsetBegin": 5, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "convention", "lemma": "convention", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 5], "characterOffsetBegin": 10, "originalText": "convention", "ArgType": null, "before": " "}, {"index": 4, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 5], "characterOffsetBegin": 21, "originalText": "Gen", "ArgType": "subj", "before": " "}, {"index": 5, "word": "becomes", "lemma": "become", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 32, "segment_span": [0, 5], "tense": "Z", "characterOffsetBegin": 25, "originalText": "becomes", "ArgType": "verb", "before": " "}, {"index": 6, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 34, "characterOffsetBegin": 33, "originalText": ":", "ArgType": null, "before": " "}], "text": "With this convention Gen becomes :"}, {"tokens": [{"index": 1, "word": "Then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Then", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 8, "segment_span": [0, 20], "characterOffsetBegin": 5, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 20], "characterOffsetBegin": 9, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 4, "word": "against", "lemma": "against", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 20], "characterOffsetBegin": 20, "originalText": "against", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 20], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 20], "characterOffsetBegin": 32, "originalText": "symbol", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 40, "segment_span": [0, 20], "characterOffsetBegin": 39, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "needs", "lemma": "need", "after": " ", "pos": "NNS", "characterOffsetEnd": 46, "segment_span": [0, 20], "characterOffsetBegin": 41, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 49, "segment_span": [0, 20], "characterOffsetBegin": 47, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 52, "segment_span": [0, 20], "characterOffsetBegin": 50, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "recast", "lemma": "recast", "after": " ", "pos": "VBN", "characterOffsetEnd": 59, "segment_span": [0, 20], "characterOffsetBegin": 53, "originalText": "recast", "ArgType": null, "before": " "}, {"index": 12, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 20], "characterOffsetBegin": 60, "originalText": "as", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [0, 20], "characterOffsetBegin": 63, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [0, 20], "characterOffsetBegin": 65, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 15, "word": "against", "lemma": "against", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [0, 20], "characterOffsetBegin": 76, "originalText": "against", "ArgType": null, "before": " "}, {"index": 16, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 85, "segment_span": [0, 20], "characterOffsetBegin": 84, "originalText": "[", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 86, "segment_span": [0, 20], "characterOffsetBegin": 85, "originalText": "a", "ArgType": null, "before": ""}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 88, "segment_span": [0, 20], "characterOffsetBegin": 87, "originalText": ",", "ArgType": null, "before": " "}, {"index": 19, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 90, "segment_span": [0, 20], "characterOffsetBegin": 89, "originalText": "1", "ArgType": null, "before": " "}, {"index": 20, "word": "]", "lemma": "-rsb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 91, "segment_span": [0, 20], "characterOffsetBegin": 90, "originalText": "]", "ArgType": null, "before": ""}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 93, "characterOffsetBegin": 92, "originalText": ".", "ArgType": null, "before": " "}], "text": "Then the constraint against the symbol a needs to be recast as a constraint against [ a , 1 ] ."}, {"tokens": [{"index": 1, "word": "And", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3, "segment_span": [0, 28], "characterOffsetBegin": 0, "originalText": "And", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 5, "segment_span": [0, 28], "characterOffsetBegin": 4, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "whereas", "lemma": "whereas", "after": " ", "pos": "IN", "characterOffsetEnd": 13, "segment_span": [2, 11], "characterOffsetBegin": 6, "originalText": "whereas", "ArgType": null, "before": " "}, {"index": 4, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [2, 11], "characterOffsetBegin": 14, "originalText": "above", "ArgType": null, "before": " "}, {"index": 5, "word": "add_violation", "lemma": "add_violation", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [2, 11], "characterOffsetBegin": 20, "originalText": "add_violation", "ArgType": null, "before": " "}, {"index": 6, "word": "was", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 37, "segment_span": [2, 11], "characterOffsetBegin": 34, "originalText": "was", "ArgType": null, "before": " "}, {"index": 7, "word": "previously", "lemma": "previously", "after": " ", "pos": "RB", "characterOffsetEnd": 48, "segment_span": [2, 11], "characterOffsetBegin": 38, "originalText": "previously", "ArgType": null, "before": " "}, {"index": 8, "word": "written", "is_pass": true, "lemma": "write", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 56, "segment_span": [2, 11], "tense": "N", "characterOffsetBegin": 49, "originalText": "written", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 59, "segment_span": [2, 11], "characterOffsetBegin": 57, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "ignore", "lemma": "ignore", "after": " ", "pos": "VB", "characterOffsetEnd": 66, "segment_span": [2, 11], "characterOffsetBegin": 60, "originalText": "ignore", "ArgType": null, "before": " "}, {"index": 11, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 75, "segment_span": [2, 11], "characterOffsetBegin": 67, "originalText": "brackets", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 77, "segment_span": [0, 28], "characterOffsetBegin": 76, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [0, 28], "characterOffsetBegin": 78, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 86, "segment_span": [0, 28], "characterOffsetBegin": 82, "originalText": "this", "ArgType": null, "before": " "}, {"index": 15, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 28], "characterOffsetBegin": 87, "originalText": "case", "ArgType": null, "before": " "}, {"index": 16, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 94, "segment_span": [0, 28], "characterOffsetBegin": 92, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 17, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 99, "segment_span": [0, 28], "characterOffsetBegin": 95, "originalText": "will", "ArgType": null, "before": " "}, {"index": 18, "word": "need", "lemma": "need", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 104, "segment_span": [0, 28], "tense": "B", "characterOffsetBegin": 100, "originalText": "need", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 107, "segment_span": [0, 28], "characterOffsetBegin": 105, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "ignore", "lemma": "ignore", "after": " ", "pos": "VB", "characterOffsetEnd": 114, "segment_span": [0, 28], "characterOffsetBegin": 108, "originalText": "ignore", "ArgType": null, "before": " "}, {"index": 21, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 28], "characterOffsetBegin": 115, "originalText": "output", "ArgType": null, "before": " "}, {"index": 22, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 129, "segment_span": [0, 28], "characterOffsetBegin": 122, "originalText": "symbols", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 131, "segment_span": [0, 28], "characterOffsetBegin": 130, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "marked", "lemma": "mark", "after": " ", "pos": "VBN", "characterOffsetEnd": 138, "segment_span": [0, 28], "characterOffsetBegin": 132, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 25, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 143, "segment_span": [0, 28], "characterOffsetBegin": 139, "originalText": "with", "ArgType": null, "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 145, "segment_span": [0, 28], "characterOffsetBegin": 144, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 147, "segment_span": [0, 28], "characterOffsetBegin": 146, "originalText": "1", "ArgType": null, "before": " "}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 149, "segment_span": [0, 28], "characterOffsetBegin": 148, "originalText": ")", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 151, "characterOffsetBegin": 150, "originalText": ".", "ArgType": null, "before": " "}], "text": "And , whereas above add_violation was previously written to ignore brackets , for this case it will need to ignore output symbols ( marked with a 1 ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 12], "characterOffsetBegin": 5, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 16, "segment_span": [0, 12], "characterOffsetBegin": 14, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 23, "segment_span": [0, 12], "characterOffsetBegin": 17, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 5, "word": "implementable", "lemma": "implementable", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 24, "originalText": "implementable", "ArgType": "verb", "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 41, "segment_span": [0, 12], "characterOffsetBegin": 38, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 12], "characterOffsetBegin": 42, "originalText": "with", "ArgType": null, "before": " "}, {"index": 8, "word": "sufficient", "lemma": "sufficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 47, "originalText": "sufficient", "ArgType": null, "before": " "}, {"index": 9, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 12], "characterOffsetBegin": 58, "originalText": "use", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 12], "characterOffsetBegin": 62, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [0, 12], "characterOffsetBegin": 65, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 78, "segment_span": [0, 12], "characterOffsetBegin": 77, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [12, 24], "characterOffsetBegin": 79, "originalText": "an", "ArgType": null, "before": " "}, {"index": 14, "word": "approximation", "lemma": "approximation", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [12, 24], "characterOffsetBegin": 82, "originalText": "approximation", "ArgType": null, "before": " "}, {"index": 15, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 99, "segment_span": [12, 24], "characterOffsetBegin": 96, "originalText": "can", "ArgType": null, "before": " "}, {"index": 16, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 102, "segment_span": [12, 24], "characterOffsetBegin": 100, "originalText": "be", "ArgType": null, "before": " "}, {"index": 17, "word": "achieved", "is_pass": true, "lemma": "achieve", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 111, "segment_span": [12, 24], "tense": "N", "characterOffsetBegin": 103, "originalText": "achieved", "has_aux": true, "ArgType": null, "before": " "}, {"index": 18, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 115, "segment_span": [12, 24], "characterOffsetBegin": 112, "originalText": "for", "ArgType": null, "before": " "}, {"index": 19, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 119, "segment_span": [12, 24], "characterOffsetBegin": 116, "originalText": "any", "ArgType": null, "before": " "}, {"index": 20, "word": "predetermined", "lemma": "predetermined", "after": " ", "pos": "JJ", "characterOffsetEnd": 133, "segment_span": [12, 24], "characterOffsetBegin": 120, "originalText": "predetermined", "ArgType": null, "before": " "}, {"index": 21, "word": "bound", "lemma": "bind", "after": " ", "pos": "VBN", "characterOffsetEnd": 139, "segment_span": [12, 24], "characterOffsetBegin": 134, "originalText": "bound", "ArgType": null, "before": " "}, {"index": 22, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 142, "segment_span": [12, 24], "characterOffsetBegin": 140, "originalText": "on", "ArgType": null, "before": " "}, {"index": 23, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 148, "segment_span": [12, 24], "characterOffsetBegin": 143, "originalText": "input", "ArgType": null, "before": " "}, {"index": 24, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [12, 24], "characterOffsetBegin": 149, "originalText": "length", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 157, "characterOffsetBegin": 156, "originalText": ".", "ArgType": null, "before": " "}], "text": "This approach is easily implementable and with sufficient use of permutation , an approximation can be achieved for any predetermined bound on input length ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "discussing", "lemma": "discuss", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 7], "tense": "G", "characterOffsetBegin": 3, "originalText": "discussing", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 7], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "impact", "lemma": "impact", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 7], "characterOffsetBegin": 18, "originalText": "impact", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 7], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 33, "segment_span": [0, 7], "characterOffsetBegin": 28, "originalText": "their", "ArgType": null, "before": " "}, {"index": 7, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 7], "characterOffsetBegin": 34, "originalText": "result", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 42, "segment_span": [7, 15], "characterOffsetBegin": 41, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 45, "segment_span": [7, 15], "characterOffsetBegin": 44, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 10, "word": "Frank", "lemma": "Frank", "after": " ", "pos": "NNP", "characterOffsetEnd": 51, "segment_span": [7, 15], "characterOffsetBegin": 46, "originalText": "Frank", "ArgType": "subj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 55, "segment_span": [7, 15], "characterOffsetBegin": 52, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "Satta", "lemma": "Satta", "after": " ", "pos": "NNP", "characterOffsetEnd": 61, "segment_span": [7, 15], "characterOffsetBegin": 56, "originalText": "Satta", "ArgType": null, "before": " "}, {"index": 13, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 66, "segment_span": [7, 15], "characterOffsetBegin": 62, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [7, 15], "characterOffsetBegin": 67, "originalText": ")", "ArgType": null, "before": " "}, {"index": 15, "word": "suggest", "lemma": "suggest", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 77, "segment_span": [7, 15], "tense": "P", "characterOffsetBegin": 70, "originalText": "suggest", "ArgType": "verb", "before": "  "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [15, 26], "characterOffsetBegin": 78, "originalText": "that", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 86, "segment_span": [15, 26], "characterOffsetBegin": 83, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 89, "segment_span": [15, 26], "characterOffsetBegin": 87, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 19, "word": "formal", "lemma": "formal", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [15, 26], "characterOffsetBegin": 90, "originalText": "formal", "ArgType": null, "before": " "}, {"index": 20, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [15, 26], "characterOffsetBegin": 97, "originalText": "system", "ArgType": "subj", "before": " "}, {"index": 21, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 106, "segment_span": [15, 26], "characterOffsetBegin": 104, "originalText": "is", "ArgType": null, "before": " "}, {"index": 22, "word": "too", "lemma": "too", "after": " ", "pos": "RB", "characterOffsetEnd": 110, "segment_span": [15, 26], "characterOffsetBegin": 107, "originalText": "too", "ArgType": null, "before": " "}, {"index": 23, "word": "rich", "lemma": "rich", "after": " ", "pos": "JJ", "characterOffsetEnd": 115, "segment_span": [15, 26], "characterOffsetBegin": 111, "originalText": "rich", "ArgType": null, "before": " "}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [15, 26], "characterOffsetBegin": 116, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "generative", "lemma": "generative", "after": " ", "pos": "JJ", "characterOffsetEnd": 129, "segment_span": [15, 26], "characterOffsetBegin": 119, "originalText": "generative", "ArgType": null, "before": " "}, {"index": 26, "word": "capacity", "lemma": "capacity", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [15, 26], "characterOffsetBegin": 130, "originalText": "capacity", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 140, "characterOffsetBegin": 139, "originalText": ".", "ArgType": null, "before": " "}], "text": "In discussing the impact of their result , ( Frank and Satta 1998 ) suggest that the OT formal system is too rich in generative capacity ."}, {"tokens": [{"index": 1, "word": "They", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 4, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "They", "ArgType": "subj", "before": ""}, {"index": 2, "word": "suggest", "lemma": "suggest", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 2], "tense": "P", "characterOffsetBegin": 5, "originalText": "suggest", "ArgType": "verb", "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [2, 30], "characterOffsetBegin": 13, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "shift", "lemma": "shift", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [2, 30], "characterOffsetBegin": 15, "originalText": "shift", "ArgType": "subj", "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [2, 30], "characterOffsetBegin": 21, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [2, 30], "characterOffsetBegin": 24, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "type", "lemma": "type", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [2, 30], "characterOffsetBegin": 28, "originalText": "type", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 35, "segment_span": [2, 30], "characterOffsetBegin": 33, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "optimization", "lemma": "optimization", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [2, 30], "characterOffsetBegin": 36, "originalText": "optimization", "ArgType": null, "before": " "}, {"index": 10, "word": "carried", "lemma": "carry", "after": " ", "pos": "VBD", "is_root": true, "characterOffsetEnd": 56, "segment_span": [2, 30], "tense": "D", "characterOffsetBegin": 49, "originalText": "carried", "ArgType": null, "before": " "}, {"index": 11, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 60, "segment_span": [2, 30], "characterOffsetBegin": 57, "originalText": "out", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [2, 30], "characterOffsetBegin": 61, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 66, "segment_span": [2, 30], "characterOffsetBegin": 64, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 68, "segment_span": [2, 30], "characterOffsetBegin": 67, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [2, 30], "characterOffsetBegin": 69, "originalText": "from", "ArgType": null, "before": " "}, {"index": 16, "word": "global", "lemma": "global", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [2, 30], "characterOffsetBegin": 74, "originalText": "global", "ArgType": null, "before": " "}, {"index": 17, "word": "optimization", "lemma": "optimization", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [2, 30], "characterOffsetBegin": 81, "originalText": "optimization", "ArgType": null, "before": " "}, {"index": 18, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 98, "segment_span": [2, 30], "characterOffsetBegin": 94, "originalText": "over", "ArgType": null, "before": " "}, {"index": 19, "word": "arbitrarily", "lemma": "arbitrarily", "after": " ", "pos": "RB", "characterOffsetEnd": 110, "segment_span": [2, 30], "characterOffsetBegin": 99, "originalText": "arbitrarily", "ArgType": null, "before": " "}, {"index": 20, "word": "large", "lemma": "large", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [2, 30], "characterOffsetBegin": 111, "originalText": "large", "ArgType": null, "before": " "}, {"index": 21, "word": "representations", "lemma": "representation", "after": " ", "pos": "NNS", "characterOffsetEnd": 132, "segment_span": [2, 30], "characterOffsetBegin": 117, "originalText": "representations", "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 135, "segment_span": [2, 30], "characterOffsetBegin": 133, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "local", "lemma": "local", "after": " ", "pos": "JJ", "characterOffsetEnd": 141, "segment_span": [2, 30], "characterOffsetBegin": 136, "originalText": "local", "ArgType": null, "before": " "}, {"index": 24, "word": "optimization", "lemma": "optimization", "after": " ", "pos": "NN", "characterOffsetEnd": 154, "segment_span": [2, 30], "characterOffsetBegin": 142, "originalText": "optimization", "ArgType": null, "before": " "}, {"index": 25, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 159, "segment_span": [2, 30], "characterOffsetBegin": 155, "originalText": "over", "ArgType": null, "before": " "}, {"index": 26, "word": "structural", "lemma": "structural", "after": " ", "pos": "JJ", "characterOffsetEnd": 170, "segment_span": [2, 30], "characterOffsetBegin": 160, "originalText": "structural", "ArgType": null, "before": " "}, {"index": 27, "word": "domains", "lemma": "domain", "after": " ", "pos": "NNS", "characterOffsetEnd": 178, "segment_span": [2, 30], "characterOffsetBegin": 171, "originalText": "domains", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 181, "segment_span": [2, 30], "characterOffsetBegin": 179, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "bounded", "lemma": "bound", "after": " ", "pos": "VBN", "characterOffsetEnd": 189, "segment_span": [2, 30], "characterOffsetBegin": 182, "originalText": "bounded", "ArgType": null, "before": " "}, {"index": 30, "word": "complexity", "lemma": "complexity", "after": " ", "pos": "NN", "characterOffsetEnd": 200, "segment_span": [2, 30], "characterOffsetBegin": 190, "originalText": "complexity", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 202, "characterOffsetBegin": 201, "originalText": ".", "ArgType": null, "before": " "}], "text": "They suggest a shift in the type of optimization carried out in OT , from global optimization over arbitrarily large representations to local optimization over structural domains of bounded complexity ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 13], "characterOffsetBegin": 13, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 24, "segment_span": [0, 13], "characterOffsetBegin": 16, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 5, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 13], "characterOffsetBegin": 25, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 6, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 46, "segment_span": [0, 13], "characterOffsetBegin": 36, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "proposed", "lemma": "propose", "after": " ", "pos": "VBN", "characterOffsetEnd": 55, "segment_span": [0, 13], "characterOffsetBegin": 47, "originalText": "proposed", "ArgType": null, "before": " "}, {"index": 8, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 60, "segment_span": [0, 13], "characterOffsetBegin": 56, "originalText": "here", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 63, "segment_span": [0, 13], "characterOffsetBegin": 61, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "based", "is_pass": true, "lemma": "base", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 69, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 64, "originalText": "based", "ArgType": null, "before": " "}, {"index": 11, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 13], "characterOffsetBegin": 70, "originalText": "on", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 76, "segment_span": [0, 13], "characterOffsetBegin": 73, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "assumption", "lemma": "assumption", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 13], "characterOffsetBegin": 77, "originalText": "assumption", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 92, "segment_span": [13, 21], "characterOffsetBegin": 88, "originalText": "that", "ArgType": null, "before": " "}, {"index": 15, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [13, 21], "characterOffsetBegin": 93, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 16, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 114, "segment_span": [13, 21], "characterOffsetBegin": 104, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 17, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 118, "segment_span": [13, 21], "characterOffsetBegin": 115, "originalText": "can", "ArgType": null, "before": " "}, {"index": 18, "word": "indeed", "lemma": "indeed", "after": " ", "pos": "RB", "characterOffsetEnd": 125, "segment_span": [13, 21], "characterOffsetBegin": 119, "originalText": "indeed", "ArgType": null, "before": " "}, {"index": 19, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 128, "segment_span": [13, 21], "characterOffsetBegin": 126, "originalText": "be", "ArgType": null, "before": " "}, {"index": 20, "word": "compared", "is_pass": true, "lemma": "compare", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 137, "segment_span": [13, 21], "tense": "N", "characterOffsetBegin": 129, "originalText": "compared", "has_aux": true, "ArgType": null, "before": " "}, {"index": 21, "word": "locally", "lemma": "locally", "after": " ", "pos": "RB", "characterOffsetEnd": 145, "segment_span": [13, 21], "characterOffsetBegin": 138, "originalText": "locally", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 147, "characterOffsetBegin": 146, "originalText": ".", "ArgType": null, "before": " "}], "text": "The approach of matching constraint violations proposed here is based on the assumption that constraint violations can indeed be compared locally ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "However", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 10], "characterOffsetBegin": 10, "originalText": "if", "ArgType": null, "before": " "}, {"index": 4, "word": "locality", "lemma": "locality", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 10], "characterOffsetBegin": 13, "originalText": "locality", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 22, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "crucial", "lemma": "crucial", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "crucial", "ArgType": null, "before": " "}, {"index": 7, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 37, "segment_span": [0, 10], "characterOffsetBegin": 33, "originalText": "then", "ArgType": null, "before": " "}, {"index": 8, "word": "one", "lemma": "one", "after": " ", "pos": "PRP", "characterOffsetEnd": 41, "segment_span": [0, 10], "characterOffsetBegin": 38, "originalText": "one", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 47, "segment_span": [0, 10], "characterOffsetBegin": 42, "originalText": "might", "ArgType": null, "before": " "}, {"index": 10, "word": "wonder", "lemma": "wonder", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 54, "segment_span": [0, 10], "tense": "B", "characterOffsetBegin": 48, "originalText": "wonder", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "why", "lemma": "why", "after": " ", "pos": "WRB", "characterOffsetEnd": 58, "segment_span": [10, 21], "characterOffsetBegin": 55, "originalText": "why", "ArgType": null, "before": " "}, {"index": 12, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 61, "segment_span": [10, 21], "characterOffsetBegin": 59, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 13, "word": "extended", "lemma": "extend", "after": " ", "pos": "VBD", "is_root": true, "characterOffsetEnd": 70, "segment_span": [10, 21], "tense": "D", "characterOffsetBegin": 62, "originalText": "extended", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [10, 21], "characterOffsetBegin": 71, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "local", "lemma": "local", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [10, 21], "characterOffsetBegin": 75, "originalText": "local", "ArgType": null, "before": " "}, {"index": 16, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 89, "segment_span": [10, 21], "characterOffsetBegin": 81, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 17, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [10, 21], "characterOffsetBegin": 90, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [10, 21], "characterOffsetBegin": 99, "originalText": "with", "ArgType": null, "before": " "}, {"index": 19, "word": "global", "lemma": "global", "after": " ", "pos": "JJ", "characterOffsetEnd": 110, "segment_span": [10, 21], "characterOffsetBegin": 104, "originalText": "global", "ArgType": null, "before": " "}, {"index": 20, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [10, 21], "characterOffsetBegin": 111, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 21, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 128, "segment_span": [10, 21], "characterOffsetBegin": 123, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 130, "characterOffsetBegin": 129, "originalText": ".", "ArgType": null, "before": " "}], "text": "However , if locality is crucial then one might wonder why we extended the local matching approach with global permutation steps ."}, {"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Our", "ArgType": null, "before": ""}, {"index": 2, "word": "motivation", "lemma": "motivation", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "motivation", "ArgType": "subj", "before": " "}, {"index": 3, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 11], "characterOffsetBegin": 15, "originalText": "for", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "use", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 11], "characterOffsetBegin": 27, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "global", "lemma": "global", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 30, "originalText": "global", "ArgType": null, "before": " "}, {"index": 8, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "observation", "lemma": "observation", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 11], "characterOffsetBegin": 56, "originalText": "observation", "ArgType": "verb", "before": " "}, {"index": 12, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [11, 14], "characterOffsetBegin": 68, "originalText": "that", "ArgType": null, "before": " "}, {"index": 13, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 75, "segment_span": [11, 14], "characterOffsetBegin": 73, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 14, "word": "ensures", "lemma": "ensure", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 83, "segment_span": [11, 14], "tense": "Z", "characterOffsetBegin": 76, "originalText": "ensures", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 87, "segment_span": [14, 25], "characterOffsetBegin": 84, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [14, 25], "characterOffsetBegin": 88, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 17, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [14, 25], "characterOffsetBegin": 97, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 18, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 108, "segment_span": [14, 25], "characterOffsetBegin": 106, "originalText": "is", "ArgType": null, "before": " "}, {"index": 19, "word": "strictly", "lemma": "strictly", "after": " ", "pos": "RB", "characterOffsetEnd": 117, "segment_span": [14, 25], "characterOffsetBegin": 109, "originalText": "strictly", "ArgType": null, "before": " "}, {"index": 20, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 122, "segment_span": [14, 25], "characterOffsetBegin": 118, "originalText": "more", "ArgType": null, "before": " "}, {"index": 21, "word": "powerful", "lemma": "powerful", "after": " ", "pos": "JJ", "characterOffsetEnd": 131, "segment_span": [14, 25], "characterOffsetBegin": 123, "originalText": "powerful", "ArgType": null, "before": " "}, {"index": 22, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [14, 25], "characterOffsetBegin": 132, "originalText": "than", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 140, "segment_span": [14, 25], "characterOffsetBegin": 137, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 149, "segment_span": [14, 25], "characterOffsetBegin": 141, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 25, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [14, 25], "characterOffsetBegin": 150, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 160, "characterOffsetBegin": 159, "originalText": ".", "ArgType": null, "before": " "}], "text": "Our motivation for the use of global permutation is the observation that it ensures the matching approach is strictly more powerful than the counting approach ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "weaker", "lemma": "weaker", "after": " ", "pos": "JJR", "characterOffsetEnd": 8, "segment_span": [0, 11], "characterOffsetBegin": 2, "originalText": "weaker", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 10, "segment_span": [0, 11], "characterOffsetBegin": 9, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 14, "segment_span": [0, 11], "characterOffsetBegin": 11, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "perhaps", "lemma": "perhaps", "after": " ", "pos": "RB", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 15, "originalText": "perhaps", "ArgType": null, "before": " "}, {"index": 6, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 27, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "more", "ArgType": null, "before": " "}, {"index": 7, "word": "interesting", "lemma": "interesting", "after": " ", "pos": "JJ", "characterOffsetEnd": 39, "segment_span": [0, 11], "characterOffsetBegin": 28, "originalText": "interesting", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 41, "segment_span": [0, 11], "characterOffsetBegin": 40, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "treatment", "lemma": "treatment", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 42, "originalText": "treatment", "ArgType": null, "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 54, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "obtained", "is_pass": true, "lemma": "obtain", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 63, "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 55, "originalText": "obtained", "ArgType": null, "before": " "}, {"index": 12, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [11, 21], "characterOffsetBegin": 64, "originalText": "if", "ArgType": null, "before": " "}, {"index": 13, "word": "locality", "lemma": "locality", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [11, 21], "characterOffsetBegin": 67, "originalText": "locality", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 78, "segment_span": [11, 21], "characterOffsetBegin": 76, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "enforced", "is_pass": true, "lemma": "enforce", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 87, "segment_span": [11, 21], "tense": "N", "characterOffsetBegin": 79, "originalText": "enforced", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 90, "segment_span": [11, 21], "characterOffsetBegin": 88, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 96, "segment_span": [11, 21], "characterOffsetBegin": 91, "originalText": "these", "ArgType": null, "before": " "}, {"index": 18, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [11, 21], "characterOffsetBegin": 97, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 19, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 114, "segment_span": [11, 21], "characterOffsetBegin": 109, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 117, "segment_span": [11, 21], "characterOffsetBegin": 115, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 122, "segment_span": [11, 21], "characterOffsetBegin": 118, "originalText": "well", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 124, "characterOffsetBegin": 123, "originalText": ".", "ArgType": null, "before": " "}], "text": "A weaker , and perhaps more interesting , treatment is obtained if locality is enforced in these permutation steps as well ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "such", "lemma": "such", "after": " ", "pos": "PDT", "characterOffsetEnd": 18, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "such", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 20, "segment_span": [0, 9], "characterOffsetBegin": 19, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "weaker", "lemma": "weaker", "after": " ", "pos": "JJR", "characterOffsetEnd": 27, "segment_span": [0, 9], "characterOffsetBegin": 21, "originalText": "weaker", "ArgType": null, "before": " "}, {"index": 7, "word": "variant", "lemma": "variant", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 9], "characterOffsetBegin": 28, "originalText": "variant", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 36, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "obtained", "is_pass": true, "lemma": "obtain", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 47, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 39, "originalText": "obtained", "ArgType": null, "before": " "}, {"index": 10, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 50, "segment_span": [9, 17], "characterOffsetBegin": 48, "originalText": "if", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [9, 17], "characterOffsetBegin": 51, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 64, "segment_span": [9, 17], "characterOffsetBegin": 55, "originalText": "following", "ArgType": null, "before": " "}, {"index": 13, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [9, 17], "characterOffsetBegin": 65, "originalText": "definition", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 78, "segment_span": [9, 17], "characterOffsetBegin": 76, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "permute_marker", "lemma": "permute_marker", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [9, 17], "characterOffsetBegin": 79, "originalText": "permute_marker", "ArgType": null, "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 96, "segment_span": [9, 17], "characterOffsetBegin": 94, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 101, "segment_span": [9, 17], "tense": "N", "characterOffsetBegin": 97, "originalText": "used", "ArgType": null, "before": " "}, {"index": 18, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 103, "characterOffsetBegin": 102, "originalText": ":", "ArgType": null, "before": " "}], "text": "For example , such a weaker variant is obtained if the following definition of permute_marker is used :"}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 7, "segment_span": [0, 12], "characterOffsetBegin": 5, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 12], "characterOffsetBegin": 8, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "weaker", "lemma": "weaker", "after": " ", "pos": "JJR", "characterOffsetEnd": 16, "segment_span": [0, 12], "characterOffsetBegin": 10, "originalText": "weaker", "ArgType": null, "before": " "}, {"index": 5, "word": "notion", "lemma": "notion", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 12], "characterOffsetBegin": 17, "originalText": "notion", "ArgType": "verb", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 12], "characterOffsetBegin": 24, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 12], "characterOffsetBegin": 27, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 8, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 43, "segment_span": [0, 12], "characterOffsetBegin": 39, "originalText": "than", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [0, 12], "characterOffsetBegin": 44, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 12], "characterOffsetBegin": 48, "originalText": "definition", "ArgType": null, "before": " "}, {"index": 11, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 64, "segment_span": [0, 12], "characterOffsetBegin": 59, "originalText": "given", "ArgType": null, "before": " "}, {"index": 12, "word": "earlier", "lemma": "earlier", "after": " ", "pos": "RBR", "characterOffsetEnd": 72, "segment_span": [0, 12], "characterOffsetBegin": 65, "originalText": "earlier", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 74, "characterOffsetBegin": 73, "originalText": ".", "ArgType": null, "before": " "}], "text": "This is a weaker notion of permutation than the definition given earlier ."}, {"tokens": [{"index": 1, "word": "Interestingly", "lemma": "interestingly", "after": " ", "pos": "RB", "characterOffsetEnd": 13, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "Interestingly", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 19], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 21, "segment_span": [0, 19], "characterOffsetBegin": 16, "originalText": "using", "ArgType": null, "before": " "}, {"index": 4, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 19], "characterOffsetBegin": 22, "originalText": "this", "ArgType": null, "before": " "}, {"index": 5, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 19], "characterOffsetBegin": 27, "originalText": "definition", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "resulted", "lemma": "result", "after": " ", "pos": "VBD", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 19], "tense": "D", "characterOffsetBegin": 38, "originalText": "resulted", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [0, 19], "characterOffsetBegin": 47, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "equivalent", "lemma": "equivalent", "after": " ", "pos": "JJ", "characterOffsetEnd": 60, "segment_span": [0, 19], "characterOffsetBegin": 50, "originalText": "equivalent", "ArgType": null, "before": " "}, {"index": 9, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 72, "segment_span": [0, 19], "characterOffsetBegin": 61, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [0, 19], "characterOffsetBegin": 73, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 80, "segment_span": [0, 19], "characterOffsetBegin": 77, "originalText": "all", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [0, 19], "characterOffsetBegin": 81, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 87, "segment_span": [0, 19], "characterOffsetBegin": 84, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 19], "characterOffsetBegin": 88, "originalText": "syllabification", "ArgType": null, "before": " "}, {"index": 15, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 112, "segment_span": [0, 19], "characterOffsetBegin": 104, "originalText": "examples", "ArgType": null, "before": " "}, {"index": 16, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 118, "segment_span": [0, 19], "characterOffsetBegin": 113, "originalText": "given", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [0, 19], "characterOffsetBegin": 119, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 126, "segment_span": [0, 19], "characterOffsetBegin": 122, "originalText": "this", "ArgType": null, "before": " "}, {"index": 19, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [0, 19], "characterOffsetBegin": 127, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 134, "characterOffsetBegin": 133, "originalText": ".", "ArgType": null, "before": " "}], "text": "Interestingly , using this definition resulted in equivalent transducers for all of the syllabification examples given in this paper ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 14], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 14], "characterOffsetBegin": 7, "originalText": "general", "ArgType": null, "before": " "}, {"index": 4, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 14], "characterOffsetBegin": 15, "originalText": "case", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [0, 14], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 29, "segment_span": [0, 14], "characterOffsetBegin": 22, "originalText": "however", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 31, "segment_span": [0, 14], "characterOffsetBegin": 30, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 40, "segment_span": [0, 14], "characterOffsetBegin": 32, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 9, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [0, 14], "characterOffsetBegin": 41, "originalText": "with", "ArgType": null, "before": " "}, {"index": 10, "word": "local", "lemma": "local", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 14], "characterOffsetBegin": 46, "originalText": "local", "ArgType": null, "before": " "}, {"index": 11, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 14], "characterOffsetBegin": 52, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 66, "segment_span": [0, 14], "characterOffsetBegin": 64, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "less", "lemma": "less", "after": " ", "pos": "RBR", "characterOffsetEnd": 71, "segment_span": [0, 14], "characterOffsetBegin": 67, "originalText": "less", "ArgType": null, "before": " "}, {"index": 14, "word": "powerful", "lemma": "powerful", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [0, 14], "characterOffsetBegin": 72, "originalText": "powerful", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 82, "characterOffsetBegin": 81, "originalText": ".", "ArgType": null, "before": " "}], "text": "In the general case , however , matching with local permutation is less powerful ."}, {"tokens": [{"index": 1, "word": "Consider", "lemma": "consider", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 8, "segment_span": [0, 5], "tense": "B", "characterOffsetBegin": 0, "originalText": "Consider", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 5], "characterOffsetBegin": 9, "originalText": "the", "ArgType": "dobj", "before": " "}, {"index": 3, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 22, "segment_span": [0, 5], "characterOffsetBegin": 13, "originalText": "following", "ArgType": null, "before": " "}, {"index": 4, "word": "artificial", "lemma": "artificial", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 5], "characterOffsetBegin": 23, "originalText": "artificial", "ArgType": null, "before": " "}, {"index": 5, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 5], "characterOffsetBegin": 34, "originalText": "example", "ArgType": null, "before": " "}, {"index": 6, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 43, "characterOffsetBegin": 42, "originalText": ".", "ArgType": null, "before": " "}], "text": "Consider the following artificial example ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 13], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 13], "characterOffsetBegin": 8, "originalText": "example", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 17, "segment_span": [0, 13], "characterOffsetBegin": 16, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "inputs", "lemma": "input", "after": " ", "pos": "NNS", "characterOffsetEnd": 24, "segment_span": [0, 13], "characterOffsetBegin": 18, "originalText": "inputs", "ArgType": "subj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 13], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "interest", "lemma": "interest", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 13], "characterOffsetBegin": 28, "originalText": "interest", "ArgType": null, "before": " "}, {"index": 8, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 40, "segment_span": [0, 13], "characterOffsetBegin": 37, "originalText": "are", "ArgType": null, "before": " "}, {"index": 9, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 13], "characterOffsetBegin": 41, "originalText": "strings", "ArgType": "verb", "before": " "}, {"index": 10, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [0, 13], "characterOffsetBegin": 49, "originalText": "over", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 57, "segment_span": [0, 13], "characterOffsetBegin": 54, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "alphabet", "lemma": "alphabet", "after": "  ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [0, 13], "characterOffsetBegin": 58, "originalText": "alphabet", "ArgType": null, "before": " "}, {"index": 13, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [0, 13], "characterOffsetBegin": 68, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 79, "characterOffsetBegin": 78, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In this example , inputs of interest are strings over the alphabet equation ."}, {"tokens": [{"index": 1, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 3, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "Gen", "ArgType": "subj", "before": ""}, {"index": 2, "word": "introduces", "lemma": "introduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 14, "segment_span": [0, 21], "tense": "Z", "characterOffsetBegin": 4, "originalText": "introduces", "ArgType": "verb", "before": " "}, {"index": 3, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 21], "characterOffsetBegin": 15, "originalText": "an", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 21], "characterOffsetBegin": 18, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "before", "lemma": "before", "after": " ", "pos": "RB", "characterOffsetEnd": 26, "segment_span": [0, 21], "characterOffsetBegin": 20, "originalText": "before", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 21], "characterOffsetBegin": 27, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 21], "characterOffsetBegin": 29, "originalText": "sequence", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 21], "characterOffsetBegin": 38, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 21], "characterOffsetBegin": 41, "originalText": "b", "ArgType": null, "before": " "}, {"index": 10, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 44, "segment_span": [0, 21], "characterOffsetBegin": 42, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 46, "segment_span": [0, 21], "characterOffsetBegin": 45, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 49, "segment_span": [0, 21], "characterOffsetBegin": 47, "originalText": "or", "ArgType": null, "before": " "}, {"index": 13, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 53, "segment_span": [0, 21], "characterOffsetBegin": 50, "originalText": "two", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [0, 21], "characterOffsetBegin": 54, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 57, "segment_span": [0, 21], "characterOffsetBegin": 55, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 16, "word": "after", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 21], "characterOffsetBegin": 58, "originalText": "after", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [0, 21], "characterOffsetBegin": 64, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 21], "characterOffsetBegin": 66, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 77, "segment_span": [0, 21], "characterOffsetBegin": 75, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 21], "characterOffsetBegin": 78, "originalText": "b", "ArgType": null, "before": " "}, {"index": 21, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 81, "segment_span": [0, 21], "characterOffsetBegin": 79, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 83, "characterOffsetBegin": 82, "originalText": ".", "ArgType": null, "before": " "}], "text": "Gen introduces an a before a sequence of b 's , or two a 's after a sequence of b 's ."}, {"tokens": [{"index": 1, "word": "Gen", "lemma": "gen", "after": " ", "pos": "NN", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Gen", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 6, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "given", "is_pass": true, "lemma": "give", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 7, "originalText": "given", "ArgType": null, "before": " "}, {"index": 4, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 9], "characterOffsetBegin": 13, "originalText": "as", "ArgType": null, "before": " "}, {"index": 5, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 9], "characterOffsetBegin": 16, "originalText": "an", "ArgType": null, "before": " "}, {"index": 6, "word": "automaton", "lemma": "automaton", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 19, "originalText": "automaton", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 9], "characterOffsetBegin": 29, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "fig", "lemma": "fig", "after": "   ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 9], "characterOffsetBegin": 32, "originalText": "fig", "ArgType": null, "before": " "}, {"index": 9, "word": "CREF", "lemma": "cref", "after": "   ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 9], "characterOffsetBegin": 38, "originalText": "CREF", "ArgType": null, "before": "   "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 46, "characterOffsetBegin": 45, "originalText": ".", "ArgType": null, "before": "   "}], "text": "Gen is given as an automaton in fig CREF ."}, {"tokens": [{"index": 1, "word": "There", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 5, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "There", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 8, "segment_span": [0, 7], "tense": "Z", "characterOffsetBegin": 6, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 3, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 13, "segment_span": [0, 7], "characterOffsetBegin": 9, "originalText": "only", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 7], "characterOffsetBegin": 14, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 22, "segment_span": [0, 7], "characterOffsetBegin": 16, "originalText": "single", "ArgType": null, "before": " "}, {"index": 6, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 7], "characterOffsetBegin": 23, "originalText": "constraint", "ArgType": "subj", "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 35, "segment_span": [0, 7], "characterOffsetBegin": 34, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 41, "segment_span": [7, 10], "characterOffsetBegin": 36, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 9, "word": "forbids", "lemma": "forbid", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 49, "segment_span": [7, 10], "tense": "Z", "characterOffsetBegin": 42, "originalText": "forbids", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [7, 10], "characterOffsetBegin": 50, "originalText": "a", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 53, "characterOffsetBegin": 52, "originalText": ".", "ArgType": null, "before": " "}], "text": "There is only a single constraint , which forbids a ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "It", "ArgType": null, "before": ""}, {"index": 2, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 6, "segment_span": [0, 17], "characterOffsetBegin": 3, "originalText": "can", "ArgType": null, "before": " "}, {"index": 3, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 13, "segment_span": [0, 17], "characterOffsetBegin": 7, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 16, "segment_span": [0, 17], "characterOffsetBegin": 14, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "verified", "is_pass": true, "lemma": "verify", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 25, "segment_span": [0, 17], "tense": "N", "characterOffsetBegin": 17, "originalText": "verified", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 17], "characterOffsetBegin": 26, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 32, "segment_span": [0, 17], "characterOffsetBegin": 31, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 41, "segment_span": [0, 17], "characterOffsetBegin": 33, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 9, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 17], "characterOffsetBegin": 42, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [0, 17], "characterOffsetBegin": 51, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "global", "lemma": "global", "after": " ", "pos": "JJ", "characterOffsetEnd": 62, "segment_span": [0, 17], "characterOffsetBegin": 56, "originalText": "global", "ArgType": null, "before": " "}, {"index": 12, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 17], "characterOffsetBegin": 63, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 13, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 80, "segment_span": [0, 17], "characterOffsetBegin": 75, "originalText": "using", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 82, "segment_span": [0, 17], "characterOffsetBegin": 81, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 17], "characterOffsetBegin": 83, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [0, 17], "characterOffsetBegin": 93, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 97, "segment_span": [0, 17], "characterOffsetBegin": 96, "originalText": "1", "ArgType": null, "before": " "}, {"index": 18, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 105, "segment_span": [17, 21], "characterOffsetBegin": 98, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 19, "word": "implements", "lemma": "implement", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 116, "segment_span": [17, 21], "tense": "Z", "characterOffsetBegin": 106, "originalText": "implements", "ArgType": null, "before": " "}, {"index": 20, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 121, "segment_span": [17, 21], "characterOffsetBegin": 117, "originalText": "this", "ArgType": null, "before": " "}, {"index": 21, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [17, 21], "characterOffsetBegin": 122, "originalText": "OT", "ArgType": "dobj", "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 126, "characterOffsetBegin": 125, "originalText": ".", "ArgType": null, "before": " "}], "text": "It can easily be verified that a matching approach with global permutation using a precision of 1 exactly implements this OT ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "contrast", "lemma": "contrast", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 22], "characterOffsetBegin": 3, "originalText": "contrast", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 22], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "both", "lemma": "both", "after": " ", "pos": "CC", "characterOffsetEnd": 18, "segment_span": [0, 22], "characterOffsetBegin": 14, "originalText": "both", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 22], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 31, "segment_span": [0, 22], "characterOffsetBegin": 23, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 22], "characterOffsetBegin": 32, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [0, 22], "characterOffsetBegin": 41, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 48, "segment_span": [0, 22], "characterOffsetBegin": 44, "originalText": "well", "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 22], "characterOffsetBegin": 49, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 53, "segment_span": [0, 22], "characterOffsetBegin": 52, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 62, "segment_span": [0, 22], "characterOffsetBegin": 54, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 13, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 22], "characterOffsetBegin": 63, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 14, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 77, "segment_span": [0, 22], "characterOffsetBegin": 72, "originalText": "based", "ArgType": null, "before": " "}, {"index": 15, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [0, 22], "characterOffsetBegin": 78, "originalText": "on", "ArgType": null, "before": " "}, {"index": 16, "word": "local", "lemma": "local", "after": " ", "pos": "JJ", "characterOffsetEnd": 86, "segment_span": [0, 22], "characterOffsetBegin": 81, "originalText": "local", "ArgType": null, "before": " "}, {"index": 17, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [0, 22], "characterOffsetBegin": 87, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 18, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 102, "segment_span": [0, 22], "characterOffsetBegin": 99, "originalText": "can", "ArgType": null, "before": " "}, {"index": 19, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 107, "segment_span": [0, 22], "characterOffsetBegin": 103, "originalText": "only", "ArgType": null, "before": " "}, {"index": 20, "word": "approximate", "lemma": "approximate", "after": " ", "pos": "JJ", "characterOffsetEnd": 119, "segment_span": [0, 22], "has_aux": true, "characterOffsetBegin": 108, "originalText": "approximate", "ArgType": "verb", "before": " "}, {"index": 21, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 124, "segment_span": [0, 22], "characterOffsetBegin": 120, "originalText": "this", "ArgType": null, "before": " "}, {"index": 22, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 127, "segment_span": [0, 22], "characterOffsetBegin": 125, "originalText": "OT", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": " "}], "text": "In contrast , both the counting approach as well as a matching approach based on local permutation can only approximate this OT ."}]}], "title": "The Matching Approach"}, {"num": 4, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 22], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 22], "characterOffsetBegin": 8, "originalText": "section", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [0, 22], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "compare", "lemma": "compare", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 22], "tense": "P", "characterOffsetBegin": 19, "originalText": "compare", "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 22], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 34, "segment_span": [0, 22], "characterOffsetBegin": 31, "originalText": "two", "ArgType": null, "before": " "}, {"index": 8, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "JJ", "characterOffsetEnd": 46, "segment_span": [0, 22], "characterOffsetBegin": 35, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 9, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [0, 22], "characterOffsetBegin": 47, "originalText": "approaches", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 22], "characterOffsetBegin": 58, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "respect", "lemma": "respect", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 22], "characterOffsetBegin": 63, "originalText": "respect", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 73, "segment_span": [0, 22], "characterOffsetBegin": 71, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "accuracy", "lemma": "accuracy", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 22], "characterOffsetBegin": 74, "originalText": "accuracy", "ArgType": null, "before": " "}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 86, "segment_span": [0, 22], "characterOffsetBegin": 83, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 90, "segment_span": [0, 22], "characterOffsetBegin": 87, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [0, 22], "characterOffsetBegin": 91, "originalText": "number", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [0, 22], "characterOffsetBegin": 98, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 107, "segment_span": [0, 22], "characterOffsetBegin": 101, "originalText": "states", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [0, 22], "characterOffsetBegin": 108, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 114, "segment_span": [0, 22], "characterOffsetBegin": 111, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 124, "segment_span": [0, 22], "characterOffsetBegin": 115, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 22, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 136, "segment_span": [0, 22], "characterOffsetBegin": 125, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 138, "characterOffsetBegin": 137, "originalText": ".", "ArgType": null, "before": " "}], "text": "In this section we compare the two alternative approaches with respect to accuracy and the number of states of the resulting transducers ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "distinguish", "lemma": "distinguish", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 14, "segment_span": [0, 7], "tense": "P", "characterOffsetBegin": 3, "originalText": "distinguish", "ArgType": "verb", "before": " "}, {"index": 3, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 7], "characterOffsetBegin": 15, "originalText": "between", "ArgType": null, "before": " "}, {"index": 4, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 7], "characterOffsetBegin": 23, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 32, "segment_span": [0, 7], "characterOffsetBegin": 29, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "approximating", "lemma": "approximate", "after": " ", "pos": "VBG", "characterOffsetEnd": 46, "segment_span": [0, 7], "characterOffsetBegin": 33, "originalText": "approximating", "ArgType": null, "before": " "}, {"index": 7, "word": "implementations", "lemma": "implementation", "after": " ", "pos": "NNS", "characterOffsetEnd": 62, "segment_span": [0, 7], "characterOffsetBegin": 47, "originalText": "implementations", "ArgType": null, "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 64, "characterOffsetBegin": 63, "originalText": ".", "ArgType": null, "before": " "}], "text": "We distinguish between exact and approximating implementations ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "An", "ArgType": null, "before": ""}, {"index": 2, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "implementation", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 20, "segment_span": [0, 4], "characterOffsetBegin": 18, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 26, "segment_span": [0, 4], "characterOffsetBegin": 21, "originalText": "exact", "ArgType": "verb", "before": " "}, {"index": 5, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [4, 14], "characterOffsetBegin": 27, "originalText": "if", "ArgType": null, "before": " "}, {"index": 6, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 32, "segment_span": [4, 14], "characterOffsetBegin": 30, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 7, "word": "produces", "lemma": "produce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 41, "segment_span": [4, 14], "tense": "Z", "characterOffsetBegin": 33, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [4, 14], "characterOffsetBegin": 42, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "right", "lemma": "right", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [4, 14], "characterOffsetBegin": 46, "originalText": "right", "ArgType": null, "before": " "}, {"index": 10, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [4, 14], "characterOffsetBegin": 52, "originalText": "result", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [4, 14], "characterOffsetBegin": 59, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 66, "segment_span": [4, 14], "characterOffsetBegin": 63, "originalText": "all", "ArgType": null, "before": " "}, {"index": 13, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 75, "segment_span": [4, 14], "characterOffsetBegin": 67, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 14, "word": "inputs", "lemma": "input", "after": " ", "pos": "NNS", "characterOffsetEnd": 82, "segment_span": [4, 14], "characterOffsetBegin": 76, "originalText": "inputs", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ".", "ArgType": null, "before": " "}], "text": "An implementation is exact if it produces the right result for all possible inputs ."}, {"tokens": [{"index": 1, "word": "Assume", "lemma": "assume", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 6, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Assume", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 9, "segment_span": [1, 13], "characterOffsetBegin": 7, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 14, "segment_span": [1, 13], "tense": "P", "characterOffsetBegin": 10, "originalText": "have", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 16, "segment_span": [1, 13], "characterOffsetBegin": 15, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [1, 13], "characterOffsetBegin": 17, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 6, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [1, 13], "characterOffsetBegin": 28, "originalText": "T", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 35, "segment_span": [6, 12], "characterOffsetBegin": 30, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 8, "word": "correctly", "lemma": "correctly", "after": " ", "pos": "RB", "characterOffsetEnd": 45, "segment_span": [6, 12], "characterOffsetBegin": 36, "originalText": "correctly", "ArgType": null, "before": " "}, {"index": 9, "word": "implements", "lemma": "implement", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 56, "segment_span": [6, 12], "tense": "Z", "characterOffsetBegin": 46, "originalText": "implements", "ArgType": null, "before": " "}, {"index": 10, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [6, 12], "characterOffsetBegin": 57, "originalText": "an", "ArgType": null, "before": " "}, {"index": 11, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [6, 12], "characterOffsetBegin": 60, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 12, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [6, 12], "characterOffsetBegin": 63, "originalText": "analysis", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 73, "segment_span": [1, 13], "characterOffsetBegin": 72, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 80, "segment_span": [13, 32], "characterOffsetBegin": 74, "originalText": "except", "ArgType": null, "before": " "}, {"index": 15, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [13, 32], "characterOffsetBegin": 81, "originalText": "that", "ArgType": null, "before": " "}, {"index": 16, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 88, "segment_span": [13, 32], "characterOffsetBegin": 86, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 17, "word": "perhaps", "lemma": "perhaps", "after": " ", "pos": "RB", "characterOffsetEnd": 96, "segment_span": [13, 32], "characterOffsetBegin": 89, "originalText": "perhaps", "ArgType": null, "before": " "}, {"index": 18, "word": "fails", "lemma": "fail", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 102, "segment_span": [13, 32], "tense": "Z", "characterOffsetBegin": 97, "originalText": "fails", "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 105, "segment_span": [13, 32], "characterOffsetBegin": 103, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "distinguish", "lemma": "distinguish", "after": " ", "pos": "VB", "characterOffsetEnd": 117, "segment_span": [13, 32], "characterOffsetBegin": 106, "originalText": "distinguish", "ArgType": null, "before": " "}, {"index": 21, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 125, "segment_span": [13, 32], "characterOffsetBegin": 118, "originalText": "between", "ArgType": null, "before": " "}, {"index": 22, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 135, "segment_span": [13, 32], "characterOffsetBegin": 126, "originalText": "different", "ArgType": null, "before": " "}, {"index": 23, "word": "numbers", "lemma": "number", "after": " ", "pos": "NNS", "characterOffsetEnd": 143, "segment_span": [13, 32], "characterOffsetBegin": 136, "originalText": "numbers", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 146, "segment_span": [13, 32], "characterOffsetBegin": 144, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [13, 32], "characterOffsetBegin": 147, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 26, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 168, "segment_span": [13, 32], "characterOffsetBegin": 158, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 27, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 172, "segment_span": [13, 32], "characterOffsetBegin": 169, "originalText": "for", "ArgType": null, "before": " "}, {"index": 28, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 176, "segment_span": [13, 32], "characterOffsetBegin": 173, "originalText": "one", "ArgType": null, "before": " "}, {"index": 29, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 179, "segment_span": [13, 32], "characterOffsetBegin": 177, "originalText": "or", "ArgType": null, "before": " "}, {"index": 30, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 184, "segment_span": [13, 32], "characterOffsetBegin": 180, "originalText": "more", "ArgType": null, "before": " "}, {"index": 31, "word": "relevant", "lemma": "relevant", "after": " ", "pos": "JJ", "characterOffsetEnd": 193, "segment_span": [13, 32], "characterOffsetBegin": 185, "originalText": "relevant", "ArgType": null, "before": " "}, {"index": 32, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 205, "segment_span": [13, 32], "characterOffsetBegin": 194, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 207, "characterOffsetBegin": 206, "originalText": ".", "ArgType": null, "before": " "}], "text": "Assume we have a transducer T which correctly implements an OT analysis , except that it perhaps fails to distinguish between different numbers of constraint violations for one or more relevant constraints ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 6, "segment_span": [0, 3], "characterOffsetBegin": 3, "originalText": "can", "ArgType": null, "before": " "}, {"index": 3, "word": "decide", "lemma": "decide", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 3], "tense": "B", "characterOffsetBegin": 7, "originalText": "decide", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "whether", "lemma": "whether", "after": " ", "pos": "IN", "characterOffsetEnd": 21, "segment_span": [3, 8], "characterOffsetBegin": 14, "originalText": "whether", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [3, 8], "characterOffsetBegin": 22, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [3, 8], "characterOffsetBegin": 27, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 31, "segment_span": [3, 8], "characterOffsetBegin": 29, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [3, 8], "characterOffsetBegin": 32, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 9, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [8, 10], "characterOffsetBegin": 38, "originalText": "as", "ArgType": null, "before": " "}, {"index": 10, "word": "follows", "lemma": "follow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 48, "segment_span": [8, 10], "tense": "Z", "characterOffsetBegin": 41, "originalText": "follows", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 50, "characterOffsetBegin": 49, "originalText": ".", "ArgType": null, "before": " "}], "text": "We can decide whether this T is exact as follows ."}, {"tokens": [{"index": 1, "word": "Tis", "lemma": "Tis", "after": " ", "pos": "NNP", "characterOffsetEnd": 3, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "Tis", "ArgType": "subj", "before": ""}, {"index": 2, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 5], "characterOffsetBegin": 4, "originalText": "exact", "ArgType": "verb", "before": " "}, {"index": 3, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 5], "characterOffsetBegin": 10, "originalText": "if", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 16, "segment_span": [0, 5], "characterOffsetBegin": 13, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 21, "segment_span": [0, 5], "characterOffsetBegin": 17, "originalText": "only", "ArgType": null, "before": " "}, {"index": 6, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [5, 18], "characterOffsetBegin": 22, "originalText": "if", "ArgType": null, "before": " "}, {"index": 7, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [5, 18], "characterOffsetBegin": 25, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 29, "segment_span": [5, 18], "characterOffsetBegin": 27, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 35, "segment_span": [5, 18], "characterOffsetBegin": 30, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [5, 18], "characterOffsetBegin": 36, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "respect", "lemma": "respect", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [5, 18], "characterOffsetBegin": 41, "originalText": "respect", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 51, "segment_span": [5, 18], "characterOffsetBegin": 49, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 56, "segment_span": [5, 18], "characterOffsetBegin": 52, "originalText": "each", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [5, 18], "characterOffsetBegin": 57, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 63, "segment_span": [5, 18], "characterOffsetBegin": 60, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "relevant", "lemma": "relevant", "after": " ", "pos": "JJ", "characterOffsetEnd": 72, "segment_span": [5, 18], "characterOffsetBegin": 64, "originalText": "relevant", "ArgType": null, "before": " "}, {"index": 17, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 84, "segment_span": [5, 18], "characterOffsetBegin": 73, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 86, "segment_span": [5, 18], "characterOffsetBegin": 85, "originalText": ",", "ArgType": null, "before": " "}, {"index": 19, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 91, "segment_span": [18, 32], "characterOffsetBegin": 87, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 93, "segment_span": [18, 32], "characterOffsetBegin": 92, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [18, 32], "characterOffsetBegin": 94, "originalText": "for", "ArgType": null, "before": " "}, {"index": 22, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 102, "segment_span": [18, 32], "characterOffsetBegin": 98, "originalText": "each", "ArgType": null, "before": " "}, {"index": 23, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [18, 32], "characterOffsetBegin": 103, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 115, "segment_span": [18, 32], "characterOffsetBegin": 114, "originalText": ",", "ArgType": null, "before": " "}, {"index": 25, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [18, 32], "characterOffsetBegin": 116, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 26, "word": "distinguishes", "lemma": "distinguish", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 131, "segment_span": [18, 32], "tense": "Z", "characterOffsetBegin": 118, "originalText": "distinguishes", "ArgType": null, "before": " "}, {"index": 27, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [18, 32], "characterOffsetBegin": 132, "originalText": "between", "ArgType": null, "before": " "}, {"index": 28, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 149, "segment_span": [18, 32], "characterOffsetBegin": 140, "originalText": "different", "ArgType": null, "before": " "}, {"index": 29, "word": "numbers", "lemma": "number", "after": " ", "pos": "NNS", "characterOffsetEnd": 157, "segment_span": [18, 32], "characterOffsetBegin": 150, "originalText": "numbers", "ArgType": null, "before": " "}, {"index": 30, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 160, "segment_span": [18, 32], "characterOffsetBegin": 158, "originalText": "of", "ArgType": null, "before": " "}, {"index": 31, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 171, "segment_span": [18, 32], "characterOffsetBegin": 161, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 32, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 182, "segment_span": [18, 32], "characterOffsetBegin": 172, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 184, "characterOffsetBegin": 183, "originalText": ".", "ArgType": null, "before": " "}], "text": "Tis exact if and only if T is exact with respect to each of the relevant constraints , i.e. , for each constraint , T distinguishes between different numbers of constraint violations ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "order", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 11, "segment_span": [0, 4], "characterOffsetBegin": 9, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "check", "lemma": "check", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 4], "tense": "B", "characterOffsetBegin": 12, "originalText": "check", "ArgType": null, "before": " "}, {"index": 5, "word": "whether", "lemma": "whether", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [4, 11], "characterOffsetBegin": 18, "originalText": "whether", "ArgType": null, "before": " "}, {"index": 6, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [4, 11], "characterOffsetBegin": 26, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 30, "segment_span": [4, 11], "characterOffsetBegin": 28, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [4, 11], "characterOffsetBegin": 31, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [4, 11], "characterOffsetBegin": 37, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [4, 11], "characterOffsetBegin": 40, "originalText": "this", "ArgType": null, "before": " "}, {"index": 11, "word": "sense", "lemma": "sense", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [4, 11], "characterOffsetBegin": 45, "originalText": "sense", "ArgType": null, "before": " "}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [11, 24], "characterOffsetBegin": 51, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [11, 24], "characterOffsetBegin": 55, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 14, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [11, 24], "characterOffsetBegin": 66, "originalText": "C", "ArgType": null, "before": " "}, {"index": 15, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 70, "segment_span": [11, 24], "characterOffsetBegin": 68, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 16, "word": "create", "lemma": "create", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 77, "segment_span": [11, 24], "tense": "P", "characterOffsetBegin": 71, "originalText": "create", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [11, 24], "characterOffsetBegin": 78, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [11, 24], "characterOffsetBegin": 82, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 19, "word": "is_exact", "lemma": "is_exact", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [11, 24], "characterOffsetBegin": 93, "originalText": "is_exact", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 103, "segment_span": [11, 24], "characterOffsetBegin": 102, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [11, 24], "characterOffsetBegin": 104, "originalText": "T", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 107, "segment_span": [11, 24], "characterOffsetBegin": 106, "originalText": ",", "ArgType": null, "before": " "}, {"index": 23, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [11, 24], "characterOffsetBegin": 108, "originalText": "C", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 111, "segment_span": [11, 24], "characterOffsetBegin": 110, "originalText": ")", "ArgType": null, "before": " "}, {"index": 25, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 113, "characterOffsetBegin": 112, "originalText": ":", "ArgType": null, "before": " "}], "text": "In order to check whether T is exact in this sense for constraint C we create the transducer is_exact ( T , C ) :"}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 8, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "there", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 4], "tense": "P", "characterOffsetBegin": 9, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 4, "word": "inputs", "lemma": "input", "after": " ", "pos": "NNS", "characterOffsetEnd": 19, "segment_span": [0, 4], "characterOffsetBegin": 13, "originalText": "inputs", "ArgType": "subj", "before": " "}, {"index": 5, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [4, 11], "characterOffsetBegin": 20, "originalText": "for", "ArgType": null, "before": " "}, {"index": 6, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 29, "segment_span": [4, 11], "characterOffsetBegin": 24, "originalText": "which", "ArgType": null, "before": " "}, {"index": 7, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [4, 11], "characterOffsetBegin": 30, "originalText": "this", "ArgType": null, "before": " "}, {"index": 8, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [4, 11], "characterOffsetBegin": 35, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 9, "word": "produces", "lemma": "produce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 54, "segment_span": [4, 11], "tense": "Z", "characterOffsetBegin": 46, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 10, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [4, 11], "characterOffsetBegin": 55, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 11, "word": "outputs", "lemma": "output", "after": " ", "pos": "NNS", "characterOffsetEnd": 71, "segment_span": [4, 11], "characterOffsetBegin": 64, "originalText": "outputs", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 73, "segment_span": [11, 23], "characterOffsetBegin": 72, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 78, "segment_span": [11, 23], "characterOffsetBegin": 74, "originalText": "then", "ArgType": null, "before": " "}, {"index": 14, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 81, "segment_span": [11, 23], "characterOffsetBegin": 79, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 15, "word": "know", "lemma": "know", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 86, "segment_span": [11, 23], "tense": "P", "characterOffsetBegin": 82, "originalText": "know", "ArgType": "verb", "before": " "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [15, 22], "characterOffsetBegin": 87, "originalText": "that", "ArgType": null, "before": " "}, {"index": 17, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [15, 22], "characterOffsetBegin": 92, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 18, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 96, "segment_span": [15, 22], "characterOffsetBegin": 94, "originalText": "is", "ArgType": null, "before": " "}, {"index": 19, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 100, "segment_span": [15, 22], "characterOffsetBegin": 97, "originalText": "not", "ArgType": null, "before": " "}, {"index": 20, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 106, "segment_span": [15, 22], "characterOffsetBegin": 101, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 21, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [15, 22], "characterOffsetBegin": 107, "originalText": "for", "ArgType": null, "before": " "}, {"index": 22, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 112, "segment_span": [15, 22], "characterOffsetBegin": 111, "originalText": "C", "ArgType": null, "before": " "}, {"index": 23, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 114, "segment_span": [11, 23], "characterOffsetBegin": 113, "originalText": ";", "ArgType": null, "before": " "}, {"index": 24, "word": "otherwise", "lemma": "otherwise", "after": " ", "pos": "RB", "characterOffsetEnd": 124, "segment_span": [23, 29], "characterOffsetBegin": 115, "originalText": "otherwise", "ArgType": null, "before": " "}, {"index": 25, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [23, 29], "characterOffsetBegin": 125, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 26, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 129, "segment_span": [23, 29], "characterOffsetBegin": 127, "originalText": "is", "ArgType": null, "before": " "}, {"index": 27, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 135, "segment_span": [23, 29], "characterOffsetBegin": 130, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 28, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [23, 29], "characterOffsetBegin": 136, "originalText": "for", "ArgType": null, "before": " "}, {"index": 29, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [23, 29], "characterOffsetBegin": 140, "originalText": "C", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ".", "ArgType": null, "before": " "}], "text": "If there are inputs for which this transducer produces multiple outputs , then we know that T is not exact for C ; otherwise T is exact for C ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "reduces", "lemma": "reduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 15], "tense": "Z", "characterOffsetBegin": 5, "originalText": "reduces", "ArgType": "verb", "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 15, "segment_span": [0, 15], "characterOffsetBegin": 13, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 15], "characterOffsetBegin": 16, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "question", "lemma": "question", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 15], "characterOffsetBegin": 20, "originalText": "question", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 15], "characterOffsetBegin": 29, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "whether", "lemma": "whether", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [0, 15], "characterOffsetBegin": 32, "originalText": "whether", "ArgType": null, "before": " "}, {"index": 8, "word": "is_exact", "lemma": "is_exact", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 15], "characterOffsetBegin": 40, "originalText": "is_exact", "ArgType": "subj", "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 50, "segment_span": [0, 15], "characterOffsetBegin": 49, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 15], "characterOffsetBegin": 51, "originalText": "T", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [0, 15], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 15], "characterOffsetBegin": 55, "originalText": "C", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 58, "segment_span": [0, 15], "characterOffsetBegin": 57, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 61, "segment_span": [0, 15], "characterOffsetBegin": 59, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "ambiguous", "lemma": "ambiguous", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [0, 15], "characterOffsetBegin": 62, "originalText": "ambiguous", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 73, "characterOffsetBegin": 72, "originalText": ".", "ArgType": null, "before": " "}], "text": "This reduces to the question of whether is_exact ( T , C ) is ambiguous ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "question", "lemma": "question", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 23], "characterOffsetBegin": 4, "originalText": "question", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 23], "characterOffsetBegin": 13, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "whether", "lemma": "whether", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 23], "characterOffsetBegin": 16, "originalText": "whether", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 25, "segment_span": [0, 23], "characterOffsetBegin": 24, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 31, "segment_span": [0, 23], "characterOffsetBegin": 26, "originalText": "given", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 23], "characterOffsetBegin": 32, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 45, "segment_span": [0, 23], "characterOffsetBegin": 43, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "ambiguous", "lemma": "ambiguous", "after": " ", "pos": "JJ", "characterOffsetEnd": 55, "segment_span": [0, 23], "characterOffsetBegin": 46, "originalText": "ambiguous", "ArgType": null, "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 58, "segment_span": [0, 23], "characterOffsetBegin": 56, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "shown", "is_pass": true, "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 64, "segment_span": [0, 23], "tense": "N", "characterOffsetBegin": 59, "originalText": "shown", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 67, "segment_span": [0, 23], "characterOffsetBegin": 65, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 70, "segment_span": [0, 23], "characterOffsetBegin": 68, "originalText": "be", "ArgType": null, "before": " "}, {"index": 14, "word": "decidable", "lemma": "decidable", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [0, 23], "characterOffsetBegin": 71, "originalText": "decidable", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [0, 23], "characterOffsetBegin": 81, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 86, "segment_span": [0, 23], "characterOffsetBegin": 85, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 17, "word": "Blattner", "lemma": "Blattner", "after": " ", "pos": "NNP", "characterOffsetEnd": 95, "segment_span": [0, 23], "characterOffsetBegin": 87, "originalText": "Blattner", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 99, "segment_span": [0, 23], "characterOffsetBegin": 96, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "Head", "lemma": "Head", "after": " ", "pos": "NNP", "characterOffsetEnd": 104, "segment_span": [0, 23], "characterOffsetBegin": 100, "originalText": "Head", "ArgType": null, "before": " "}, {"index": 20, "word": "1977", "lemma": "1977", "after": " ", "pos": "CD", "characterOffsetEnd": 109, "segment_span": [0, 23], "characterOffsetBegin": 105, "originalText": "1977", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 111, "segment_span": [0, 23], "characterOffsetBegin": 110, "originalText": ")", "ArgType": null, "before": " "}, {"index": 22, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 114, "segment_span": [0, 23], "characterOffsetBegin": 113, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 118, "segment_span": [0, 23], "characterOffsetBegin": 115, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 121, "segment_span": [23, 35], "characterOffsetBegin": 119, "originalText": "an", "ArgType": null, "before": " "}, {"index": 25, "word": "efficient", "lemma": "efficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 131, "segment_span": [23, 35], "characterOffsetBegin": 122, "originalText": "efficient", "ArgType": null, "before": " "}, {"index": 26, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [23, 35], "characterOffsetBegin": 132, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 27, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 144, "segment_span": [23, 35], "characterOffsetBegin": 142, "originalText": "is", "ArgType": null, "before": " "}, {"index": 28, "word": "proposed", "is_pass": true, "lemma": "propose", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 153, "segment_span": [23, 35], "tense": "N", "characterOffsetBegin": 145, "originalText": "proposed", "ArgType": null, "before": " "}, {"index": 29, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 156, "segment_span": [23, 35], "characterOffsetBegin": 154, "originalText": "in", "ArgType": null, "before": " "}, {"index": 30, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 159, "segment_span": [23, 35], "characterOffsetBegin": 158, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 31, "word": "Roche", "lemma": "Roche", "after": " ", "pos": "NNP", "characterOffsetEnd": 165, "segment_span": [23, 35], "characterOffsetBegin": 160, "originalText": "Roche", "ArgType": null, "before": " "}, {"index": 32, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 169, "segment_span": [23, 35], "characterOffsetBegin": 166, "originalText": "and", "ArgType": null, "before": " "}, {"index": 33, "word": "Schabes", "lemma": "Schabes", "after": " ", "pos": "NNP", "characterOffsetEnd": 177, "segment_span": [23, 35], "characterOffsetBegin": 170, "originalText": "Schabes", "ArgType": null, "before": " "}, {"index": 34, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 182, "segment_span": [23, 35], "characterOffsetBegin": 178, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 184, "segment_span": [23, 35], "characterOffsetBegin": 183, "originalText": ")", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 187, "characterOffsetBegin": 186, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The question of whether a given transducer is ambiguous is shown to be decidable in ( Blattner and Head 1977 ) ; and an efficient algorithm is proposed in ( Roche and Schabes 1997 ) ."}, {"tokens": [{"index": 1, "word": "Therefore", "lemma": "therefore", "after": " ", "pos": "RB", "characterOffsetEnd": 9, "segment_span": [0, 18], "characterOffsetBegin": 0, "originalText": "Therefore", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 11, "segment_span": [0, 18], "characterOffsetBegin": 10, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [2, 12], "characterOffsetBegin": 12, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [2, 12], "characterOffsetBegin": 15, "originalText": "order", "ArgType": null, "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 23, "segment_span": [2, 12], "characterOffsetBegin": 21, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "check", "lemma": "check", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 29, "segment_span": [2, 12], "tense": "B", "characterOffsetBegin": 24, "originalText": "check", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [2, 12], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 37, "segment_span": [2, 12], "characterOffsetBegin": 32, "originalText": "given", "ArgType": null, "before": " "}, {"index": 9, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [2, 12], "characterOffsetBegin": 38, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 10, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [2, 12], "characterOffsetBegin": 49, "originalText": "T", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [2, 12], "characterOffsetBegin": 51, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "exactness", "lemma": "exactness", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [2, 12], "characterOffsetBegin": 55, "originalText": "exactness", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 66, "segment_span": [0, 18], "characterOffsetBegin": 65, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 69, "segment_span": [0, 18], "characterOffsetBegin": 67, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 15, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 74, "segment_span": [0, 18], "characterOffsetBegin": 70, "originalText": "must", "ArgType": null, "before": " "}, {"index": 16, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 77, "segment_span": [0, 18], "characterOffsetBegin": 75, "originalText": "be", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [0, 18], "characterOffsetBegin": 78, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 18], "has_aux": true, "characterOffsetBegin": 82, "originalText": "case", "ArgType": "verb", "before": " "}, {"index": 19, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [18, 34], "characterOffsetBegin": 87, "originalText": "that", "ArgType": null, "before": " "}, {"index": 20, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [18, 34], "characterOffsetBegin": 92, "originalText": "for", "ArgType": null, "before": " "}, {"index": 21, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [18, 34], "characterOffsetBegin": 96, "originalText": "each", "ArgType": null, "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [18, 34], "characterOffsetBegin": 101, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 107, "segment_span": [18, 34], "characterOffsetBegin": 104, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [18, 34], "characterOffsetBegin": 108, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 25, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [18, 34], "characterOffsetBegin": 120, "originalText": "C", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 123, "segment_span": [18, 34], "characterOffsetBegin": 122, "originalText": ",", "ArgType": null, "before": " "}, {"index": 27, "word": "is_exact", "lemma": "is_exact", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [18, 34], "characterOffsetBegin": 124, "originalText": "is_exact", "ArgType": "subj", "before": " "}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 134, "segment_span": [18, 34], "characterOffsetBegin": 133, "originalText": "(", "ArgType": null, "before": " "}, {"index": 29, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [18, 34], "characterOffsetBegin": 135, "originalText": "T", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 138, "segment_span": [18, 34], "characterOffsetBegin": 137, "originalText": ",", "ArgType": null, "before": " "}, {"index": 31, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 140, "segment_span": [18, 34], "characterOffsetBegin": 139, "originalText": "C", "ArgType": null, "before": " "}, {"index": 32, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 142, "segment_span": [18, 34], "characterOffsetBegin": 141, "originalText": ")", "ArgType": null, "before": " "}, {"index": 33, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 145, "segment_span": [18, 34], "characterOffsetBegin": 143, "originalText": "is", "ArgType": null, "before": " "}, {"index": 34, "word": "nonambiguous", "lemma": "nonambiguous", "after": " ", "pos": "JJ", "characterOffsetEnd": 158, "segment_span": [18, 34], "characterOffsetBegin": 146, "originalText": "nonambiguous", "ArgType": null, "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 160, "characterOffsetBegin": 159, "originalText": ".", "ArgType": null, "before": " "}], "text": "Therefore , in order to check a given transducer T for exactness , it must be the case that for each of the constraints C , is_exact ( T , C ) is nonambiguous ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 7], "characterOffsetBegin": 3, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 7], "characterOffsetBegin": 5, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 4, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 7], "characterOffsetBegin": 16, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 18, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 24, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "not", "ArgType": null, "before": " "}, {"index": 7, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 30, "segment_span": [0, 7], "characterOffsetBegin": 25, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 32, "segment_span": [7, 15], "characterOffsetBegin": 31, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 35, "segment_span": [7, 15], "characterOffsetBegin": 33, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 10, "word": "characterize", "lemma": "characterize", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 48, "segment_span": [7, 15], "tense": "P", "characterOffsetBegin": 36, "originalText": "characterize", "ArgType": "verb", "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [7, 15], "characterOffsetBegin": 49, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "quality", "lemma": "quality", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [7, 15], "characterOffsetBegin": 53, "originalText": "quality", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [7, 15], "characterOffsetBegin": 61, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 67, "segment_span": [7, 15], "characterOffsetBegin": 64, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "approximation", "lemma": "approximation", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [7, 15], "characterOffsetBegin": 68, "originalText": "approximation", "ArgType": null, "before": " "}, {"index": 16, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [15, 23], "characterOffsetBegin": 82, "originalText": "by", "ArgType": null, "before": " "}, {"index": 17, "word": "considering", "lemma": "consider", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 96, "segment_span": [15, 23], "tense": "G", "characterOffsetBegin": 85, "originalText": "considering", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [15, 23], "characterOffsetBegin": 97, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "maximum", "lemma": "maximum", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [15, 23], "characterOffsetBegin": 101, "originalText": "maximum", "ArgType": null, "before": " "}, {"index": 20, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [15, 23], "characterOffsetBegin": 109, "originalText": "length", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [15, 23], "characterOffsetBegin": 116, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [15, 23], "characterOffsetBegin": 119, "originalText": "input", "ArgType": null, "before": " "}, {"index": 23, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 132, "segment_span": [15, 23], "characterOffsetBegin": 125, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 24, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [23, 28], "characterOffsetBegin": 133, "originalText": "for", "ArgType": null, "before": " "}, {"index": 25, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 142, "segment_span": [23, 28], "characterOffsetBegin": 137, "originalText": "which", "ArgType": null, "before": " "}, {"index": 26, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 144, "segment_span": [23, 28], "characterOffsetBegin": 143, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 27, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 147, "segment_span": [23, 28], "characterOffsetBegin": 145, "originalText": "is", "ArgType": null, "before": " "}, {"index": 28, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 153, "segment_span": [23, 28], "characterOffsetBegin": 148, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 155, "characterOffsetBegin": 154, "originalText": ".", "ArgType": null, "before": " "}], "text": "If a transducer T is not exact , we characterize the quality of the approximation by considering the maximum length of input strings for which T is exact ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 16], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 16], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 18, "segment_span": [3, 10], "characterOffsetBegin": 14, "originalText": "even", "ArgType": null, "before": " "}, {"index": 5, "word": "though", "lemma": "though", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [3, 10], "characterOffsetBegin": 19, "originalText": "though", "ArgType": null, "before": " "}, {"index": 6, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [3, 10], "characterOffsetBegin": 26, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 7, "word": "fails", "lemma": "fail", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 33, "segment_span": [3, 10], "tense": "Z", "characterOffsetBegin": 28, "originalText": "fails", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 37, "segment_span": [3, 10], "characterOffsetBegin": 34, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "exactness", "lemma": "exactness", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [3, 10], "characterOffsetBegin": 38, "originalText": "exactness", "ArgType": null, "before": " "}, {"index": 10, "word": "check", "lemma": "check", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [3, 10], "characterOffsetBegin": 48, "originalText": "check", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 55, "segment_span": [0, 16], "characterOffsetBegin": 54, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 58, "segment_span": [0, 16], "characterOffsetBegin": 56, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 13, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 64, "segment_span": [0, 16], "characterOffsetBegin": 59, "originalText": "might", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 67, "segment_span": [0, 16], "characterOffsetBegin": 65, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [0, 16], "characterOffsetBegin": 68, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [0, 16], "has_aux": true, "characterOffsetBegin": 72, "originalText": "case", "ArgType": "verb", "before": " "}, {"index": 17, "word": "that", "lemma": "that", "after": "  ", "pos": "WDT", "characterOffsetEnd": 81, "segment_span": [16, 24], "characterOffsetBegin": 77, "originalText": "that", "ArgType": null, "before": " "}, {"index": 18, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [16, 24], "characterOffsetBegin": 83, "originalText": "equation", "ArgType": "subj", "before": "  "}, {"index": 19, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [16, 24], "characterOffsetBegin": 93, "originalText": "in", "ArgType": null, "before": "  "}, {"index": 20, "word": "fact", "lemma": "fact", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [16, 24], "characterOffsetBegin": 96, "originalText": "fact", "ArgType": null, "before": " "}, {"index": 21, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 103, "segment_span": [16, 24], "characterOffsetBegin": 101, "originalText": "is", "ArgType": null, "before": " "}, {"index": 22, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [16, 24], "characterOffsetBegin": 104, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 111, "segment_span": [16, 24], "characterOffsetBegin": 110, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "indicating", "lemma": "indicate", "after": " ", "pos": "VBG", "characterOffsetEnd": 122, "segment_span": [16, 24], "characterOffsetBegin": 112, "originalText": "indicating", "ArgType": null, "before": " "}, {"index": 25, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 127, "segment_span": [24, 36], "characterOffsetBegin": 123, "originalText": "that", "ArgType": null, "before": " "}, {"index": 26, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 129, "segment_span": [24, 36], "characterOffsetBegin": 128, "originalText": "T", "ArgType": "subj", "before": " "}, {"index": 27, "word": "produces", "lemma": "produce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 138, "segment_span": [24, 36], "tense": "Z", "characterOffsetBegin": 130, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 142, "segment_span": [24, 36], "characterOffsetBegin": 139, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "correct", "lemma": "correct", "after": " ", "pos": "JJ", "characterOffsetEnd": 150, "segment_span": [24, 36], "characterOffsetBegin": 143, "originalText": "correct", "ArgType": null, "before": " "}, {"index": 30, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [24, 36], "characterOffsetBegin": 151, "originalText": "result", "ArgType": "dobj", "before": " "}, {"index": 31, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 161, "segment_span": [24, 36], "characterOffsetBegin": 158, "originalText": "for", "ArgType": null, "before": " "}, {"index": 32, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 165, "segment_span": [24, 36], "characterOffsetBegin": 162, "originalText": "all", "ArgType": null, "before": " "}, {"index": 33, "word": "inputs", "lemma": "input", "after": " ", "pos": "NNS", "characterOffsetEnd": 172, "segment_span": [24, 36], "characterOffsetBegin": 166, "originalText": "inputs", "ArgType": null, "before": " "}, {"index": 34, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 175, "segment_span": [24, 36], "characterOffsetBegin": 173, "originalText": "of", "ArgType": null, "before": " "}, {"index": 35, "word": "length", "lemma": "length", "after": "  ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [24, 36], "characterOffsetBegin": 176, "originalText": "length", "ArgType": null, "before": " "}, {"index": 36, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 192, "segment_span": [24, 36], "characterOffsetBegin": 184, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 37, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 195, "characterOffsetBegin": 194, "originalText": ".", "ArgType": null, "before": "  "}], "text": "For example , even though T fails the exactness check , it might be the case that equation in fact is exact , indicating that T produces the correct result for all inputs of length equation ."}, {"tokens": [{"index": 1, "word": "Suppose", "lemma": "suppose", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Suppose", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 10, "segment_span": [1, 8], "characterOffsetBegin": 8, "originalText": "we", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 14, "segment_span": [1, 8], "characterOffsetBegin": 11, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "given", "is_pass": true, "lemma": "give", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 20, "segment_span": [1, 8], "tense": "N", "characterOffsetBegin": 15, "originalText": "given", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [1, 8], "characterOffsetBegin": 21, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [1, 8], "characterOffsetBegin": 25, "originalText": "sequence", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [1, 8], "characterOffsetBegin": 34, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [1, 8], "characterOffsetBegin": 37, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 50, "characterOffsetBegin": 49, "originalText": ":", "ArgType": null, "before": " "}], "text": "Suppose we are given the sequence of constraints :"}, {"tokens": [{"index": 1, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "and", "ArgType": null, "before": ""}, {"index": 2, "word": "suppose", "lemma": "suppose", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 3], "tense": "B", "characterOffsetBegin": 4, "originalText": "suppose", "ArgType": null, "before": " "}, {"index": 3, "word": "furthermore", "lemma": "furthermore", "after": " ", "pos": "RB", "characterOffsetEnd": 23, "segment_span": [0, 3], "characterOffsetBegin": 12, "originalText": "furthermore", "ArgType": null, "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [3, 6], "characterOffsetBegin": 24, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 31, "segment_span": [3, 6], "characterOffsetBegin": 29, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "require", "lemma": "require", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 39, "segment_span": [3, 6], "tense": "P", "characterOffsetBegin": 32, "originalText": "require", "ArgType": null, "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [6, 24], "characterOffsetBegin": 40, "originalText": "that", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 48, "segment_span": [6, 24], "characterOffsetBegin": 45, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [6, 24], "characterOffsetBegin": 49, "originalText": "implementation", "ArgType": "subj", "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 65, "segment_span": [6, 24], "characterOffsetBegin": 64, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 71, "segment_span": [6, 24], "tense": "G", "characterOffsetBegin": 66, "originalText": "using", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [6, 24], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 84, "segment_span": [6, 24], "characterOffsetBegin": 76, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 14, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [6, 24], "characterOffsetBegin": 85, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 95, "segment_span": [6, 24], "characterOffsetBegin": 94, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 100, "segment_span": [6, 24], "characterOffsetBegin": 96, "originalText": "must", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 103, "segment_span": [6, 24], "characterOffsetBegin": 101, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [6, 24], "has_aux": true, "characterOffsetBegin": 104, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 19, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [6, 24], "characterOffsetBegin": 110, "originalText": "for", "ArgType": null, "before": " "}, {"index": 20, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 117, "segment_span": [6, 24], "characterOffsetBegin": 114, "originalText": "all", "ArgType": null, "before": " "}, {"index": 21, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 125, "segment_span": [6, 24], "characterOffsetBegin": 118, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 128, "segment_span": [6, 24], "characterOffsetBegin": 126, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "length", "lemma": "length", "after": "  ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [6, 24], "characterOffsetBegin": 129, "originalText": "length", "ArgType": null, "before": " "}, {"index": 24, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [6, 24], "characterOffsetBegin": 137, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 148, "characterOffsetBegin": 147, "originalText": ".", "ArgType": null, "before": "  "}], "text": "and suppose furthermore that we require that the implementation , using the counting approach , must be exact for all strings of length equation ."}, {"tokens": [{"index": 1, "word": "How", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "How", "ArgType": null, "before": ""}, {"index": 2, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 7, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "can", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 10, "segment_span": [0, 13], "characterOffsetBegin": 8, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "determine", "lemma": "determine", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 13], "tense": "B", "characterOffsetBegin": 11, "originalText": "determine", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 13], "characterOffsetBegin": 21, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "level", "lemma": "level", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 13], "characterOffsetBegin": 25, "originalText": "level", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 33, "segment_span": [0, 13], "characterOffsetBegin": 31, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 13], "characterOffsetBegin": 34, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [0, 13], "characterOffsetBegin": 44, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [0, 13], "characterOffsetBegin": 48, "originalText": "each", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [0, 13], "characterOffsetBegin": 53, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [0, 13], "characterOffsetBegin": 56, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "constraints", "lemma": "constraint", "after": "", "pos": "NNS", "characterOffsetEnd": 71, "segment_span": [0, 13], "characterOffsetBegin": 60, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 14, "word": "?", "lemma": "?", "after": "", "pos": ".", "characterOffsetEnd": 72, "characterOffsetBegin": 71, "originalText": "?", "ArgType": null, "before": ""}], "text": "How can we determine the level of precision for each of the constraints ?"}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 14], "characterOffsetBegin": 2, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 3, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 14], "characterOffsetBegin": 9, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 20, "segment_span": [0, 14], "characterOffsetBegin": 19, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 26, "segment_span": [0, 14], "characterOffsetBegin": 21, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 6, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 31, "segment_span": [0, 14], "characterOffsetBegin": 27, "originalText": "does", "ArgType": null, "before": " "}, {"index": 7, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 35, "segment_span": [0, 14], "characterOffsetBegin": 32, "originalText": "not", "ArgType": null, "before": " "}, {"index": 8, "word": "necessarily", "lemma": "necessarily", "after": " ", "pos": "RB", "characterOffsetEnd": 47, "segment_span": [0, 14], "characterOffsetBegin": 36, "originalText": "necessarily", "ArgType": null, "before": " "}, {"index": 9, "word": "produce", "lemma": "produce", "after": " ", "pos": "VB", "characterOffsetEnd": 55, "segment_span": [0, 14], "characterOffsetBegin": 48, "originalText": "produce", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [0, 14], "characterOffsetBegin": 56, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "smallest", "lemma": "smallest", "after": " ", "pos": "JJS", "characterOffsetEnd": 68, "segment_span": [0, 14], "characterOffsetBegin": 60, "originalText": "smallest", "ArgType": null, "before": " "}, {"index": 12, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 14], "characterOffsetBegin": 69, "originalText": "transducer", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 81, "segment_span": [0, 14], "characterOffsetBegin": 80, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "proceeds", "lemma": "proceed", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 90, "segment_span": [0, 14], "tense": "Z", "characterOffsetBegin": 82, "originalText": "proceeds", "ArgType": "verb", "before": " "}, {"index": 15, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 93, "segment_span": [14, 16], "characterOffsetBegin": 91, "originalText": "as", "ArgType": null, "before": " "}, {"index": 16, "word": "follows", "lemma": "follow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 101, "segment_span": [14, 16], "tense": "Z", "characterOffsetBegin": 94, "originalText": "follows", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 103, "characterOffsetBegin": 102, "originalText": ".", "ArgType": null, "before": " "}], "text": "A simple algorithm ( which does not necessarily produce the smallest transducer ) proceeds as follows ."}, {"tokens": [{"index": 1, "word": "Firstly", "lemma": "firstly", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "Firstly", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 26], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 12, "segment_span": [0, 26], "characterOffsetBegin": 10, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "determine", "lemma": "determine", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 26], "tense": "P", "characterOffsetBegin": 13, "originalText": "determine", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 26], "characterOffsetBegin": 23, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 26], "characterOffsetBegin": 27, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [0, 26], "characterOffsetBegin": 37, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 43, "segment_span": [0, 26], "characterOffsetBegin": 40, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 49, "segment_span": [0, 26], "characterOffsetBegin": 44, "originalText": "first", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 51, "segment_span": [0, 26], "characterOffsetBegin": 50, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "most", "lemma": "most", "after": " ", "pos": "RBS", "characterOffsetEnd": 56, "segment_span": [0, 26], "characterOffsetBegin": 52, "originalText": "most", "ArgType": null, "before": " "}, {"index": 12, "word": "important", "lemma": "important", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [0, 26], "characterOffsetBegin": 57, "originalText": "important", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 68, "segment_span": [0, 26], "characterOffsetBegin": 67, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 26], "characterOffsetBegin": 69, "originalText": "constraint", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [0, 26], "characterOffsetBegin": 80, "originalText": "by", "ArgType": null, "before": " "}, {"index": 16, "word": "checking", "lemma": "check", "after": " ", "pos": "VBG", "characterOffsetEnd": 91, "segment_span": [0, 26], "characterOffsetBegin": 83, "originalText": "checking", "ArgType": null, "before": " "}, {"index": 17, "word": "exactness", "lemma": "exactness", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 26], "characterOffsetBegin": 92, "originalText": "exactness", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 105, "segment_span": [0, 26], "characterOffsetBegin": 102, "originalText": "for", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [0, 26], "characterOffsetBegin": 106, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "transducer", "lemma": "transducer", "after": "  ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [0, 26], "characterOffsetBegin": 110, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 21, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [0, 26], "characterOffsetBegin": 122, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 22, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [0, 26], "characterOffsetBegin": 132, "originalText": "for", "ArgType": null, "before": "  "}, {"index": 23, "word": "increasing", "lemma": "increase", "after": " ", "pos": "VBG", "characterOffsetEnd": 146, "segment_span": [0, 26], "characterOffsetBegin": 136, "originalText": "increasing", "ArgType": null, "before": " "}, {"index": 24, "word": "values", "lemma": "value", "after": " ", "pos": "NNS", "characterOffsetEnd": 153, "segment_span": [0, 26], "characterOffsetBegin": 147, "originalText": "values", "ArgType": null, "before": " "}, {"index": 25, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 157, "segment_span": [0, 26], "characterOffsetBegin": 154, "originalText": "for", "ArgType": null, "before": " "}, {"index": 26, "word": "P", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 159, "segment_span": [0, 26], "characterOffsetBegin": 158, "originalText": "P", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 161, "characterOffsetBegin": 160, "originalText": ".", "ArgType": null, "before": " "}], "text": "Firstly , we determine the precision of the first , most important , constraint by checking exactness for the transducer equation for increasing values for P ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 2, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "soon", "lemma": "soon", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 2], "characterOffsetBegin": 3, "originalText": "soon", "ArgType": null, "before": " "}, {"index": 3, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 10, "segment_span": [2, 8], "characterOffsetBegin": 8, "originalText": "as", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 13, "segment_span": [2, 8], "characterOffsetBegin": 11, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "find", "lemma": "find", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 18, "segment_span": [2, 8], "tense": "P", "characterOffsetBegin": 14, "originalText": "find", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [2, 8], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "minimal", "lemma": "minimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 30, "segment_span": [2, 8], "characterOffsetBegin": 23, "originalText": "minimal", "ArgType": null, "before": " "}, {"index": 8, "word": "P", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [2, 8], "characterOffsetBegin": 31, "originalText": "P", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [8, 45], "characterOffsetBegin": 33, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 42, "segment_span": [8, 45], "characterOffsetBegin": 37, "originalText": "which", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 46, "segment_span": [8, 45], "characterOffsetBegin": 43, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "exactness", "lemma": "exactness", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [8, 45], "characterOffsetBegin": 47, "originalText": "exactness", "ArgType": null, "before": " "}, {"index": 13, "word": "check", "lemma": "check", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [8, 45], "characterOffsetBegin": 57, "originalText": "check", "ArgType": "subj", "before": " "}, {"index": 14, "word": "succeeds", "lemma": "succeed", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 71, "segment_span": [8, 45], "tense": "Z", "characterOffsetBegin": 63, "originalText": "succeeds", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 73, "segment_span": [8, 45], "characterOffsetBegin": 72, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [8, 45], "characterOffsetBegin": 74, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [8, 45], "characterOffsetBegin": 77, "originalText": "this", "ArgType": null, "before": " "}, {"index": 18, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [8, 45], "characterOffsetBegin": 82, "originalText": "case", "ArgType": null, "before": " "}, {"index": 19, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 90, "segment_span": [8, 45], "characterOffsetBegin": 87, "originalText": "for", "ArgType": null, "before": " "}, {"index": 20, "word": "P", "lemma": "p", "after": "", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [8, 45], "characterOffsetBegin": 91, "originalText": "P", "ArgType": null, "before": " "}, {"index": 21, "word": "=", "lemma": "=", "after": "", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [8, 45], "characterOffsetBegin": 92, "originalText": "=", "ArgType": null, "before": ""}, {"index": 22, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 94, "segment_span": [8, 45], "characterOffsetBegin": 93, "originalText": "0", "ArgType": null, "before": ""}, {"index": 23, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 96, "segment_span": [8, 45], "characterOffsetBegin": 95, "originalText": ")", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [8, 45], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": " "}, {"index": 25, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 101, "segment_span": [8, 45], "characterOffsetBegin": 99, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 26, "word": "continue", "lemma": "continue", "after": " ", "pos": "VBP", "characterOffsetEnd": 110, "segment_span": [8, 45], "characterOffsetBegin": 102, "originalText": "continue", "ArgType": null, "before": " "}, {"index": 27, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [26, 35], "characterOffsetBegin": 111, "originalText": "by", "ArgType": null, "before": " "}, {"index": 28, "word": "determining", "lemma": "determine", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 125, "segment_span": [26, 35], "tense": "G", "characterOffsetBegin": 114, "originalText": "determining", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 129, "segment_span": [26, 35], "characterOffsetBegin": 126, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [26, 35], "characterOffsetBegin": 130, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 31, "word": "required", "lemma": "require", "after": " ", "pos": "VBN", "characterOffsetEnd": 148, "segment_span": [26, 35], "characterOffsetBegin": 140, "originalText": "required", "ArgType": null, "before": " "}, {"index": 32, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 152, "segment_span": [26, 35], "characterOffsetBegin": 149, "originalText": "for", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 156, "segment_span": [26, 35], "characterOffsetBegin": 153, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "next", "lemma": "next", "after": " ", "pos": "JJ", "characterOffsetEnd": 161, "segment_span": [26, 35], "characterOffsetBegin": 157, "originalText": "next", "ArgType": null, "before": " "}, {"index": 35, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [26, 35], "characterOffsetBegin": 162, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 36, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 175, "segment_span": [35, 43], "characterOffsetBegin": 173, "originalText": "by", "ArgType": null, "before": " "}, {"index": 37, "word": "finding", "lemma": "find", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 183, "segment_span": [35, 43], "tense": "G", "characterOffsetBegin": 176, "originalText": "finding", "ArgType": null, "before": " "}, {"index": 38, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 187, "segment_span": [35, 43], "characterOffsetBegin": 184, "originalText": "the", "ArgType": null, "before": " "}, {"index": 39, "word": "minimal", "lemma": "minimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 195, "segment_span": [35, 43], "characterOffsetBegin": 188, "originalText": "minimal", "ArgType": null, "before": " "}, {"index": 40, "word": "value", "lemma": "value", "after": " ", "pos": "NN", "characterOffsetEnd": 201, "segment_span": [35, 43], "characterOffsetBegin": 196, "originalText": "value", "ArgType": "dobj", "before": " "}, {"index": 41, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 204, "segment_span": [35, 43], "characterOffsetBegin": 202, "originalText": "of", "ArgType": null, "before": " "}, {"index": 42, "word": "P", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [35, 43], "characterOffsetBegin": 205, "originalText": "P", "ArgType": null, "before": " "}, {"index": 43, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 209, "segment_span": [35, 43], "characterOffsetBegin": 207, "originalText": "in", "ArgType": null, "before": " "}, {"index": 44, "word": ":", "lemma": ":", "after": "  ", "pos": ":", "characterOffsetEnd": 211, "segment_span": [8, 45], "characterOffsetBegin": 210, "originalText": ":", "ArgType": null, "before": " "}, {"index": 45, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 221, "segment_span": [8, 45], "characterOffsetBegin": 213, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 46, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 225, "segment_span": [45, 50], "characterOffsetBegin": 223, "originalText": "We", "ArgType": "subj", "before": "  "}, {"index": 47, "word": "continue", "lemma": "continue", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 234, "segment_span": [45, 50], "tense": "P", "characterOffsetBegin": 226, "originalText": "continue", "ArgType": null, "before": " "}, {"index": 48, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 237, "segment_span": [45, 50], "characterOffsetBegin": 235, "originalText": "in", "ArgType": null, "before": " "}, {"index": 49, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 242, "segment_span": [45, 50], "characterOffsetBegin": 238, "originalText": "this", "ArgType": null, "before": " "}, {"index": 50, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 246, "segment_span": [45, 50], "characterOffsetBegin": 243, "originalText": "way", "ArgType": null, "before": " "}, {"index": 51, "word": "until", "lemma": "until", "after": " ", "pos": "IN", "characterOffsetEnd": 252, "segment_span": [50, 61], "characterOffsetBegin": 247, "originalText": "until", "ArgType": null, "before": " "}, {"index": 52, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 255, "segment_span": [50, 61], "characterOffsetBegin": 253, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 53, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 260, "segment_span": [50, 61], "characterOffsetBegin": 256, "originalText": "have", "ArgType": null, "before": " "}, {"index": 54, "word": "determined", "lemma": "determine", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 271, "segment_span": [50, 61], "tense": "N", "characterOffsetBegin": 261, "originalText": "determined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 55, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 281, "segment_span": [50, 61], "characterOffsetBegin": 272, "originalText": "precision", "ArgType": null, "before": " "}, {"index": 56, "word": "values", "lemma": "value", "after": " ", "pos": "NNS", "characterOffsetEnd": 288, "segment_span": [50, 61], "characterOffsetBegin": 282, "originalText": "values", "ArgType": "dobj", "before": " "}, {"index": 57, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 292, "segment_span": [50, 61], "characterOffsetBegin": 289, "originalText": "for", "ArgType": null, "before": " "}, {"index": 58, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 297, "segment_span": [50, 61], "characterOffsetBegin": 293, "originalText": "each", "ArgType": null, "before": " "}, {"index": 59, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 300, "segment_span": [50, 61], "characterOffsetBegin": 298, "originalText": "of", "ArgType": null, "before": " "}, {"index": 60, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 304, "segment_span": [50, 61], "characterOffsetBegin": 301, "originalText": "the", "ArgType": null, "before": " "}, {"index": 61, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 316, "segment_span": [50, 61], "characterOffsetBegin": 305, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 62, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 318, "characterOffsetBegin": 317, "originalText": ".", "ArgType": null, "before": " "}], "text": "As soon as we find the minimal P for which the exactness check succeeds ( in this case for P = 0 ) , we continue by determining the precision required for the next constraint by finding the minimal value of P in : equation We continue in this way until we have determined precision values for each of the constraints ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 11], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 11], "characterOffsetBegin": 8, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 13, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "obtain", "lemma": "obtain", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 16, "originalText": "obtain", "ArgType": "verb", "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "transducer", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 36, "originalText": "with", "ArgType": null, "before": " "}, {"index": 9, "word": "8269", "lemma": "8269", "after": " ", "pos": "CD", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "8269", "ArgType": null, "before": " "}, {"index": 10, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "states", "ArgType": null, "before": " "}, {"index": 11, "word": "implementing", "lemma": "implement", "after": " ", "pos": "VBG", "characterOffsetEnd": 65, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "implementing", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ":", "ArgType": null, "before": " "}], "text": "In this case we obtain a transducer with 8269 states implementing :"}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "contrast", "lemma": "contrast", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 20], "characterOffsetBegin": 3, "originalText": "contrast", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 20], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 19, "segment_span": [0, 20], "characterOffsetBegin": 14, "originalText": "using", "ArgType": null, "before": " "}, {"index": 5, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 28, "segment_span": [0, 20], "characterOffsetBegin": 20, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 6, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 20], "characterOffsetBegin": 29, "originalText": "an", "ArgType": null, "before": " "}, {"index": 7, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 20], "characterOffsetBegin": 32, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 8, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 20], "characterOffsetBegin": 38, "originalText": "implementation", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 55, "segment_span": [0, 20], "characterOffsetBegin": 53, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "obtained", "is_pass": true, "lemma": "obtain", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 64, "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 56, "originalText": "obtained", "ArgType": null, "before": " "}, {"index": 11, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 70, "segment_span": [0, 20], "characterOffsetBegin": 65, "originalText": "using", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 72, "segment_span": [0, 20], "characterOffsetBegin": 71, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 20], "characterOffsetBegin": 73, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [0, 20], "characterOffsetBegin": 83, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 87, "segment_span": [0, 20], "characterOffsetBegin": 86, "originalText": "1", "ArgType": null, "before": " "}, {"index": 16, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [0, 20], "characterOffsetBegin": 88, "originalText": "for", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 95, "segment_span": [0, 20], "characterOffsetBegin": 92, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "fill_nuc", "lemma": "fill_nuc", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [0, 20], "characterOffsetBegin": 96, "originalText": "fill_nuc", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [0, 20], "characterOffsetBegin": 105, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 20, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 117, "segment_span": [0, 20], "characterOffsetBegin": 116, "originalText": ";", "ArgType": null, "before": " "}, {"index": 21, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 121, "segment_span": [20, 28], "characterOffsetBegin": 118, "originalText": "all", "ArgType": null, "before": " "}, {"index": 22, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 127, "segment_span": [20, 28], "characterOffsetBegin": 122, "originalText": "other", "ArgType": null, "before": " "}, {"index": 23, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 139, "segment_span": [20, 28], "characterOffsetBegin": 128, "originalText": "constraints", "ArgType": "subj", "before": " "}, {"index": 24, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 144, "segment_span": [20, 28], "tense": "P", "characterOffsetBegin": 140, "originalText": "have", "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 146, "segment_span": [20, 28], "characterOffsetBegin": 145, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "precision", "lemma": "precision", "after": " ", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [20, 28], "characterOffsetBegin": 147, "originalText": "precision", "ArgType": "dobj", "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 159, "segment_span": [20, 28], "characterOffsetBegin": 157, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 161, "segment_span": [20, 28], "characterOffsetBegin": 160, "originalText": "0", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 163, "characterOffsetBegin": 162, "originalText": ".", "ArgType": null, "before": " "}], "text": "In contrast , using matching an exact implementation is obtained using a precision of 1 for the fill_nuc constraint ; all other constraints have a precision of 0 ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 6], "characterOffsetBegin": 5, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 3, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 6], "tense": "Z", "characterOffsetBegin": 16, "originalText": "contains", "ArgType": "verb", "before": " "}, {"index": 4, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 29, "segment_span": [0, 6], "characterOffsetBegin": 25, "originalText": "only", "ArgType": null, "before": " "}, {"index": 5, "word": "28", "lemma": "28", "after": " ", "pos": "CD", "characterOffsetEnd": 32, "segment_span": [0, 6], "characterOffsetBegin": 30, "originalText": "28", "ArgType": null, "before": " "}, {"index": 6, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 39, "segment_span": [0, 6], "characterOffsetBegin": 33, "originalText": "states", "ArgType": "dobj", "before": " "}, {"index": 7, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 41, "characterOffsetBegin": 40, "originalText": ".", "ArgType": null, "before": " "}], "text": "This transducer contains only 28 states ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "assumption", "lemma": "assumption", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "assumption", "ArgType": "subj", "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [0, 13], "characterOffsetBegin": 15, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 20, "segment_span": [0, 13], "characterOffsetBegin": 18, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 23, "segment_span": [0, 13], "tense": "Z", "characterOffsetBegin": 21, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [5, 12], "characterOffsetBegin": 24, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [5, 12], "characterOffsetBegin": 29, "originalText": "each", "ArgType": "subj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [5, 12], "characterOffsetBegin": 34, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 40, "segment_span": [5, 12], "characterOffsetBegin": 37, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 52, "segment_span": [5, 12], "characterOffsetBegin": 41, "originalText": "constraints", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 55, "segment_span": [5, 12], "characterOffsetBegin": 53, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "universal", "lemma": "universal", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [5, 12], "characterOffsetBegin": 56, "originalText": "universal", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 67, "segment_span": [0, 13], "characterOffsetBegin": 66, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "whereas", "lemma": "whereas", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [13, 22], "characterOffsetBegin": 68, "originalText": "whereas", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [13, 22], "characterOffsetBegin": 76, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [13, 22], "characterOffsetBegin": 80, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 17, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [13, 22], "characterOffsetBegin": 91, "originalText": "order", "ArgType": "subj", "before": " "}, {"index": 18, "word": "differs", "lemma": "differ", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 104, "segment_span": [13, 22], "tense": "Z", "characterOffsetBegin": 97, "originalText": "differs", "ArgType": null, "before": " "}, {"index": 19, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [13, 22], "characterOffsetBegin": 105, "originalText": "from", "ArgType": null, "before": " "}, {"index": 20, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [13, 22], "characterOffsetBegin": 110, "originalText": "language", "ArgType": null, "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 121, "segment_span": [13, 22], "characterOffsetBegin": 119, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [13, 22], "characterOffsetBegin": 122, "originalText": "language", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 132, "characterOffsetBegin": 131, "originalText": ".", "ArgType": null, "before": " "}], "text": "The assumption in OT is that each of the constraints is universal , whereas the constraint order differs from language to language ."}, {"tokens": [{"index": 1, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 6, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "Prince", "ArgType": "subj", "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 8, "segment_span": [0, 15], "characterOffsetBegin": 7, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 12, "segment_span": [0, 15], "characterOffsetBegin": 8, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 13, "segment_span": [0, 15], "characterOffsetBegin": 12, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 18, "segment_span": [0, 15], "characterOffsetBegin": 15, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 6, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 29, "segment_span": [0, 15], "characterOffsetBegin": 20, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 31, "segment_span": [0, 15], "characterOffsetBegin": 30, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 35, "segment_span": [0, 15], "characterOffsetBegin": 31, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 36, "segment_span": [0, 15], "characterOffsetBegin": 35, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": "identify", "lemma": "identify", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 15], "tense": "P", "characterOffsetBegin": 38, "originalText": "identify", "ArgType": "verb", "before": "  "}, {"index": 11, "word": "nine", "lemma": "nine", "after": " ", "pos": "CD", "characterOffsetEnd": 51, "segment_span": [0, 15], "characterOffsetBegin": 47, "originalText": "nine", "ArgType": null, "before": " "}, {"index": 12, "word": "interestingly", "lemma": "interestingly", "after": " ", "pos": "RB", "characterOffsetEnd": 65, "segment_span": [0, 15], "characterOffsetBegin": 52, "originalText": "interestingly", "ArgType": null, "before": " "}, {"index": 13, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 75, "segment_span": [0, 15], "characterOffsetBegin": 66, "originalText": "different", "ArgType": null, "before": " "}, {"index": 14, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 15], "characterOffsetBegin": 76, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 15, "word": "orderings", "lemma": "ordering", "after": " ", "pos": "NNS", "characterOffsetEnd": 96, "segment_span": [0, 15], "characterOffsetBegin": 87, "originalText": "orderings", "ArgType": "dobj", "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 98, "characterOffsetBegin": 97, "originalText": ".", "ArgType": null, "before": " "}], "text": "Prince ( 0000 ) and Smolensky ( 0000 ) identify nine interestingly different constraint orderings ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 5, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "These", "ArgType": null, "before": ""}, {"index": 2, "word": "nine", "lemma": "nine", "after": " ", "pos": "CD", "characterOffsetEnd": 10, "segment_span": [0, 10], "characterOffsetBegin": 6, "originalText": "nine", "ArgType": null, "before": " "}, {"index": 3, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 11, "originalText": "``", "ArgType": null, "before": " "}, {"index": 4, "word": "languages", "lemma": "language", "after": " ", "pos": "NNS", "characterOffsetEnd": 23, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "languages", "ArgType": null, "before": " "}, {"index": 5, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 26, "segment_span": [0, 10], "characterOffsetBegin": 24, "originalText": "''", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 30, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "presented", "is_pass": true, "lemma": "present", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 40, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 31, "originalText": "presented", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 43, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "table", "lemma": "table", "after": "  ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 10], "characterOffsetBegin": 44, "originalText": "table", "ArgType": null, "before": " "}, {"index": 10, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 55, "segment_span": [0, 10], "characterOffsetBegin": 51, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 58, "characterOffsetBegin": 57, "originalText": ".", "ArgType": null, "before": "  "}], "text": "These nine `` languages '' are presented in table CREF ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 28], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "table", "lemma": "table", "after": "  ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 28], "characterOffsetBegin": 3, "originalText": "table", "ArgType": null, "before": " "}, {"index": 3, "word": "CREF", "lemma": "cref", "after": "  ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 28], "characterOffsetBegin": 10, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [0, 28], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": "  "}, {"index": 5, "word": "compare", "lemma": "compare", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 28], "tense": "P", "characterOffsetBegin": 19, "originalText": "compare", "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 28], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "size", "lemma": "size", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 28], "characterOffsetBegin": 31, "originalText": "size", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [0, 28], "characterOffsetBegin": 36, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 42, "segment_span": [0, 28], "characterOffsetBegin": 39, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 52, "segment_span": [0, 28], "characterOffsetBegin": 43, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 11, "word": "automata", "lemma": "automata", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 28], "characterOffsetBegin": 53, "originalText": "automata", "ArgType": null, "before": " "}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [0, 28], "characterOffsetBegin": 62, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 28], "characterOffsetBegin": 66, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [0, 28], "characterOffsetBegin": 70, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 15, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 28], "characterOffsetBegin": 79, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 89, "segment_span": [0, 28], "characterOffsetBegin": 88, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 92, "segment_span": [0, 28], "characterOffsetBegin": 90, "originalText": "as", "ArgType": null, "before": " "}, {"index": 18, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 97, "segment_span": [0, 28], "characterOffsetBegin": 93, "originalText": "well", "ArgType": null, "before": " "}, {"index": 19, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [0, 28], "characterOffsetBegin": 98, "originalText": "as", "ArgType": null, "before": " "}, {"index": 20, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 104, "segment_span": [0, 28], "characterOffsetBegin": 101, "originalText": "for", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 108, "segment_span": [0, 28], "characterOffsetBegin": 105, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 117, "segment_span": [0, 28], "characterOffsetBegin": 109, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 23, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [0, 28], "characterOffsetBegin": 118, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 128, "segment_span": [0, 28], "characterOffsetBegin": 127, "originalText": ",", "ArgType": null, "before": " "}, {"index": 25, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 132, "segment_span": [0, 28], "characterOffsetBegin": 129, "originalText": "for", "ArgType": null, "before": " "}, {"index": 26, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 138, "segment_span": [0, 28], "characterOffsetBegin": 133, "originalText": "three", "ArgType": null, "before": " "}, {"index": 27, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 148, "segment_span": [0, 28], "characterOffsetBegin": 139, "originalText": "different", "ArgType": null, "before": " "}, {"index": 28, "word": "variants", "lemma": "variant", "after": " ", "pos": "NNS", "characterOffsetEnd": 157, "segment_span": [0, 28], "characterOffsetBegin": 149, "originalText": "variants", "ArgType": null, "before": " "}, {"index": 29, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 163, "segment_span": [28, 31], "characterOffsetBegin": 158, "originalText": "which", "ArgType": null, "before": " "}, {"index": 30, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 167, "segment_span": [28, 31], "characterOffsetBegin": 164, "originalText": "are", "ArgType": null, "before": " "}, {"index": 31, "word": "created", "is_pass": true, "lemma": "create", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 175, "segment_span": [28, 31], "tense": "N", "characterOffsetBegin": 168, "originalText": "created", "ArgType": null, "before": " "}, {"index": 32, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 178, "segment_span": [31, 46], "characterOffsetBegin": 176, "originalText": "in", "ArgType": null, "before": " "}, {"index": 33, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [31, 46], "characterOffsetBegin": 179, "originalText": "order", "ArgType": null, "before": " "}, {"index": 34, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 187, "segment_span": [31, 46], "characterOffsetBegin": 185, "originalText": "to", "ArgType": null, "before": " "}, {"index": 35, "word": "guarantee", "lemma": "guarantee", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 197, "segment_span": [31, 46], "tense": "B", "characterOffsetBegin": 188, "originalText": "guarantee", "ArgType": null, "before": " "}, {"index": 36, "word": "exactness", "lemma": "exactness", "after": " ", "pos": "NN", "characterOffsetEnd": 207, "segment_span": [31, 46], "characterOffsetBegin": 198, "originalText": "exactness", "ArgType": "dobj", "before": " "}, {"index": 37, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 211, "segment_span": [31, 46], "characterOffsetBegin": 208, "originalText": "for", "ArgType": null, "before": " "}, {"index": 38, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 219, "segment_span": [31, 46], "characterOffsetBegin": 212, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 39, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 222, "segment_span": [31, 46], "characterOffsetBegin": 220, "originalText": "of", "ArgType": null, "before": " "}, {"index": 40, "word": "length", "lemma": "length", "after": "  ", "pos": "NN", "characterOffsetEnd": 229, "segment_span": [31, 46], "characterOffsetBegin": 223, "originalText": "length", "ArgType": null, "before": " "}, {"index": 41, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 239, "segment_span": [31, 46], "characterOffsetBegin": 231, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 42, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 242, "segment_span": [31, 46], "characterOffsetBegin": 241, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 43, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 252, "segment_span": [31, 46], "characterOffsetBegin": 244, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 44, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 257, "segment_span": [31, 46], "characterOffsetBegin": 254, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 45, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [31, 46], "characterOffsetBegin": 259, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 46, "word": "respectively", "lemma": "respectively", "after": " ", "pos": "RB", "characterOffsetEnd": 281, "segment_span": [31, 46], "characterOffsetBegin": 269, "originalText": "respectively", "ArgType": null, "before": "  "}, {"index": 47, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 283, "characterOffsetBegin": 282, "originalText": ".", "ArgType": null, "before": " "}], "text": "In table CREF we compare the size of the resulting automata for the matching approach , as well as for the counting approach , for three different variants which are created in order to guarantee exactness for strings of length equation , equation and equation respectively ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 17], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 17], "characterOffsetBegin": 10, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "construction", "lemma": "construction", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 17], "characterOffsetBegin": 14, "originalText": "construction", "ArgType": "subj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 17], "characterOffsetBegin": 27, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 17], "characterOffsetBegin": 30, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 17], "characterOffsetBegin": 34, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 8, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 50, "segment_span": [0, 17], "characterOffsetBegin": 45, "originalText": "using", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 17], "characterOffsetBegin": 51, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [0, 17], "characterOffsetBegin": 55, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 11, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 17], "characterOffsetBegin": 64, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 75, "segment_span": [0, 17], "characterOffsetBegin": 73, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "typically", "lemma": "typically", "after": " ", "pos": "RB", "characterOffsetEnd": 85, "segment_span": [0, 17], "characterOffsetBegin": 76, "originalText": "typically", "ArgType": null, "before": " "}, {"index": 14, "word": "much", "lemma": "much", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [0, 17], "characterOffsetBegin": 86, "originalText": "much", "ArgType": "verb", "before": " "}, {"index": 15, "word": "faster", "lemma": "faster", "after": " ", "pos": "RBR", "characterOffsetEnd": 97, "segment_span": [0, 17], "characterOffsetBegin": 91, "originalText": "faster", "ArgType": null, "before": " "}, {"index": 16, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 100, "segment_span": [0, 17], "characterOffsetBegin": 98, "originalText": "as", "ArgType": null, "before": " "}, {"index": 17, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 105, "segment_span": [0, 17], "characterOffsetBegin": 101, "originalText": "well", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 107, "characterOffsetBegin": 106, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , the construction of the transducer using the matching approach is typically much faster as well ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "table", "lemma": "table", "after": "  ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 7], "characterOffsetBegin": 3, "originalText": "table", "ArgType": null, "before": " "}, {"index": 3, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 14, "segment_span": [0, 7], "characterOffsetBegin": 10, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 4, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 16, "originalText": "some", "ArgType": null, "before": "  "}, {"index": 5, "word": "comparisons", "lemma": "comparison", "after": " ", "pos": "NNS", "characterOffsetEnd": 32, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "comparisons", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 36, "segment_span": [0, 7], "characterOffsetBegin": 33, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "summarized", "is_pass": true, "lemma": "summarize", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 47, "segment_span": [0, 7], "tense": "N", "characterOffsetBegin": 37, "originalText": "summarized", "ArgType": null, "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 49, "characterOffsetBegin": 48, "originalText": ".", "ArgType": null, "before": " "}], "text": "In table CREF some comparisons are summarized ."}]}], "title": "Comparison"}, {"num": 5, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 7, "segment_span": [0, 9], "characterOffsetBegin": 3, "originalText": "have", "ArgType": null, "before": " "}, {"index": 3, "word": "presented", "lemma": "present", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 8, "originalText": "presented", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 9], "characterOffsetBegin": 18, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 23, "segment_span": [0, 9], "characterOffsetBegin": 20, "originalText": "new", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 9], "characterOffsetBegin": 24, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [0, 9], "characterOffsetBegin": 33, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "implementing", "lemma": "implement", "after": " ", "pos": "VBG", "characterOffsetEnd": 49, "segment_span": [0, 9], "characterOffsetBegin": 37, "originalText": "implementing", "ArgType": null, "before": " "}, {"index": 9, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 9], "characterOffsetBegin": 50, "originalText": "OT", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 58, "segment_span": [9, 12], "characterOffsetBegin": 53, "originalText": "which", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 61, "segment_span": [9, 12], "characterOffsetBegin": 59, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "based", "is_pass": true, "lemma": "base", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 67, "segment_span": [9, 12], "tense": "N", "characterOffsetBegin": 62, "originalText": "based", "ArgType": null, "before": " "}, {"index": 13, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [12, 24], "characterOffsetBegin": 68, "originalText": "on", "ArgType": null, "before": " "}, {"index": 14, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 79, "segment_span": [12, 24], "tense": "G", "characterOffsetBegin": 71, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 15, "word": "rather", "lemma": "rather", "after": " ", "pos": "RB", "characterOffsetEnd": 86, "segment_span": [12, 24], "characterOffsetBegin": 80, "originalText": "rather", "ArgType": null, "before": " "}, {"index": 16, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [12, 24], "characterOffsetBegin": 87, "originalText": "than", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 95, "segment_span": [12, 24], "characterOffsetBegin": 92, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 104, "segment_span": [12, 24], "characterOffsetBegin": 96, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 19, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [12, 24], "characterOffsetBegin": 105, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 116, "segment_span": [12, 24], "characterOffsetBegin": 114, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 119, "segment_span": [12, 24], "characterOffsetBegin": 118, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 22, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 129, "segment_span": [12, 24], "characterOffsetBegin": 120, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 23, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 134, "segment_span": [12, 24], "characterOffsetBegin": 130, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 136, "segment_span": [12, 24], "characterOffsetBegin": 135, "originalText": ")", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 139, "characterOffsetBegin": 138, "originalText": ".", "ArgType": null, "before": "  "}], "text": "We have presented a new approach for implementing OT which is based on matching rather than the counting approach of ( Karttunen 1998 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 19], "characterOffsetBegin": 4, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 19], "characterOffsetBegin": 13, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 4, "word": "shares", "lemma": "share", "after": " ", "pos": "NNS", "characterOffsetEnd": 28, "segment_span": [0, 19], "characterOffsetBegin": 22, "originalText": "shares", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 32, "segment_span": [0, 19], "characterOffsetBegin": 29, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "advantages", "lemma": "advantage", "after": " ", "pos": "NNS", "characterOffsetEnd": 43, "segment_span": [0, 19], "characterOffsetBegin": 33, "originalText": "advantages", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 19], "characterOffsetBegin": 44, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 50, "segment_span": [0, 19], "characterOffsetBegin": 47, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 59, "segment_span": [0, 19], "characterOffsetBegin": 51, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 19], "characterOffsetBegin": 60, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [0, 19], "characterOffsetBegin": 69, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [0, 19], "characterOffsetBegin": 72, "originalText": "that", "ArgType": null, "before": " "}, {"index": 13, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 79, "segment_span": [0, 19], "characterOffsetBegin": 77, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 14, "word": "uses", "lemma": "use", "after": " ", "pos": "VBZ", "characterOffsetEnd": 84, "segment_span": [0, 19], "characterOffsetBegin": 80, "originalText": "uses", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [0, 19], "characterOffsetBegin": 85, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 95, "segment_span": [0, 19], "characterOffsetBegin": 89, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 17, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 19], "characterOffsetBegin": 96, "originalText": "state", "ArgType": null, "before": " "}, {"index": 18, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 19], "characterOffsetBegin": 102, "originalText": "calculus", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 114, "segment_span": [0, 19], "characterOffsetBegin": 111, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "avoids", "lemma": "avoid", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 121, "segment_span": [19, 27], "tense": "Z", "characterOffsetBegin": 115, "originalText": "avoids", "ArgType": null, "before": " "}, {"index": 21, "word": "off-line", "lemma": "off-line", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [19, 27], "characterOffsetBegin": 122, "originalText": "off-line", "ArgType": null, "before": " "}, {"index": 22, "word": "sorting", "lemma": "sorting", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [19, 27], "characterOffsetBegin": 131, "originalText": "sorting", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 142, "segment_span": [19, 27], "characterOffsetBegin": 139, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "counting", "lemma": "counting", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [19, 27], "characterOffsetBegin": 143, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 25, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 154, "segment_span": [19, 27], "characterOffsetBegin": 152, "originalText": "of", "ArgType": null, "before": " "}, {"index": 26, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [19, 27], "characterOffsetBegin": 155, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 27, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 176, "segment_span": [19, 27], "characterOffsetBegin": 166, "originalText": "violations", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 178, "characterOffsetBegin": 177, "originalText": ".", "ArgType": null, "before": " "}], "text": "The matching approach shares the advantages of the counting approach in that it uses the finite state calculus and avoids off-line sorting and counting of constraint violations ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 7, "segment_span": [0, 3], "characterOffsetBegin": 3, "originalText": "have", "ArgType": null, "before": " "}, {"index": 3, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 3], "tense": "N", "characterOffsetBegin": 8, "originalText": "shown", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [3, 23], "characterOffsetBegin": 14, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [3, 23], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 31, "segment_span": [3, 23], "characterOffsetBegin": 23, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [3, 23], "characterOffsetBegin": 32, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 43, "segment_span": [3, 23], "characterOffsetBegin": 41, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "superior", "lemma": "superior", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [3, 23], "characterOffsetBegin": 44, "originalText": "superior", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [3, 23], "characterOffsetBegin": 53, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [3, 23], "characterOffsetBegin": 56, "originalText": "that", "ArgType": null, "before": " "}, {"index": 12, "word": "analyses", "lemma": "analysis", "after": " ", "pos": "NNS", "characterOffsetEnd": 69, "segment_span": [3, 23], "characterOffsetBegin": 61, "originalText": "analyses", "ArgType": null, "before": " "}, {"index": 13, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 74, "segment_span": [3, 23], "characterOffsetBegin": 70, "originalText": "that", "ArgType": null, "before": " "}, {"index": 14, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 78, "segment_span": [3, 23], "characterOffsetBegin": 75, "originalText": "can", "ArgType": null, "before": " "}, {"index": 15, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 83, "segment_span": [3, 23], "characterOffsetBegin": 79, "originalText": "only", "ArgType": null, "before": " "}, {"index": 16, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 86, "segment_span": [3, 23], "characterOffsetBegin": 84, "originalText": "be", "ArgType": null, "before": " "}, {"index": 17, "word": "approximated", "is_pass": true, "lemma": "approximate", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 99, "segment_span": [3, 23], "tense": "N", "characterOffsetBegin": 87, "originalText": "approximated", "has_aux": true, "ArgType": null, "before": " "}, {"index": 18, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [3, 23], "characterOffsetBegin": 100, "originalText": "by", "ArgType": null, "before": " "}, {"index": 19, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 111, "segment_span": [3, 23], "characterOffsetBegin": 103, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 20, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 115, "segment_span": [3, 23], "characterOffsetBegin": 112, "originalText": "can", "ArgType": null, "before": " "}, {"index": 21, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 118, "segment_span": [3, 23], "characterOffsetBegin": 116, "originalText": "be", "ArgType": null, "before": " "}, {"index": 22, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 126, "segment_span": [3, 23], "characterOffsetBegin": 119, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 23, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 138, "segment_span": [3, 23], "tense": "N", "characterOffsetBegin": 127, "originalText": "implemented", "has_aux": true, "ArgType": null, "before": " "}, {"index": 24, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [23, 25], "characterOffsetBegin": 139, "originalText": "by", "ArgType": null, "before": " "}, {"index": 25, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 150, "segment_span": [23, 25], "tense": "G", "characterOffsetBegin": 142, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 152, "characterOffsetBegin": 151, "originalText": ".", "ArgType": null, "before": " "}], "text": "We have shown that the matching approach is superior in that analyses that can only be approximated by counting can be exactly implemented by matching ."}, {"tokens": [{"index": 1, "word": "Moreover", "lemma": "moreover", "after": " ", "pos": "RB", "characterOffsetEnd": 8, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Moreover", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 10, "segment_span": [0, 11], "characterOffsetBegin": 9, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [0, 11], "characterOffsetBegin": 11, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "size", "lemma": "size", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 11], "characterOffsetBegin": 15, "originalText": "size", "ArgType": "subj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 27, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 8, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "significantly", "lemma": "significantly", "after": " ", "pos": "RB", "characterOffsetEnd": 65, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "significantly", "ArgType": null, "before": " "}, {"index": 11, "word": "smaller", "lemma": "smaller", "after": " ", "pos": "JJR", "characterOffsetEnd": 73, "segment_span": [0, 11], "characterOffsetBegin": 66, "originalText": "smaller", "ArgType": "verb", "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 75, "characterOffsetBegin": 74, "originalText": ".", "ArgType": null, "before": " "}], "text": "Moreover , the size of the resulting transducers is significantly smaller ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 7, "segment_span": [0, 3], "characterOffsetBegin": 3, "originalText": "have", "ArgType": null, "before": " "}, {"index": 3, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 3], "tense": "N", "characterOffsetBegin": 8, "originalText": "shown", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [3, 20], "characterOffsetBegin": 14, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [3, 20], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 31, "segment_span": [3, 20], "characterOffsetBegin": 23, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [3, 20], "characterOffsetBegin": 32, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 8, "word": "along", "lemma": "along", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [3, 20], "characterOffsetBegin": 41, "originalText": "along", "ArgType": null, "before": " "}, {"index": 9, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [3, 20], "characterOffsetBegin": 47, "originalText": "with", "ArgType": null, "before": " "}, {"index": 10, "word": "global", "lemma": "global", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [3, 20], "characterOffsetBegin": 52, "originalText": "global", "ArgType": null, "before": " "}, {"index": 11, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [3, 20], "characterOffsetBegin": 59, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 12, "word": "provides", "lemma": "provide", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 79, "segment_span": [3, 20], "tense": "Z", "characterOffsetBegin": 71, "originalText": "provides", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [3, 20], "characterOffsetBegin": 80, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "powerful", "lemma": "powerful", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [3, 20], "characterOffsetBegin": 82, "originalText": "powerful", "ArgType": null, "before": " "}, {"index": 15, "word": "technique", "lemma": "technique", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [3, 20], "characterOffsetBegin": 91, "originalText": "technique", "ArgType": null, "before": " "}, {"index": 16, "word": "technique", "lemma": "technique", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [3, 20], "characterOffsetBegin": 101, "originalText": "technique", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 114, "segment_span": [3, 20], "characterOffsetBegin": 111, "originalText": "for", "ArgType": null, "before": " "}, {"index": 18, "word": "minimizing", "lemma": "minimize", "after": " ", "pos": "VBG", "characterOffsetEnd": 125, "segment_span": [3, 20], "characterOffsetBegin": 115, "originalText": "minimizing", "ArgType": null, "before": " "}, {"index": 19, "word": "constraint", "lemma": "constraint", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [3, 20], "characterOffsetBegin": 126, "originalText": "constraint", "ArgType": null, "before": " "}, {"index": 20, "word": "violations", "lemma": "violation", "after": " ", "pos": "NNS", "characterOffsetEnd": 147, "segment_span": [3, 20], "characterOffsetBegin": 137, "originalText": "violations", "ArgType": "dobj", "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 149, "characterOffsetBegin": 148, "originalText": ".", "ArgType": null, "before": " "}], "text": "We have shown that the matching approach along with global permutation provides a powerful technique technique for minimizing constraint violations ."}, {"tokens": [{"index": 1, "word": "Although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 8, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "Although", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 11, "segment_span": [0, 22], "characterOffsetBegin": 9, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 16, "segment_span": [0, 22], "characterOffsetBegin": 12, "originalText": "have", "ArgType": null, "before": " "}, {"index": 4, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 21, "segment_span": [0, 22], "characterOffsetBegin": 17, "originalText": "only", "ArgType": null, "before": " "}, {"index": 5, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 22], "tense": "N", "characterOffsetBegin": 22, "originalText": "applied", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 22], "characterOffsetBegin": 30, "originalText": "this", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 22], "characterOffsetBegin": 35, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 46, "segment_span": [0, 22], "characterOffsetBegin": 44, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "permutations", "lemma": "permutation", "after": " ", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [0, 22], "characterOffsetBegin": 47, "originalText": "permutations", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 22], "characterOffsetBegin": 60, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": "  ", "pos": "DT", "characterOffsetEnd": 66, "segment_span": [0, 22], "characterOffsetBegin": 63, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "Prince", "lemma": "Prince", "after": " ", "pos": "NNP", "characterOffsetEnd": 74, "segment_span": [0, 22], "characterOffsetBegin": 68, "originalText": "Prince", "ArgType": null, "before": "  "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 76, "segment_span": [0, 22], "characterOffsetBegin": 75, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 80, "segment_span": [0, 22], "characterOffsetBegin": 76, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 81, "segment_span": [0, 22], "characterOffsetBegin": 80, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 84, "segment_span": [0, 22], "characterOffsetBegin": 83, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 17, "word": "Smolensky", "lemma": "Smolensky", "after": " ", "pos": "NNP", "characterOffsetEnd": 95, "segment_span": [0, 22], "characterOffsetBegin": 86, "originalText": "Smolensky", "ArgType": null, "before": "  "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 97, "segment_span": [0, 22], "characterOffsetBegin": 96, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 101, "segment_span": [0, 22], "characterOffsetBegin": 97, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 102, "segment_span": [0, 22], "characterOffsetBegin": 101, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": "syllabification", "lemma": "syllabification", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 22], "characterOffsetBegin": 104, "originalText": "syllabification", "ArgType": null, "before": "  "}, {"index": 22, "word": "analysis", "lemma": "analysis", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [0, 22], "characterOffsetBegin": 120, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 130, "segment_span": [22, 25], "characterOffsetBegin": 129, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 133, "segment_span": [22, 25], "characterOffsetBegin": 131, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 25, "word": "speculate", "lemma": "speculate", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 143, "segment_span": [22, 25], "tense": "P", "characterOffsetBegin": 134, "originalText": "speculate", "ArgType": "verb", "before": " "}, {"index": 26, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 148, "segment_span": [25, 45], "characterOffsetBegin": 144, "originalText": "that", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 152, "segment_span": [25, 45], "characterOffsetBegin": 149, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [25, 45], "characterOffsetBegin": 153, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 163, "segment_span": [25, 45], "characterOffsetBegin": 162, "originalText": "(", "ArgType": null, "before": " "}, {"index": 30, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 168, "segment_span": [25, 45], "characterOffsetBegin": 164, "originalText": "even", "ArgType": null, "before": " "}, {"index": 31, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 173, "segment_span": [25, 45], "characterOffsetBegin": 169, "originalText": "with", "ArgType": null, "before": " "}, {"index": 32, "word": "local", "lemma": "local", "after": " ", "pos": "JJ", "characterOffsetEnd": 179, "segment_span": [25, 45], "characterOffsetBegin": 174, "originalText": "local", "ArgType": null, "before": " "}, {"index": 33, "word": "permutation", "lemma": "permutation", "after": " ", "pos": "NN", "characterOffsetEnd": 191, "segment_span": [25, 45], "characterOffsetBegin": 180, "originalText": "permutation", "ArgType": null, "before": " "}, {"index": 34, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 193, "segment_span": [25, 45], "characterOffsetBegin": 192, "originalText": ")", "ArgType": null, "before": " "}, {"index": 35, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 198, "segment_span": [25, 45], "characterOffsetBegin": 194, "originalText": "will", "ArgType": null, "before": " "}, {"index": 36, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 203, "segment_span": [25, 45], "characterOffsetBegin": 199, "originalText": "also", "ArgType": null, "before": " "}, {"index": 37, "word": "yield", "lemma": "yield", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 209, "segment_span": [25, 45], "tense": "B", "characterOffsetBegin": 204, "originalText": "yield", "has_aux": true, "ArgType": null, "before": " "}, {"index": 38, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 215, "segment_span": [25, 45], "characterOffsetBegin": 210, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 39, "word": "implementations", "lemma": "implementation", "after": " ", "pos": "NNS", "characterOffsetEnd": 231, "segment_span": [25, 45], "characterOffsetBegin": 216, "originalText": "implementations", "ArgType": "dobj", "before": " "}, {"index": 40, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 235, "segment_span": [25, 45], "characterOffsetBegin": 232, "originalText": "for", "ArgType": null, "before": " "}, {"index": 41, "word": "most", "lemma": "most", "after": " ", "pos": "JJS", "characterOffsetEnd": 240, "segment_span": [25, 45], "characterOffsetBegin": 236, "originalText": "most", "ArgType": null, "before": " "}, {"index": 42, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 246, "segment_span": [25, 45], "characterOffsetBegin": 241, "originalText": "other", "ArgType": null, "before": " "}, {"index": 43, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 249, "segment_span": [25, 45], "characterOffsetBegin": 247, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 44, "word": "phonological", "lemma": "phonological", "after": " ", "pos": "JJ", "characterOffsetEnd": 262, "segment_span": [25, 45], "characterOffsetBegin": 250, "originalText": "phonological", "ArgType": null, "before": " "}, {"index": 45, "word": "analyses", "lemma": "analysis", "after": " ", "pos": "NNS", "characterOffsetEnd": 271, "segment_span": [25, 45], "characterOffsetBegin": 263, "originalText": "analyses", "ArgType": null, "before": " "}, {"index": 46, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 273, "characterOffsetBegin": 272, "originalText": ".", "ArgType": null, "before": " "}], "text": "Although we have only applied this approach to permutations of the Prince ( 0000 ) & Smolensky ( 0000 ) syllabification analysis , we speculate that the approach ( even with local permutation ) will also yield exact implementations for most other OT phonological analyses ."}, {"tokens": [{"index": 1, "word": "Further", "lemma": "further", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "Further", "ArgType": null, "before": ""}, {"index": 2, "word": "investigation", "lemma": "investigation", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 16], "characterOffsetBegin": 8, "originalText": "investigation", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 24, "segment_span": [0, 16], "characterOffsetBegin": 22, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "needed", "is_pass": true, "lemma": "need", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 31, "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 25, "originalText": "needed", "ArgType": null, "before": " "}, {"index": 5, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 36, "segment_span": [0, 16], "characterOffsetBegin": 32, "originalText": "here", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 38, "segment_span": [0, 16], "characterOffsetBegin": 37, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "particularly", "lemma": "particularly", "after": " ", "pos": "RB", "characterOffsetEnd": 51, "segment_span": [0, 16], "characterOffsetBegin": 39, "originalText": "particularly", "ArgType": null, "before": " "}, {"index": 8, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [0, 16], "characterOffsetBegin": 52, "originalText": "with", "ArgType": null, "before": " "}, {"index": 9, "word": "recent", "lemma": "recent", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [0, 16], "characterOffsetBegin": 57, "originalText": "recent", "ArgType": null, "before": " "}, {"index": 10, "word": "versions", "lemma": "version", "after": " ", "pos": "NNS", "characterOffsetEnd": 72, "segment_span": [0, 16], "characterOffsetBegin": 64, "originalText": "versions", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [0, 16], "characterOffsetBegin": 73, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "OT", "lemma": "OT", "after": " ", "pos": "NNP", "characterOffsetEnd": 78, "segment_span": [0, 16], "characterOffsetBegin": 76, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 13, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 83, "segment_span": [0, 16], "characterOffsetBegin": 79, "originalText": "such", "ArgType": null, "before": " "}, {"index": 14, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [0, 16], "characterOffsetBegin": 84, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": "correspondence", "lemma": "correspondence", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 16], "characterOffsetBegin": 87, "originalText": "correspondence", "ArgType": null, "before": " "}, {"index": 16, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [0, 16], "characterOffsetBegin": 102, "originalText": "theory", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 110, "characterOffsetBegin": 109, "originalText": ".", "ArgType": null, "before": " "}], "text": "Further investigation is needed here , particularly with recent versions of OT such as correspondence theory ."}, {"tokens": [{"index": 1, "word": "Another", "lemma": "another", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 34], "characterOffsetBegin": 0, "originalText": "Another", "ArgType": null, "before": ""}, {"index": 2, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 34], "characterOffsetBegin": 8, "originalText": "line", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 34], "characterOffsetBegin": 13, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "further", "lemma": "further", "after": " ", "pos": "JJ", "characterOffsetEnd": 23, "segment_span": [0, 34], "characterOffsetBegin": 16, "originalText": "further", "ArgType": null, "before": " "}, {"index": 5, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 34], "characterOffsetBegin": 24, "originalText": "research", "ArgType": null, "before": " "}, {"index": 6, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 37, "segment_span": [0, 34], "characterOffsetBegin": 33, "originalText": "will", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 40, "segment_span": [0, 34], "characterOffsetBegin": 38, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 34], "characterOffsetBegin": 41, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "proper", "lemma": "proper", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 34], "characterOffsetBegin": 45, "originalText": "proper", "ArgType": null, "before": " "}, {"index": 10, "word": "integration", "lemma": "integration", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 34], "has_aux": true, "characterOffsetBegin": 52, "originalText": "integration", "ArgType": "verb", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 34], "characterOffsetBegin": 64, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [0, 34], "characterOffsetBegin": 67, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 13, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 34], "characterOffsetBegin": 74, "originalText": "state", "ArgType": null, "before": " "}, {"index": 14, "word": "OT", "lemma": "ot", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 34], "characterOffsetBegin": 80, "originalText": "OT", "ArgType": null, "before": " "}, {"index": 15, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 87, "segment_span": [0, 34], "characterOffsetBegin": 83, "originalText": "with", "ArgType": null, "before": " "}, {"index": 16, "word": "non-OT", "lemma": "non-ot", "after": " ", "pos": "JJ", "characterOffsetEnd": 94, "segment_span": [0, 34], "characterOffsetBegin": 88, "originalText": "non-OT", "ArgType": null, "before": " "}, {"index": 17, "word": "phonological", "lemma": "phonological", "after": " ", "pos": "JJ", "characterOffsetEnd": 107, "segment_span": [0, 34], "characterOffsetBegin": 95, "originalText": "phonological", "ArgType": null, "before": " "}, {"index": 18, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 113, "segment_span": [0, 34], "characterOffsetBegin": 108, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 19, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 116, "segment_span": [18, 33], "characterOffsetBegin": 114, "originalText": "as", "ArgType": null, "before": " "}, {"index": 20, "word": "discussed", "lemma": "discuss", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 126, "segment_span": [18, 33], "tense": "N", "characterOffsetBegin": 117, "originalText": "discussed", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 128, "segment_span": [18, 33], "characterOffsetBegin": 127, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 132, "segment_span": [18, 33], "characterOffsetBegin": 129, "originalText": "for", "ArgType": null, "before": " "}, {"index": 23, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 140, "segment_span": [18, 33], "characterOffsetBegin": 133, "originalText": "example", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 142, "segment_span": [18, 33], "characterOffsetBegin": 141, "originalText": ",", "ArgType": null, "before": " "}, {"index": 25, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 145, "segment_span": [18, 33], "characterOffsetBegin": 143, "originalText": "in", "ArgType": null, "before": " "}, {"index": 26, "word": "papers", "lemma": "papers", "after": " ", "pos": "NNS", "characterOffsetEnd": 152, "segment_span": [18, 33], "characterOffsetBegin": 146, "originalText": "papers", "ArgType": null, "before": " "}, {"index": 27, "word": "collected", "lemma": "collect", "after": " ", "pos": "VBN", "characterOffsetEnd": 162, "segment_span": [18, 33], "characterOffsetBegin": 153, "originalText": "collected", "ArgType": null, "before": " "}, {"index": 28, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 165, "segment_span": [18, 33], "characterOffsetBegin": 163, "originalText": "in", "ArgType": null, "before": " "}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 168, "segment_span": [18, 33], "characterOffsetBegin": 167, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 30, "word": "Hermans", "lemma": "Hermans", "after": " ", "pos": "NNPS", "characterOffsetEnd": 176, "segment_span": [18, 33], "characterOffsetBegin": 169, "originalText": "Hermans", "ArgType": null, "before": " "}, {"index": 31, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 180, "segment_span": [18, 33], "characterOffsetBegin": 177, "originalText": "and", "ArgType": null, "before": " "}, {"index": 32, "word": "Oostendorp", "lemma": "Oostendorp", "after": " ", "pos": "NNP", "characterOffsetEnd": 191, "segment_span": [18, 33], "characterOffsetBegin": 181, "originalText": "Oostendorp", "ArgType": null, "before": " "}, {"index": 33, "word": "1999", "lemma": "1999", "after": " ", "pos": "CD", "characterOffsetEnd": 196, "segment_span": [18, 33], "characterOffsetBegin": 192, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 34, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 198, "segment_span": [0, 34], "characterOffsetBegin": 197, "originalText": ")", "ArgType": null, "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 201, "characterOffsetBegin": 200, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Another line of further research will be the proper integration of finite state OT with non-OT phonological rules as discussed , for example , in papers collected in ( Hermans and Oostendorp 1999 ) ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 14], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 12, "segment_span": [0, 14], "characterOffsetBegin": 10, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "intend", "lemma": "intend", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 19, "segment_span": [0, 14], "tense": "P", "characterOffsetBegin": 13, "originalText": "intend", "ArgType": "verb", "before": " "}, {"index": 5, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 24, "segment_span": [0, 14], "characterOffsetBegin": 20, "originalText": "also", "ArgType": null, "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 27, "segment_span": [0, 14], "characterOffsetBegin": 25, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "investigate", "lemma": "investigate", "after": " ", "pos": "VB", "characterOffsetEnd": 39, "segment_span": [0, 14], "characterOffsetBegin": 28, "originalText": "investigate", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 43, "segment_span": [0, 14], "characterOffsetBegin": 40, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "application", "lemma": "application", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 14], "characterOffsetBegin": 44, "originalText": "application", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [0, 14], "characterOffsetBegin": 56, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 62, "segment_span": [0, 14], "characterOffsetBegin": 59, "originalText": "our", "ArgType": null, "before": " "}, {"index": 12, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 14], "characterOffsetBegin": 63, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 74, "segment_span": [0, 14], "characterOffsetBegin": 72, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "syntax", "lemma": "syntax", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 14], "characterOffsetBegin": 75, "originalText": "syntax", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 83, "characterOffsetBegin": 82, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , we intend also to investigate the application of our approach to syntax ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 1, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "(", "ArgType": null, "before": ""}, {"index": 2, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 11, "segment_span": [0, 5], "characterOffsetBegin": 2, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 3, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 16, "segment_span": [0, 5], "characterOffsetBegin": 12, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 18, "segment_span": [0, 5], "characterOffsetBegin": 17, "originalText": ")", "ArgType": null, "before": " "}, {"index": 5, "word": "suggests", "lemma": "suggest", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 28, "segment_span": [0, 5], "tense": "Z", "characterOffsetBegin": 20, "originalText": "suggests", "ArgType": null, "before": "  "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 33, "segment_span": [5, 23], "characterOffsetBegin": 29, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 37, "segment_span": [5, 23], "characterOffsetBegin": 34, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "Constraint", "lemma": "Constraint", "after": " ", "pos": "NNP", "characterOffsetEnd": 48, "segment_span": [5, 23], "characterOffsetBegin": 38, "originalText": "Constraint", "ArgType": null, "before": " "}, {"index": 9, "word": "Grammar", "lemma": "Grammar", "after": " ", "pos": "NNP", "characterOffsetEnd": 56, "segment_span": [5, 23], "characterOffsetBegin": 49, "originalText": "Grammar", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [5, 23], "characterOffsetBegin": 57, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [5, 23], "characterOffsetBegin": 66, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 71, "segment_span": [5, 23], "characterOffsetBegin": 70, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 13, "word": "Karlsson", "lemma": "Karlsson", "after": " ", "pos": "NNP", "characterOffsetEnd": 80, "segment_span": [5, 23], "characterOffsetBegin": 72, "originalText": "Karlsson", "ArgType": null, "before": " "}, {"index": 14, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 83, "segment_span": [5, 23], "characterOffsetBegin": 81, "originalText": "et", "ArgType": null, "before": " "}, {"index": 15, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 87, "segment_span": [5, 23], "characterOffsetBegin": 84, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 16, "word": "1995", "lemma": "1995", "after": " ", "pos": "CD", "characterOffsetEnd": 92, "segment_span": [5, 23], "characterOffsetBegin": 88, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 94, "segment_span": [5, 23], "characterOffsetBegin": 93, "originalText": ")", "ArgType": null, "before": " "}, {"index": 18, "word": "could", "lemma": "could", "after": " ", "pos": "MD", "characterOffsetEnd": 101, "segment_span": [5, 23], "characterOffsetBegin": 96, "originalText": "could", "ArgType": null, "before": "  "}, {"index": 19, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 104, "segment_span": [5, 23], "characterOffsetBegin": 102, "originalText": "be", "ArgType": null, "before": " "}, {"index": 20, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 116, "segment_span": [5, 23], "tense": "N", "characterOffsetBegin": 105, "originalText": "implemented", "has_aux": true, "ArgType": null, "before": " "}, {"index": 21, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 122, "segment_span": [5, 23], "characterOffsetBegin": 117, "originalText": "using", "ArgType": null, "before": " "}, {"index": 22, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [5, 23], "characterOffsetBegin": 123, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 23, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 142, "segment_span": [5, 23], "characterOffsetBegin": 131, "originalText": "composition", "ArgType": "dobj", "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 144, "characterOffsetBegin": 143, "originalText": ".", "ArgType": null, "before": " "}], "text": "( Karttunen 1998 ) suggests that the Constraint Grammar approach of ( Karlsson et al. 1995 ) could be implemented using lenient composition ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 5], "characterOffsetBegin": 3, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 10, "segment_span": [0, 5], "characterOffsetBegin": 8, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [0, 5], "characterOffsetBegin": 11, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 5], "characterOffsetBegin": 15, "originalText": "case", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [5, 18], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 24, "segment_span": [5, 18], "characterOffsetBegin": 22, "originalText": "it", "ArgType": null, "before": " "}, {"index": 8, "word": "could", "lemma": "could", "after": " ", "pos": "MD", "characterOffsetEnd": 30, "segment_span": [5, 18], "characterOffsetBegin": 25, "originalText": "could", "ArgType": null, "before": " "}, {"index": 9, "word": "most", "lemma": "most", "after": " ", "pos": "RBS", "characterOffsetEnd": 35, "segment_span": [5, 18], "characterOffsetBegin": 31, "originalText": "most", "ArgType": null, "before": " "}, {"index": 10, "word": "probably", "lemma": "probably", "after": " ", "pos": "RB", "characterOffsetEnd": 44, "segment_span": [5, 18], "characterOffsetBegin": 36, "originalText": "probably", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 47, "segment_span": [5, 18], "characterOffsetBegin": 45, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 59, "segment_span": [5, 18], "tense": "N", "characterOffsetBegin": 48, "originalText": "implemented", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 64, "segment_span": [5, 18], "characterOffsetBegin": 60, "originalText": "more", "ArgType": null, "before": " "}, {"index": 14, "word": "precisely", "lemma": "precisely", "after": " ", "pos": "RB", "characterOffsetEnd": 74, "segment_span": [5, 18], "characterOffsetBegin": 65, "originalText": "precisely", "ArgType": null, "before": " "}, {"index": 15, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 80, "segment_span": [5, 18], "characterOffsetBegin": 75, "originalText": "using", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 84, "segment_span": [5, 18], "characterOffsetBegin": 81, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [5, 18], "characterOffsetBegin": 85, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 18, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [5, 18], "characterOffsetBegin": 94, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 104, "characterOffsetBegin": 103, "originalText": ".", "ArgType": null, "before": " "}], "text": "If this is the case , it could most probably be implemented more precisely using the matching approach ."}, {"tokens": [{"index": 1, "word": "Recently", "lemma": "recently", "after": " ", "pos": "RB", "characterOffsetEnd": 8, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "Recently", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 10, "segment_span": [0, 13], "characterOffsetBegin": 9, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 13, "segment_span": [0, 13], "characterOffsetBegin": 12, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 4, "word": "Oflazer", "lemma": "Oflazer", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 13], "characterOffsetBegin": 14, "originalText": "Oflazer", "ArgType": null, "before": " "}, {"index": 5, "word": "1999", "lemma": "1999", "after": " ", "pos": "CD", "characterOffsetEnd": 26, "segment_span": [0, 13], "characterOffsetBegin": 22, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 28, "segment_span": [0, 13], "characterOffsetBegin": 27, "originalText": ")", "ArgType": null, "before": " "}, {"index": 7, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 33, "segment_span": [0, 13], "characterOffsetBegin": 30, "originalText": "has", "ArgType": null, "before": "  "}, {"index": 8, "word": "presented", "lemma": "present", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 43, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 34, "originalText": "presented", "has_aux": true, "ArgType": null, "before": " "}, {"index": 9, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 46, "segment_span": [0, 13], "characterOffsetBegin": 44, "originalText": "an", "ArgType": null, "before": " "}, {"index": 10, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 13], "characterOffsetBegin": 47, "originalText": "implementation", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 13], "characterOffsetBegin": 62, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "Dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [0, 13], "characterOffsetBegin": 65, "originalText": "Dependency", "ArgType": null, "before": " "}, {"index": 13, "word": "syntax", "lemma": "syntax", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 13], "characterOffsetBegin": 76, "originalText": "syntax", "ArgType": null, "before": " "}, {"index": 14, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 88, "segment_span": [13, 22], "characterOffsetBegin": 83, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 15, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 93, "segment_span": [13, 22], "characterOffsetBegin": 89, "originalText": "also", "ArgType": null, "before": " "}, {"index": 16, "word": "uses", "lemma": "use", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 98, "segment_span": [13, 22], "tense": "Z", "characterOffsetBegin": 94, "originalText": "uses", "ArgType": null, "before": " "}, {"index": 17, "word": "lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 106, "segment_span": [13, 22], "characterOffsetBegin": 99, "originalText": "lenient", "ArgType": null, "before": " "}, {"index": 18, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [13, 22], "characterOffsetBegin": 107, "originalText": "composition", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 123, "segment_span": [13, 22], "characterOffsetBegin": 119, "originalText": "with", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 127, "segment_span": [13, 22], "characterOffsetBegin": 124, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "counting", "lemma": "count", "after": " ", "pos": "VBG", "characterOffsetEnd": 136, "segment_span": [13, 22], "characterOffsetBegin": 128, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 22, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [13, 22], "characterOffsetBegin": 137, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 147, "characterOffsetBegin": 146, "originalText": ".", "ArgType": null, "before": " "}], "text": "Recently , ( Oflazer 1999 ) has presented an implementation of Dependency syntax which also uses lenient composition with the counting approach ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "alternative", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 19, "originalText": "using", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "matching", "lemma": "matching", "after": " ", "pos": "JJ", "characterOffsetEnd": 35, "segment_span": [0, 11], "characterOffsetBegin": 27, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 7, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 11], "characterOffsetBegin": 36, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 49, "segment_span": [0, 11], "characterOffsetBegin": 45, "originalText": "here", "ArgType": null, "before": " "}, {"index": 9, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 56, "segment_span": [0, 11], "characterOffsetBegin": 50, "originalText": "should", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 57, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "investigated", "is_pass": true, "lemma": "investigate", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 72, "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 60, "originalText": "investigated", "has_aux": true, "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 74, "characterOffsetBegin": 73, "originalText": ".", "ArgType": null, "before": " "}], "text": "The alternative of using a matching approach here should be investigated ."}]}], "title": "Conclusion"}]}
