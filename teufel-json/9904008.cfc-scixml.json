{"title": "Transducers from Rewrite Rules with Backreferences", "year": 1999, "citation_contexts": [{"raw_string": "john:form724 C. Douglas Johnson 1972 . Formal Aspects of Phonological Descriptions. Mouton, The Hague 1972 .", "citing_string": "Johnson 1972", "sentence": 1, "citation_type": "Positional", "cite_context": "Johnson (0000)   ( Johnson 1972 )  has shown that such rewrite rules are equivalent to finite state transducers in the special case that they are not allowed to rewrite their own output .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "john:form724 C. Douglas Johnson 1972 . Formal Aspects of Phonological Descriptions. Mouton, The Hague 1972 .", "title": "Formal Aspects of Phonological Descriptions", "authors": ["C. Douglas Johnson"], "surnames": ["Johnson"], "paper_id": "External_DUMMY", "year": 1972}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_0", "subsection": 0}, {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "citing_string": "Kaplan and Kay 1994", "sentence": 2, "citation_type": "Essential", "cite_context": "An algorithm for compilation into transducers was provided by  ( Kaplan and Kay 1994 )  .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_1120", "info": {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "title": "Regular models of phonological rule systems", "authors": ["Ronald Kaplan", "Martin Kay"], "surnames": ["Kaplan", "Kay"], "paper_id": "External_1120", "year": 1994}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_1", "subsection": 0}, {"raw_string": "kart:957 Lauri Karttunen 1995 . The replace operator. In 33th Annual Meeting of the Association for Computational Linguistics, M.I.T. Cambridge Mass, 1995.", "citing_string": "Karttunen 1995", "sentence": 3, "citation_type": "Positional", "cite_context": "Improvements and extensions to this algorithm have been provided by  ( Karttunen 1995  ,  Karttunen 1997  ,  Karttunen 1996a )  and  ( Mohri and Sproat 1996 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_63749", "info": {"raw_string": "kart:957 Lauri Karttunen 1995 . The replace operator. In 33th Annual Meeting of the Association for Computational Linguistics, M.I.T. Cambridge Mass, 1995.", "title": "The replace operator", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_63749", "year": 1995}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_2", "subsection": 0}, {"raw_string": "kart:repl979 Lauri Karttunen 1997 . The replace operator. In Emannual Roche and Yves Schabes, editors, Finite-State Language Processing, pages 117-147. Bradford, MIT Press 1997.", "citing_string": "Karttunen 1997", "sentence": 3, "citation_type": "Positional", "cite_context": "Improvements and extensions to this algorithm have been provided by  ( Karttunen 1995  ,  Karttunen 1997  ,  Karttunen 1996a )  and  ( Mohri and Sproat 1996 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "P95-1003", "info": {"raw_string": "kart:repl979 Lauri Karttunen 1997 . The replace operator. In Emannual Roche and Yves Schabes, editors, Finite-State Language Processing, pages 117-147. Bradford, MIT Press 1997.", "title": "The replace operator", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "P95-1003", "year": 1997}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_3", "subsection": 0}, {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Karttunen 1996a", "sentence": 3, "citation_type": "Positional", "cite_context": "Improvements and extensions to this algorithm have been provided by  ( Karttunen 1995  ,  Karttunen 1997  ,  Karttunen 1996a )  and  ( Mohri and Sproat 1996 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_4", "subsection": 0}, {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Mohri and Sproat 1996", "sentence": 3, "citation_type": "Positional", "cite_context": "Improvements and extensions to this algorithm have been provided by  ( Karttunen 1995  ,  Karttunen 1997  ,  Karttunen 1996a )  and  ( Mohri and Sproat 1996 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_16023", "info": {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "An efficient compiler for weighted rewrite rules", "authors": ["Mehryar Mohri", "Richard Sproat"], "surnames": ["Mohri", "Sproat"], "paper_id": "External_16023", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_5", "subsection": 0}, {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "citing_string": "Kaplan and Kay 1994", "sentence": 5, "citation_type": "Positional", "cite_context": "Backreferencing has been implicit in previous research , such as in the `` batch rules '' of  ( Kaplan and Kay 1994 )  , bracketing transducers for finite-state parsing  ( Karttunen 1996a )  , and the `` LocalExtension '' operation of  ( Roche and Schabes 1997 )  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_1120", "info": {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "title": "Regular models of phonological rule systems", "authors": ["Ronald Kaplan", "Martin Kay"], "surnames": ["Kaplan", "Kay"], "paper_id": "External_1120", "year": 1994}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_6", "subsection": 0}, {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Karttunen 1996a", "sentence": 5, "citation_type": "Positional", "cite_context": "Backreferencing has been implicit in previous research , such as in the `` batch rules '' of  ( Kaplan and Kay 1994 )  , bracketing transducers for finite-state parsing  ( Karttunen 1996a )  , and the `` LocalExtension '' operation of  ( Roche and Schabes 1997 )  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_7", "subsection": 0}, {"raw_string": "roch:lang9715 Emmanuel Roche and Yves Schabes 1997 . Introduction. In Emmanuel Roche and Yves Schabes, editors, Finite-State Language Processing. MIT Press, Cambridge, Mass 1997.", "citing_string": "Roche and Schabes 1997", "sentence": 5, "citation_type": "Positional", "cite_context": "Backreferencing has been implicit in previous research , such as in the `` batch rules '' of  ( Kaplan and Kay 1994 )  , bracketing transducers for finite-state parsing  ( Karttunen 1996a )  , and the `` LocalExtension '' operation of  ( Roche and Schabes 1997 )  .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "roch:lang9715 Emmanuel Roche and Yves Schabes 1997 . Introduction. In Emmanuel Roche and Yves Schabes, editors, Finite-State Language Processing. MIT Press, Cambridge, Mass 1997.", "title": "Introduction", "authors": ["Emmanuel Roche", "Yves Schabes"], "surnames": ["Roche", "Schabes"], "paper_id": "External_DUMMY", "year": 1997}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_8", "subsection": 0}, {"raw_string": "frie:mast973 Jeffrey Friedl 1997 . Mastering Regular Expressions. O'Reilly &amp; Associates, Inc, 1997 .", "citing_string": "Friedl 1997", "sentence": 7, "citation_type": "Positional", "cite_context": "Backreferencing is widely used in editors , scripting languages and other tools employing regular expressions  ( Friedl 1997 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frie:mast973 Jeffrey Friedl 1997 . Mastering Regular Expressions. O'Reilly &amp; Associates, Inc, 1997 .", "title": "Mastering Regular Expressions", "authors": ["Jeffrey Friedl"], "surnames": ["Friedl"], "paper_id": "External_DUMMY", "year": 1997}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_9", "subsection": 0}, {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Karttunen et al. 1996", "sentence": 13, "citation_type": "Positional", "cite_context": "For NLP finite state calculi  ( Karttunen et al. 1996  ,  van Noord 1997 )  this is unacceptable .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_10", "subsection": 0}, {"raw_string": "frie:mast973 Jeffrey Friedl 1997 . Mastering Regular Expressions. O'Reilly &amp; Associates, Inc, 1997 .", "citing_string": "Friedl 1997", "sentence": 22, "citation_type": "Positional", "cite_context": "Friedl (0000)   ( Friedl 1997 )  ( p .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frie:mast973 Jeffrey Friedl 1997 . Mastering Regular Expressions. O'Reilly &amp; Associates, Inc, 1997 .", "title": "Mastering Regular Expressions", "authors": ["Jeffrey Friedl"], "surnames": ["Friedl"], "paper_id": "External_DUMMY", "year": 1997}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_11", "subsection": 0}, {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Karttunen 1996a", "sentence": 28, "citation_type": "Essential", "cite_context": "In the following section , we initially concentrate on the simple case in (  CREF  ) and show how (  CREF  ) may be compiled assuming left-to-right processing along with the overall longest match strategy described by  ( Karttunen 1996a )  .", "citation_role": "Uses", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_12", "subsection": 0}, {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Karttunen 1996a", "sentence": 29, "citation_type": "Essential", "cite_context": "The major components of the algorithm are not new , but straightforward modifications of components presented in  ( Karttunen 1996a )  and  ( Mohri and Sproat 1996 )  .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_13", "subsection": 0}, {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Mohri and Sproat 1996", "sentence": 29, "citation_type": "Essential", "cite_context": "The major components of the algorithm are not new , but straightforward modifications of components presented in  ( Karttunen 1996a )  and  ( Mohri and Sproat 1996 )  .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_16023", "info": {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "An efficient compiler for weighted rewrite rules", "authors": ["Mehryar Mohri", "Richard Sproat"], "surnames": ["Mohri", "Sproat"], "paper_id": "External_16023", "year": 1996}, "section": 0, "citation_id": "Teufel_9904008.cfc-scixml_14", "subsection": 0}, {"raw_string": "karttunen:9810 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara, June 1998 .", "citing_string": "Karttunen 1998", "sentence": 10, "citation_type": "Positional", "cite_context": "For instance , the lenient_composition operator  ( Karttunen 1998 )  is defined by : macro ( priority_union ( Q , R ) , { Q , ~domain ( Q ) o R } ) .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_40630", "info": {"raw_string": "karttunen:9810 Lauri Karttunen 1998 . The proper treatment of optimality theory in computational phonology. In Finite-state Methods in Natural Language Processing, pages 1-12, Ankara, June 1998 .", "title": "The proper treatment of optimality theory in computational phonology", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_40630", "year": 1998}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_15", "subsection": 1}, {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Mohri and Sproat 1996", "sentence": 21, "citation_type": "Positional", "cite_context": "This functionality has been used in  ( van Noord and Gerdemann 1999 )  to provide an implementation of the algorithm in  ( Mohri and Sproat 1996 )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_16023", "info": {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "An efficient compiler for weighted rewrite rules", "authors": ["Mehryar Mohri", "Richard Sproat"], "surnames": ["Mohri", "Sproat"], "paper_id": "External_16023", "year": 1996}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_16", "subsection": 1}, {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "citing_string": "Kaplan and Kay 1994", "sentence": 22, "citation_type": "Positional", "cite_context": "Previous algorithms for compiling rewrite rules into transducers have followed  ( Kaplan and Kay 1994 )  by introducing special marker symbols ( markers ) into strings in order to mark off candidate regions for replacement .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_1120", "info": {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "title": "Regular models of phonological rule systems", "authors": ["Ronald Kaplan", "Martin Kay"], "surnames": ["Kaplan", "Kay"], "paper_id": "External_1120", "year": 1994}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_17", "subsection": 1}, {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Karttunen 1996", "sentence": 25, "citation_type": "Positional", "cite_context": "This problem was recognized by  ( Karttunen 1996 )  , whose algorithm starts with a filter transducer which filters out any string containing a marker .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_60129", "info": {"raw_string": "karttunen:968 Lauri Karttunen 1996 . Directed replacement. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "Directed replacement", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_60129", "year": 1996}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_18", "subsection": 1}, {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "citing_string": "Kaplan and Kay 1994", "sentence": 41, "citation_type": "Essential", "cite_context": "Before describing the algorithm , it will be helpful to have at our disposal a few general tools , most of which were described already in  ( Kaplan and Kay 1994 )  .", "citation_role": "Extends", "is_self_cite": false, "cited_paper_id": "External_1120", "info": {"raw_string": "kapl:regu945 Ronald Kaplan and Martin Kay 1994 . Regular models of phonological rule systems. Computational Linguistics, 20(3):331-379, 1994.", "title": "Regular models of phonological rule systems", "authors": ["Ronald Kaplan", "Martin Kay"], "surnames": ["Kaplan", "Kay"], "paper_id": "External_1120", "year": 1994}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_19", "subsection": 1}, {"raw_string": "kart:957 Lauri Karttunen 1995 . The replace operator. In 33th Annual Meeting of the Association for Computational Linguistics, M.I.T. Cambridge Mass, 1995.", "citing_string": "Karttunen 1995", "sentence": 3, "citation_type": "Positional", "cite_context": "The names of these steps are mostly derived from  ( Karttunen 1995 )  and  ( Mohri and Sproat 1996 )  even though the transductions involved are not exactly the same .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_63749", "info": {"raw_string": "kart:957 Lauri Karttunen 1995 . The replace operator. In 33th Annual Meeting of the Association for Computational Linguistics, M.I.T. Cambridge Mass, 1995.", "title": "The replace operator", "authors": ["Lauri Karttunen"], "surnames": ["Karttunen"], "paper_id": "External_63749", "year": 1995}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_20", "subsection": 2}, {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "citing_string": "Mohri and Sproat 1996", "sentence": 3, "citation_type": "Positional", "cite_context": "The names of these steps are mostly derived from  ( Karttunen 1995 )  and  ( Mohri and Sproat 1996 )  even though the transductions involved are not exactly the same .", "citation_role": "CompareOrContrast", "is_self_cite": false, "cited_paper_id": "External_16023", "info": {"raw_string": "mohri-sproat:9612 Mehryar Mohri and Richard Sproat 1996 . An efficient compiler for weighted rewrite rules. In 34th Annual Meeting of the Association for Computational Linguistics, Santa Cruz 1996.", "title": "An efficient compiler for weighted rewrite rules", "authors": ["Mehryar Mohri", "Richard Sproat"], "surnames": ["Mohri", "Sproat"], "paper_id": "External_16023", "year": 1996}, "section": 1, "citation_id": "Teufel_9904008.cfc-scixml_21", "subsection": 2}, {"raw_string": "frie:mast973 Jeffrey Friedl 1997 . Mastering Regular Expressions. O'Reilly &amp; Associates, Inc, 1997 .", "citing_string": "Friedl 1997", "sentence": 11, "citation_type": "Positional", "cite_context": "Suppose ( as in  ( Friedl 1997 )  ) , we want to match the following list of recognizers against the string topological and insert a marker in each boundary position .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "frie:mast973 Jeffrey Friedl 1997 . Mastering Regular Expressions. O'Reilly &amp; Associates, Inc, 1997 .", "title": "Mastering Regular Expressions", "authors": ["Jeffrey Friedl"], "surnames": ["Friedl"], "paper_id": "External_DUMMY", "year": 1997}, "section": 2, "citation_id": "Teufel_9904008.cfc-scixml_22", "subsection": 0}, {"raw_string": "abney:901 Steve Abney 1990 . Rapid incremental parsing with repair. In Proceedings of the 6th New OED Conference: Electronic Text Rese arch, pages 1-9, 1990.", "citing_string": "Abney 1990", "sentence": 4, "citation_type": "Positional", "cite_context": "One particularly interesting example where backreferences are essential is cascaded deterministic ( longest match ) finite state parsing as described for example in  Abney (0000)   ( Abney 1990 )  and various papers in  ( Roche and Schabes 1997a )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_47997", "info": {"raw_string": "abney:901 Steve Abney 1990 . Rapid incremental parsing with repair. In Proceedings of the 6th New OED Conference: Electronic Text Rese arch, pages 1-9, 1990.", "title": "Rapid incremental parsing with repair", "authors": ["Steve Abney"], "surnames": ["Abney"], "paper_id": "External_47997", "year": 1990}, "section": 3, "citation_id": "Teufel_9904008.cfc-scixml_23", "subsection": 0}, {"raw_string": "roche_schabes9513 Emmanuel Roche and Yves Schabes 1997 . Deterministic part-of-speech tagging with finite-state transducers. Computational Linguistics, 21:227-263, 1995. Reprinted in Roche &amp; Schabes (1997).", "citing_string": "Roche and Schabes 1997a", "sentence": 4, "citation_type": "Positional", "cite_context": "One particularly interesting example where backreferences are essential is cascaded deterministic ( longest match ) finite state parsing as described for example in  Abney (0000)   ( Abney 1990 )  and various papers in  ( Roche and Schabes 1997a )  .", "citation_role": "Background", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "roche_schabes9513 Emmanuel Roche and Yves Schabes 1997 . Deterministic part-of-speech tagging with finite-state transducers. Computational Linguistics, 21:227-263, 1995. Reprinted in Roche &amp; Schabes (1997).", "title": "Deterministic part-of-speech tagging with finite-state transducers", "authors": ["roche_schabes9513 Emmanuel Roche", "Yves Schabes"], "surnames": ["Roche", "Schabes"], "paper_id": "External_DUMMY", "year": 1997}, "section": 3, "citation_id": "Teufel_9904008.cfc-scixml_24", "subsection": 0}, {"raw_string": "roche_schabes9714 Emmanuel Roche and Yves Schabes editors. 1997 . Finite-State Language Processing. MIT Press, Cambridge 1997.", "citing_string": "Roche and Schabes 1997b", "sentence": 23, "citation_type": "Essential", "cite_context": "In that case it will be possible to implement different steps by different strategies , e.g. by deterministic or non-deterministic transducers or bimachines  ( Roche and Schabes 1997b )  .", "citation_role": "Uses", "is_self_cite": false, "cited_paper_id": "External_DUMMY", "info": {"raw_string": "roche_schabes9714 Emmanuel Roche and Yves Schabes editors. 1997 . Finite-State Language Processing. MIT Press, Cambridge 1997.", "title": "Finite-State Language Processing", "authors": ["roche_schabes9714 Emmanuel Roche", "Yves Schabes"], "surnames": ["Roche", "Schabes"], "paper_id": "External_DUMMY", "year": 1997}, "section": 3, "citation_id": "Teufel_9904008.cfc-scixml_25", "subsection": 0}], "paper_id": "External_5251", "authors": ["Dale Gerdemann", "Gertjan van Noord"], "sections": [{"num": 0, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Context", "lemma": "context", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "Context", "ArgType": null, "before": ""}, {"index": 2, "word": "sensitive", "lemma": "sensitive", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 15], "characterOffsetBegin": 8, "originalText": "sensitive", "ArgType": null, "before": " "}, {"index": 3, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VBP", "characterOffsetEnd": 25, "segment_span": [0, 15], "characterOffsetBegin": 18, "originalText": "rewrite", "ArgType": null, "before": " "}, {"index": 4, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 31, "segment_span": [0, 15], "characterOffsetBegin": 26, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 36, "segment_span": [0, 15], "characterOffsetBegin": 32, "originalText": "have", "ArgType": null, "before": " "}, {"index": 6, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 41, "segment_span": [0, 15], "characterOffsetBegin": 37, "originalText": "been", "ArgType": null, "before": " "}, {"index": 7, "word": "widely", "lemma": "widely", "after": " ", "pos": "RB", "characterOffsetEnd": 48, "segment_span": [0, 15], "characterOffsetBegin": 42, "originalText": "widely", "ArgType": null, "before": " "}, {"index": 8, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 53, "segment_span": [0, 15], "tense": "N", "characterOffsetBegin": 49, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [0, 15], "characterOffsetBegin": 54, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 64, "segment_span": [0, 15], "characterOffsetBegin": 57, "originalText": "several", "ArgType": null, "before": " "}, {"index": 11, "word": "areas", "lemma": "area", "after": " ", "pos": "NNS", "characterOffsetEnd": 70, "segment_span": [0, 15], "characterOffsetBegin": 65, "originalText": "areas", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [0, 15], "characterOffsetBegin": 71, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "natural", "lemma": "natural", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [0, 15], "characterOffsetBegin": 74, "originalText": "natural", "ArgType": null, "before": " "}, {"index": 14, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [0, 15], "characterOffsetBegin": 82, "originalText": "language", "ArgType": null, "before": " "}, {"index": 15, "word": "processing", "lemma": "processing", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 15], "characterOffsetBegin": 91, "originalText": "processing", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 103, "characterOffsetBegin": 102, "originalText": ".", "ArgType": null, "before": " "}], "text": "Context sensitive rewrite rules have been widely used in several areas of natural language processing ."}, {"tokens": [{"index": 1, "word": "Johnson", "lemma": "Johnson", "after": " ", "pos": "NNP", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "Johnson", "ArgType": "subj", "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 9, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 9, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "   ", "pos": "-RRB-", "characterOffsetEnd": 14, "segment_span": [0, 10], "characterOffsetBegin": 13, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 18, "segment_span": [0, 10], "characterOffsetBegin": 17, "originalText": "(", "ArgType": null, "before": "   "}, {"index": 6, "word": "Johnson", "lemma": "Johnson", "after": " ", "pos": "NNP", "characterOffsetEnd": 26, "segment_span": [0, 10], "characterOffsetBegin": 19, "originalText": "Johnson", "ArgType": null, "before": " "}, {"index": 7, "word": "1972", "lemma": "1972", "after": " ", "pos": "CD", "characterOffsetEnd": 31, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": "1972", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 33, "segment_span": [0, 10], "characterOffsetBegin": 32, "originalText": ")", "ArgType": null, "before": " "}, {"index": 9, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 38, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "has", "ArgType": null, "before": "  "}, {"index": 10, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 44, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 39, "originalText": "shown", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [10, 34], "characterOffsetBegin": 45, "originalText": "that", "ArgType": null, "before": " "}, {"index": 12, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 54, "segment_span": [10, 34], "characterOffsetBegin": 50, "originalText": "such", "ArgType": "subj", "before": " "}, {"index": 13, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 62, "segment_span": [10, 34], "tense": "P", "characterOffsetBegin": 55, "originalText": "rewrite", "ArgType": null, "before": " "}, {"index": 14, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 68, "segment_span": [10, 34], "characterOffsetBegin": 63, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 72, "segment_span": [10, 34], "characterOffsetBegin": 69, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "equivalent", "lemma": "equivalent", "after": " ", "pos": "JJ", "characterOffsetEnd": 83, "segment_span": [10, 34], "characterOffsetBegin": 73, "originalText": "equivalent", "ArgType": null, "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 86, "segment_span": [10, 34], "characterOffsetBegin": 84, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [10, 34], "characterOffsetBegin": 87, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 19, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [10, 34], "characterOffsetBegin": 94, "originalText": "state", "ArgType": null, "before": " "}, {"index": 20, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 111, "segment_span": [10, 34], "characterOffsetBegin": 100, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 21, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 114, "segment_span": [10, 34], "characterOffsetBegin": 112, "originalText": "in", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [10, 34], "characterOffsetBegin": 115, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 126, "segment_span": [10, 34], "characterOffsetBegin": 119, "originalText": "special", "ArgType": null, "before": " "}, {"index": 24, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [10, 34], "characterOffsetBegin": 127, "originalText": "case", "ArgType": null, "before": " "}, {"index": 25, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [10, 34], "characterOffsetBegin": 132, "originalText": "that", "ArgType": null, "before": " "}, {"index": 26, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 141, "segment_span": [10, 34], "characterOffsetBegin": 137, "originalText": "they", "ArgType": null, "before": " "}, {"index": 27, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 145, "segment_span": [10, 34], "characterOffsetBegin": 142, "originalText": "are", "ArgType": null, "before": " "}, {"index": 28, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 149, "segment_span": [10, 34], "characterOffsetBegin": 146, "originalText": "not", "ArgType": null, "before": " "}, {"index": 29, "word": "allowed", "lemma": "allow", "after": " ", "pos": "VBN", "characterOffsetEnd": 157, "segment_span": [10, 34], "characterOffsetBegin": 150, "originalText": "allowed", "ArgType": null, "before": " "}, {"index": 30, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 160, "segment_span": [10, 34], "characterOffsetBegin": 158, "originalText": "to", "ArgType": null, "before": " "}, {"index": 31, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VB", "characterOffsetEnd": 168, "segment_span": [10, 34], "characterOffsetBegin": 161, "originalText": "rewrite", "ArgType": null, "before": " "}, {"index": 32, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 174, "segment_span": [10, 34], "characterOffsetBegin": 169, "originalText": "their", "ArgType": null, "before": " "}, {"index": 33, "word": "own", "lemma": "own", "after": " ", "pos": "JJ", "characterOffsetEnd": 178, "segment_span": [10, 34], "characterOffsetBegin": 175, "originalText": "own", "ArgType": null, "before": " "}, {"index": 34, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 185, "segment_span": [10, 34], "characterOffsetBegin": 179, "originalText": "output", "ArgType": "dobj", "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 187, "characterOffsetBegin": 186, "originalText": ".", "ArgType": null, "before": " "}], "text": "Johnson ( 0000 ) ( Johnson 1972 ) has shown that such rewrite rules are equivalent to finite state transducers in the special case that they are not allowed to rewrite their own output ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "An", "ArgType": null, "before": ""}, {"index": 2, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 15], "characterOffsetBegin": 3, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 3, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 15], "characterOffsetBegin": 13, "originalText": "for", "ArgType": null, "before": " "}, {"index": 4, "word": "compilation", "lemma": "compilation", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 15], "characterOffsetBegin": 17, "originalText": "compilation", "ArgType": null, "before": " "}, {"index": 5, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 33, "segment_span": [0, 15], "characterOffsetBegin": 29, "originalText": "into", "ArgType": null, "before": " "}, {"index": 6, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 45, "segment_span": [0, 15], "characterOffsetBegin": 34, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 7, "word": "was", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 49, "segment_span": [0, 15], "characterOffsetBegin": 46, "originalText": "was", "ArgType": null, "before": " "}, {"index": 8, "word": "provided", "is_pass": true, "lemma": "provide", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 58, "segment_span": [0, 15], "tense": "N", "characterOffsetBegin": 50, "originalText": "provided", "ArgType": null, "before": " "}, {"index": 9, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [0, 15], "characterOffsetBegin": 59, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 64, "segment_span": [0, 15], "characterOffsetBegin": 63, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 11, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 71, "segment_span": [0, 15], "characterOffsetBegin": 65, "originalText": "Kaplan", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 75, "segment_span": [0, 15], "characterOffsetBegin": 72, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 79, "segment_span": [0, 15], "characterOffsetBegin": 76, "originalText": "Kay", "ArgType": null, "before": " "}, {"index": 14, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 84, "segment_span": [0, 15], "characterOffsetBegin": 80, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 86, "segment_span": [0, 15], "characterOffsetBegin": 85, "originalText": ")", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 89, "characterOffsetBegin": 88, "originalText": ".", "ArgType": null, "before": "  "}], "text": "An algorithm for compilation into transducers was provided by ( Kaplan and Kay 1994 ) ."}, {"tokens": [{"index": 1, "word": "Improvements", "lemma": "Improvements", "after": " ", "pos": "NNP", "characterOffsetEnd": 12, "segment_span": [0, 27], "characterOffsetBegin": 0, "originalText": "Improvements", "ArgType": null, "before": ""}, {"index": 2, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 16, "segment_span": [0, 27], "characterOffsetBegin": 13, "originalText": "and", "ArgType": null, "before": " "}, {"index": 3, "word": "extensions", "lemma": "extension", "after": " ", "pos": "NNS", "characterOffsetEnd": 27, "segment_span": [0, 27], "characterOffsetBegin": 17, "originalText": "extensions", "ArgType": null, "before": " "}, {"index": 4, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 30, "segment_span": [0, 27], "characterOffsetBegin": 28, "originalText": "to", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [0, 27], "characterOffsetBegin": 31, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 27], "characterOffsetBegin": 36, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 7, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 50, "segment_span": [0, 27], "characterOffsetBegin": 46, "originalText": "have", "ArgType": null, "before": " "}, {"index": 8, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 55, "segment_span": [0, 27], "characterOffsetBegin": 51, "originalText": "been", "ArgType": null, "before": " "}, {"index": 9, "word": "provided", "is_pass": true, "lemma": "provide", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 64, "segment_span": [0, 27], "tense": "N", "characterOffsetBegin": 56, "originalText": "provided", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [0, 27], "characterOffsetBegin": 65, "originalText": "by", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 70, "segment_span": [0, 27], "characterOffsetBegin": 69, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 12, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 80, "segment_span": [0, 27], "characterOffsetBegin": 71, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 13, "word": "1995", "lemma": "1995", "after": "  ", "pos": "CD", "characterOffsetEnd": 85, "segment_span": [0, 27], "characterOffsetBegin": 81, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 88, "segment_span": [0, 27], "characterOffsetBegin": 87, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 15, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 99, "segment_span": [0, 27], "characterOffsetBegin": 90, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 16, "word": "1997", "lemma": "1997", "after": "  ", "pos": "CD", "characterOffsetEnd": 104, "segment_span": [0, 27], "characterOffsetBegin": 100, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 107, "segment_span": [0, 27], "characterOffsetBegin": 106, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 18, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 118, "segment_span": [0, 27], "characterOffsetBegin": 109, "originalText": "Karttunen", "ArgType": null, "before": "  "}, {"index": 19, "word": "1996a", "lemma": "1996a", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [0, 27], "characterOffsetBegin": 119, "originalText": "1996a", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 126, "segment_span": [0, 27], "characterOffsetBegin": 125, "originalText": ")", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 131, "segment_span": [0, 27], "characterOffsetBegin": 128, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 134, "segment_span": [0, 27], "characterOffsetBegin": 133, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 23, "word": "Mohri", "lemma": "Mohri", "after": " ", "pos": "NNP", "characterOffsetEnd": 140, "segment_span": [0, 27], "characterOffsetBegin": 135, "originalText": "Mohri", "ArgType": null, "before": " "}, {"index": 24, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 144, "segment_span": [0, 27], "characterOffsetBegin": 141, "originalText": "and", "ArgType": null, "before": " "}, {"index": 25, "word": "Sproat", "lemma": "Sproat", "after": " ", "pos": "NNP", "characterOffsetEnd": 151, "segment_span": [0, 27], "characterOffsetBegin": 145, "originalText": "Sproat", "ArgType": null, "before": " "}, {"index": 26, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 156, "segment_span": [0, 27], "characterOffsetBegin": 152, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 158, "segment_span": [0, 27], "characterOffsetBegin": 157, "originalText": ")", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 161, "characterOffsetBegin": 160, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Improvements and extensions to this algorithm have been provided by ( Karttunen 1995 , Karttunen 1997 , Karttunen 1996a ) and ( Mohri and Sproat 1996 ) ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 16], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 16], "characterOffsetBegin": 8, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 16], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 16], "characterOffsetBegin": 16, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 16], "characterOffsetBegin": 20, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 7, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 34, "segment_span": [0, 16], "characterOffsetBegin": 30, "originalText": "will", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 37, "segment_span": [0, 16], "characterOffsetBegin": 35, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "extended", "is_pass": true, "lemma": "extend", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 38, "originalText": "extended", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 49, "segment_span": [0, 16], "characterOffsetBegin": 47, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "provide", "lemma": "provide", "after": " ", "pos": "VB", "characterOffsetEnd": 57, "segment_span": [0, 16], "characterOffsetBegin": 50, "originalText": "provide", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [0, 16], "characterOffsetBegin": 58, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "limited", "lemma": "limited", "after": " ", "pos": "JJ", "characterOffsetEnd": 67, "segment_span": [0, 16], "characterOffsetBegin": 60, "originalText": "limited", "ArgType": null, "before": " "}, {"index": 14, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 16], "characterOffsetBegin": 68, "originalText": "form", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [0, 16], "characterOffsetBegin": 73, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "backreferencing", "lemma": "backreferencing", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 16], "characterOffsetBegin": 76, "originalText": "backreferencing", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 93, "characterOffsetBegin": 92, "originalText": ".", "ArgType": null, "before": " "}], "text": "In this paper , the algorithm will be extended to provide a limited form of backreferencing ."}, {"tokens": [{"index": 1, "word": "Backreferencing", "lemma": "backreferencing", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 47], "characterOffsetBegin": 0, "originalText": "Backreferencing", "ArgType": "subj", "before": ""}, {"index": 2, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 19, "segment_span": [0, 47], "characterOffsetBegin": 16, "originalText": "has", "ArgType": null, "before": " "}, {"index": 3, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 24, "segment_span": [0, 47], "characterOffsetBegin": 20, "originalText": "been", "ArgType": null, "before": " "}, {"index": 4, "word": "implicit", "lemma": "implicit", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 47], "has_aux": true, "characterOffsetBegin": 25, "originalText": "implicit", "ArgType": "verb", "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [0, 47], "characterOffsetBegin": 34, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [0, 47], "characterOffsetBegin": 37, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 7, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 47], "characterOffsetBegin": 46, "originalText": "research", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 56, "segment_span": [0, 47], "characterOffsetBegin": 55, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 61, "segment_span": [0, 47], "characterOffsetBegin": 57, "originalText": "such", "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 47], "characterOffsetBegin": 62, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [0, 47], "characterOffsetBegin": 65, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [0, 47], "characterOffsetBegin": 68, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 74, "segment_span": [0, 47], "characterOffsetBegin": 72, "originalText": "``", "ArgType": null, "before": " "}, {"index": 14, "word": "batch", "lemma": "batch", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 47], "characterOffsetBegin": 75, "originalText": "batch", "ArgType": null, "before": " "}, {"index": 15, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 86, "segment_span": [0, 47], "characterOffsetBegin": 81, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 16, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 89, "segment_span": [0, 47], "characterOffsetBegin": 87, "originalText": "''", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 92, "segment_span": [0, 47], "characterOffsetBegin": 90, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 95, "segment_span": [0, 47], "characterOffsetBegin": 94, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 19, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 102, "segment_span": [0, 47], "characterOffsetBegin": 96, "originalText": "Kaplan", "ArgType": null, "before": " "}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 106, "segment_span": [0, 47], "characterOffsetBegin": 103, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 110, "segment_span": [0, 47], "characterOffsetBegin": 107, "originalText": "Kay", "ArgType": null, "before": " "}, {"index": 22, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 115, "segment_span": [0, 47], "characterOffsetBegin": 111, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 23, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 117, "segment_span": [0, 47], "characterOffsetBegin": 116, "originalText": ")", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 120, "segment_span": [0, 47], "characterOffsetBegin": 119, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 25, "word": "bracketing", "lemma": "bracket", "after": " ", "pos": "VBG", "characterOffsetEnd": 131, "segment_span": [0, 47], "characterOffsetBegin": 121, "originalText": "bracketing", "ArgType": null, "before": " "}, {"index": 26, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 143, "segment_span": [0, 47], "characterOffsetBegin": 132, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 27, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 147, "segment_span": [0, 47], "characterOffsetBegin": 144, "originalText": "for", "ArgType": null, "before": " "}, {"index": 28, "word": "finite-state", "lemma": "finite-state", "after": " ", "pos": "JJ", "characterOffsetEnd": 160, "segment_span": [0, 47], "characterOffsetBegin": 148, "originalText": "finite-state", "ArgType": null, "before": " "}, {"index": 29, "word": "parsing", "lemma": "parsing", "after": "  ", "pos": "NN", "characterOffsetEnd": 168, "segment_span": [0, 47], "characterOffsetBegin": 161, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 30, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 171, "segment_span": [0, 47], "characterOffsetBegin": 170, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 31, "word": "Karttunen", "lemma": "karttunen", "after": " ", "pos": "NN", "characterOffsetEnd": 181, "segment_span": [0, 47], "characterOffsetBegin": 172, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 32, "word": "1996a", "lemma": "1996a", "after": " ", "pos": "NN", "characterOffsetEnd": 187, "segment_span": [0, 47], "characterOffsetBegin": 182, "originalText": "1996a", "ArgType": null, "before": " "}, {"index": 33, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 189, "segment_span": [0, 47], "characterOffsetBegin": 188, "originalText": ")", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 192, "segment_span": [0, 47], "characterOffsetBegin": 191, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 35, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 196, "segment_span": [0, 47], "characterOffsetBegin": 193, "originalText": "and", "ArgType": null, "before": " "}, {"index": 36, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 200, "segment_span": [0, 47], "characterOffsetBegin": 197, "originalText": "the", "ArgType": null, "before": " "}, {"index": 37, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 203, "segment_span": [0, 47], "characterOffsetBegin": 201, "originalText": "``", "ArgType": null, "before": " "}, {"index": 38, "word": "LocalExtension", "lemma": "LocalExtension", "after": " ", "pos": "NNP", "characterOffsetEnd": 218, "segment_span": [0, 47], "characterOffsetBegin": 204, "originalText": "LocalExtension", "ArgType": null, "before": " "}, {"index": 39, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 221, "segment_span": [0, 47], "characterOffsetBegin": 219, "originalText": "''", "ArgType": null, "before": " "}, {"index": 40, "word": "operation", "lemma": "operation", "after": " ", "pos": "NN", "characterOffsetEnd": 231, "segment_span": [0, 47], "characterOffsetBegin": 222, "originalText": "operation", "ArgType": null, "before": " "}, {"index": 41, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 234, "segment_span": [0, 47], "characterOffsetBegin": 232, "originalText": "of", "ArgType": null, "before": " "}, {"index": 42, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 237, "segment_span": [0, 47], "characterOffsetBegin": 236, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 43, "word": "Roche", "lemma": "Roche", "after": " ", "pos": "NNP", "characterOffsetEnd": 243, "segment_span": [0, 47], "characterOffsetBegin": 238, "originalText": "Roche", "ArgType": null, "before": " "}, {"index": 44, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 247, "segment_span": [0, 47], "characterOffsetBegin": 244, "originalText": "and", "ArgType": null, "before": " "}, {"index": 45, "word": "Schabes", "lemma": "Schabes", "after": " ", "pos": "NNP", "characterOffsetEnd": 255, "segment_span": [0, 47], "characterOffsetBegin": 248, "originalText": "Schabes", "ArgType": null, "before": " "}, {"index": 46, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 260, "segment_span": [0, 47], "characterOffsetBegin": 256, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 47, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 262, "segment_span": [0, 47], "characterOffsetBegin": 261, "originalText": ")", "ArgType": null, "before": " "}, {"index": 48, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 265, "characterOffsetBegin": 264, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Backreferencing has been implicit in previous research , such as in the `` batch rules '' of ( Kaplan and Kay 1994 ) , bracketing transducers for finite-state parsing ( Karttunen 1996a ) , and the `` LocalExtension '' operation of ( Roche and Schabes 1997 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "explicit", "lemma": "explicit", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "explicit", "ArgType": null, "before": " "}, {"index": 3, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 12], "characterOffsetBegin": 13, "originalText": "use", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [0, 12], "characterOffsetBegin": 17, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "backreferencing", "lemma": "backreferencing", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 12], "characterOffsetBegin": 20, "originalText": "backreferencing", "ArgType": null, "before": " "}, {"index": 6, "word": "leads", "lemma": "lead", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 41, "segment_span": [0, 12], "tense": "Z", "characterOffsetBegin": 36, "originalText": "leads", "ArgType": "verb", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 44, "segment_span": [0, 12], "characterOffsetBegin": 42, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 49, "segment_span": [0, 12], "characterOffsetBegin": 45, "originalText": "more", "ArgType": null, "before": " "}, {"index": 9, "word": "elegant", "lemma": "elegant", "after": " ", "pos": "JJ", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 50, "originalText": "elegant", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 61, "segment_span": [0, 12], "characterOffsetBegin": 58, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 69, "segment_span": [0, 12], "characterOffsetBegin": 62, "originalText": "general", "ArgType": null, "before": " "}, {"index": 12, "word": "solutions", "lemma": "solution", "after": " ", "pos": "NNS", "characterOffsetEnd": 79, "segment_span": [0, 12], "characterOffsetBegin": 70, "originalText": "solutions", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 81, "characterOffsetBegin": 80, "originalText": ".", "ArgType": null, "before": " "}], "text": "The explicit use of backreferencing leads to more elegant and general solutions ."}, {"tokens": [{"index": 1, "word": "Backreferencing", "lemma": "backreferencing", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "Backreferencing", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 18, "segment_span": [0, 19], "characterOffsetBegin": 16, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "widely", "lemma": "widely", "after": " ", "pos": "RB", "characterOffsetEnd": 25, "segment_span": [0, 19], "characterOffsetBegin": 19, "originalText": "widely", "ArgType": null, "before": " "}, {"index": 4, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 30, "segment_span": [0, 19], "tense": "N", "characterOffsetBegin": 26, "originalText": "used", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 33, "segment_span": [0, 19], "characterOffsetBegin": 31, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "editors", "lemma": "editor", "after": " ", "pos": "NNS", "characterOffsetEnd": 41, "segment_span": [0, 19], "characterOffsetBegin": 34, "originalText": "editors", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 43, "segment_span": [0, 19], "characterOffsetBegin": 42, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "scripting", "lemma": "script", "after": " ", "pos": "VBG", "characterOffsetEnd": 53, "segment_span": [0, 19], "characterOffsetBegin": 44, "originalText": "scripting", "ArgType": null, "before": " "}, {"index": 9, "word": "languages", "lemma": "language", "after": " ", "pos": "NNS", "characterOffsetEnd": 63, "segment_span": [0, 19], "characterOffsetBegin": 54, "originalText": "languages", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 67, "segment_span": [0, 19], "characterOffsetBegin": 64, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [0, 19], "characterOffsetBegin": 68, "originalText": "other", "ArgType": null, "before": " "}, {"index": 12, "word": "tools", "lemma": "tool", "after": " ", "pos": "NNS", "characterOffsetEnd": 79, "segment_span": [0, 19], "characterOffsetBegin": 74, "originalText": "tools", "ArgType": null, "before": " "}, {"index": 13, "word": "employing", "lemma": "employ", "after": " ", "pos": "VBG", "characterOffsetEnd": 89, "segment_span": [0, 19], "characterOffsetBegin": 80, "originalText": "employing", "ArgType": null, "before": " "}, {"index": 14, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 97, "segment_span": [0, 19], "characterOffsetBegin": 90, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 15, "word": "expressions", "lemma": "expression", "after": "  ", "pos": "NNS", "characterOffsetEnd": 109, "segment_span": [0, 19], "characterOffsetBegin": 98, "originalText": "expressions", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 112, "segment_span": [0, 19], "characterOffsetBegin": 111, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 17, "word": "Friedl", "lemma": "Friedl", "after": " ", "pos": "NNP", "characterOffsetEnd": 119, "segment_span": [0, 19], "characterOffsetBegin": 113, "originalText": "Friedl", "ArgType": null, "before": " "}, {"index": 18, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 124, "segment_span": [0, 19], "characterOffsetBegin": 120, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 126, "segment_span": [0, 19], "characterOffsetBegin": 125, "originalText": ")", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Backreferencing is widely used in editors , scripting languages and other tools employing regular expressions ( Friedl 1997 ) ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 13], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "Emacs", "lemma": "Emacs", "after": " ", "pos": "NNP", "characterOffsetEnd": 19, "segment_span": [0, 13], "characterOffsetBegin": 14, "originalText": "Emacs", "ArgType": "subj", "before": " "}, {"index": 5, "word": "uses", "lemma": "use", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 13], "tense": "Z", "characterOffsetBegin": 20, "originalText": "uses", "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 13], "characterOffsetBegin": 25, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [0, 13], "characterOffsetBegin": 29, "originalText": "special", "ArgType": null, "before": " "}, {"index": 8, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 45, "segment_span": [0, 13], "characterOffsetBegin": 37, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 9, "word": "\\", "lemma": "\\", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 13], "characterOffsetBegin": 46, "originalText": "\\", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 48, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 53, "segment_span": [0, 13], "characterOffsetBegin": 50, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "\\", "lemma": "\\", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 13], "characterOffsetBegin": 54, "originalText": "\\", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 57, "segment_span": [0, 13], "characterOffsetBegin": 56, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 60, "segment_span": [13, 22], "characterOffsetBegin": 58, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "capture", "lemma": "capture", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 68, "segment_span": [13, 22], "tense": "B", "characterOffsetBegin": 61, "originalText": "capture", "ArgType": null, "before": " "}, {"index": 16, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 76, "segment_span": [13, 22], "characterOffsetBegin": 69, "originalText": "strings", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "along", "lemma": "along", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [13, 22], "characterOffsetBegin": 77, "originalText": "along", "ArgType": null, "before": " "}, {"index": 18, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 87, "segment_span": [13, 22], "characterOffsetBegin": 83, "originalText": "with", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 91, "segment_span": [13, 22], "characterOffsetBegin": 88, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "notation", "lemma": "notation", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [13, 22], "characterOffsetBegin": 92, "originalText": "notation", "ArgType": null, "before": " "}, {"index": 21, "word": "\\", "lemma": "\\", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [13, 22], "characterOffsetBegin": 101, "originalText": "\\", "ArgType": null, "before": " "}, {"index": 22, "word": "n", "lemma": "n", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [13, 22], "characterOffsetBegin": 103, "originalText": "n", "ArgType": null, "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 107, "segment_span": [22, 28], "characterOffsetBegin": 105, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "recall", "lemma": "recall", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 114, "segment_span": [22, 28], "tense": "B", "characterOffsetBegin": 108, "originalText": "recall", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [22, 28], "characterOffsetBegin": 115, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "nth", "lemma": "nth", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [22, 28], "characterOffsetBegin": 119, "originalText": "nth", "ArgType": "subj", "before": " "}, {"index": 27, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 127, "segment_span": [22, 28], "characterOffsetBegin": 123, "originalText": "such", "ArgType": null, "before": " "}, {"index": 28, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [22, 28], "characterOffsetBegin": 128, "originalText": "string", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 136, "characterOffsetBegin": 135, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example , Emacs uses the special brackets \\ ( and \\ ) to capture strings along with the notation \\ n to recall the nth such string ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 3], "characterOffsetBegin": 4, "originalText": "expression", "ArgType": "subj", "before": " "}, {"index": 3, "word": "\\", "lemma": "\\", "after": "", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 3], "characterOffsetBegin": 15, "originalText": "\\", "ArgType": "verb", "before": " "}], "text": "The expression \\"}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 1, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "(", "ArgType": null, "before": ""}, {"index": 2, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 2, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "*", "lemma": "*", "after": "", "pos": "SYM", "characterOffsetEnd": 4, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "*", "ArgType": "subj", "before": ""}, {"index": 4, "word": "\\", "lemma": "\\", "after": "", "pos": "SYM", "characterOffsetEnd": 5, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "\\", "ArgType": "verb", "before": ""}], "text": "( a * \\"}, {"tokens": [{"index": 1, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": ")", "ArgType": null, "before": ""}, {"index": 2, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 2, "originalText": "b", "ArgType": null, "before": " "}, {"index": 3, "word": "\\", "lemma": "\\", "after": "", "pos": "NN", "characterOffsetEnd": 4, "segment_span": [0, 3], "characterOffsetBegin": 3, "originalText": "\\", "ArgType": null, "before": ""}, {"index": 4, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 5, "segment_span": [3, 10], "characterOffsetBegin": 4, "originalText": "1", "ArgType": "subj", "before": ""}, {"index": 5, "word": "matches", "lemma": "match", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 13, "segment_span": [3, 10], "tense": "Z", "characterOffsetBegin": 6, "originalText": "matches", "ArgType": null, "before": " "}, {"index": 6, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [3, 10], "characterOffsetBegin": 14, "originalText": "strings", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [3, 10], "characterOffsetBegin": 22, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [3, 10], "characterOffsetBegin": 25, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [3, 10], "characterOffsetBegin": 29, "originalText": "form", "ArgType": null, "before": " "}, {"index": 10, "word": "anban", "lemma": "anban", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [3, 10], "characterOffsetBegin": 34, "originalText": "anban", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 41, "characterOffsetBegin": 40, "originalText": ".", "ArgType": null, "before": " "}], "text": ") b \\ 1 matches strings of the form anban ."}, {"tokens": [{"index": 1, "word": "Unrestricted", "lemma": "unrestricted", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Unrestricted", "ArgType": null, "before": ""}, {"index": 2, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 9], "characterOffsetBegin": 13, "originalText": "use", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [0, 9], "characterOffsetBegin": 17, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "backreferencing", "lemma": "backreferencing", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 9], "characterOffsetBegin": 20, "originalText": "backreferencing", "ArgType": null, "before": " "}, {"index": 5, "word": "thus", "lemma": "thus", "after": " ", "pos": "RB", "characterOffsetEnd": 40, "segment_span": [0, 9], "characterOffsetBegin": 36, "originalText": "thus", "ArgType": null, "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 44, "segment_span": [0, 9], "characterOffsetBegin": 41, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 54, "segment_span": [0, 9], "tense": "B", "characterOffsetBegin": 45, "originalText": "introduce", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "non-regular", "lemma": "non-regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [0, 9], "characterOffsetBegin": 55, "originalText": "non-regular", "ArgType": null, "before": " "}, {"index": 9, "word": "languages", "lemma": "language", "after": " ", "pos": "NNS", "characterOffsetEnd": 76, "segment_span": [0, 9], "characterOffsetBegin": 67, "originalText": "languages", "ArgType": "dobj", "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 78, "characterOffsetBegin": 77, "originalText": ".", "ArgType": null, "before": " "}], "text": "Unrestricted use of backreferencing thus can introduce non-regular languages ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 18], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "NLP", "lemma": "nlp", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 18], "characterOffsetBegin": 4, "originalText": "NLP", "ArgType": null, "before": " "}, {"index": 3, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 18], "characterOffsetBegin": 8, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 4, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 18], "characterOffsetBegin": 15, "originalText": "state", "ArgType": null, "before": " "}, {"index": 5, "word": "calculi", "lemma": "calculus", "after": "  ", "pos": "NNS", "characterOffsetEnd": 28, "segment_span": [0, 18], "characterOffsetBegin": 21, "originalText": "calculi", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 31, "segment_span": [0, 18], "characterOffsetBegin": 30, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 7, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 41, "segment_span": [0, 18], "characterOffsetBegin": 32, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 8, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 44, "segment_span": [0, 18], "characterOffsetBegin": 42, "originalText": "et", "ArgType": null, "before": " "}, {"index": 9, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 48, "segment_span": [0, 18], "characterOffsetBegin": 45, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 10, "word": "1996", "lemma": "1996", "after": "  ", "pos": "CD", "characterOffsetEnd": 53, "segment_span": [0, 18], "characterOffsetBegin": 49, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 56, "segment_span": [0, 18], "characterOffsetBegin": 55, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 12, "word": "van", "lemma": "van", "after": " ", "pos": "NNP", "characterOffsetEnd": 61, "segment_span": [0, 18], "characterOffsetBegin": 58, "originalText": "van", "ArgType": null, "before": "  "}, {"index": 13, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 67, "segment_span": [0, 18], "characterOffsetBegin": 62, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 14, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 72, "segment_span": [0, 18], "characterOffsetBegin": 68, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 74, "segment_span": [0, 18], "characterOffsetBegin": 73, "originalText": ")", "ArgType": null, "before": " "}, {"index": 16, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 80, "segment_span": [0, 18], "characterOffsetBegin": 76, "originalText": "this", "ArgType": "subj", "before": "  "}, {"index": 17, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 83, "segment_span": [0, 18], "characterOffsetBegin": 81, "originalText": "is", "ArgType": null, "before": " "}, {"index": 18, "word": "unacceptable", "lemma": "unacceptable", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [0, 18], "characterOffsetBegin": 84, "originalText": "unacceptable", "ArgType": "verb", "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 98, "characterOffsetBegin": 97, "originalText": ".", "ArgType": null, "before": " "}], "text": "For NLP finite state calculi ( Karttunen et al. 1996 , van Noord 1997 ) this is unacceptable ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "form", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 11, "segment_span": [0, 12], "characterOffsetBegin": 9, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "backreferences", "lemma": "backreference", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 12], "characterOffsetBegin": 12, "originalText": "backreferences", "ArgType": null, "before": " "}, {"index": 5, "word": "introduced", "lemma": "introduce", "after": " ", "pos": "VBN", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 27, "originalText": "introduced", "ArgType": null, "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 12], "characterOffsetBegin": 38, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [0, 12], "characterOffsetBegin": 41, "originalText": "this", "ArgType": null, "before": " "}, {"index": 8, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 12], "characterOffsetBegin": 46, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 9, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 56, "segment_span": [0, 12], "characterOffsetBegin": 52, "originalText": "will", "ArgType": null, "before": " "}, {"index": 10, "word": "therefore", "lemma": "therefore", "after": " ", "pos": "RB", "characterOffsetEnd": 66, "segment_span": [0, 12], "characterOffsetBegin": 57, "originalText": "therefore", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 69, "segment_span": [0, 12], "characterOffsetBegin": 67, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "restricted", "lemma": "restricted", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [0, 12], "has_aux": true, "characterOffsetBegin": 70, "originalText": "restricted", "ArgType": "verb", "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 82, "characterOffsetBegin": 81, "originalText": ".", "ArgType": null, "before": " "}], "text": "The form of backreferences introduced in this paper will therefore be restricted ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "central", "lemma": "central", "after": " ", "pos": "JJ", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 4, "originalText": "central", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 8], "characterOffsetBegin": 12, "originalText": "case", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [0, 8], "characterOffsetBegin": 17, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 20, "originalText": "an", "ArgType": null, "before": " "}, {"index": 6, "word": "allowable", "lemma": "allowable", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "allowable", "ArgType": null, "before": " "}, {"index": 7, "word": "backreference", "lemma": "backreference", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": "backreference", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 49, "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 47, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 51, "characterOffsetBegin": 50, "originalText": ":", "ArgType": null, "before": " "}], "text": "The central case of an allowable backreference is :"}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "says", "lemma": "say", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 9, "segment_span": [0, 2], "tense": "Z", "characterOffsetBegin": 5, "originalText": "says", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [2, 10], "characterOffsetBegin": 10, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [2, 10], "characterOffsetBegin": 15, "originalText": "each", "ArgType": null, "before": " "}, {"index": 5, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [2, 10], "characterOffsetBegin": 20, "originalText": "string", "ArgType": null, "before": " "}, {"index": 6, "word": "x", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [2, 10], "characterOffsetBegin": 27, "originalText": "x", "ArgType": null, "before": " "}, {"index": 7, "word": "preceded", "lemma": "precede", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 37, "segment_span": [2, 10], "tense": "N", "characterOffsetBegin": 29, "originalText": "preceded", "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [2, 10], "characterOffsetBegin": 38, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [2, 10], "characterOffsetBegin": 42, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 55, "segment_span": [2, 10], "characterOffsetBegin": 52, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 11, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 64, "segment_span": [10, 35], "characterOffsetBegin": 56, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 12, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [10, 35], "characterOffsetBegin": 65, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [10, 35], "characterOffsetBegin": 69, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 81, "segment_span": [10, 35], "characterOffsetBegin": 79, "originalText": "is", "ArgType": null, "before": "  "}, {"index": 15, "word": "replaced", "is_pass": true, "lemma": "replace", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 90, "segment_span": [10, 35], "tense": "N", "characterOffsetBegin": 82, "originalText": "replaced", "ArgType": null, "before": " "}, {"index": 16, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 93, "segment_span": [10, 35], "characterOffsetBegin": 91, "originalText": "by", "ArgType": null, "before": " "}, {"index": 17, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [10, 35], "characterOffsetBegin": 94, "originalText": "T", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 97, "segment_span": [10, 35], "characterOffsetBegin": 96, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "x", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [10, 35], "characterOffsetBegin": 98, "originalText": "x", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 101, "segment_span": [10, 35], "characterOffsetBegin": 100, "originalText": ")", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 103, "segment_span": [10, 35], "characterOffsetBegin": 102, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "where", "lemma": "where", "after": "  ", "pos": "WRB", "characterOffsetEnd": 109, "segment_span": [21, 29], "characterOffsetBegin": 104, "originalText": "where", "ArgType": null, "before": " "}, {"index": 23, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [21, 29], "characterOffsetBegin": 111, "originalText": "equation", "ArgType": "subj", "before": "  "}, {"index": 24, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 124, "segment_span": [21, 29], "characterOffsetBegin": 121, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 25, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [21, 29], "characterOffsetBegin": 126, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 26, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 139, "segment_span": [21, 29], "characterOffsetBegin": 136, "originalText": "are", "ArgType": null, "before": "  "}, {"index": 27, "word": "arbitrary", "lemma": "arbitrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 149, "segment_span": [21, 29], "characterOffsetBegin": 140, "originalText": "arbitrary", "ArgType": null, "before": " "}, {"index": 28, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 157, "segment_span": [21, 29], "characterOffsetBegin": 150, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 29, "word": "expressions", "lemma": "expression", "after": " ", "pos": "NNS", "characterOffsetEnd": 169, "segment_span": [21, 29], "characterOffsetBegin": 158, "originalText": "expressions", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 171, "segment_span": [10, 35], "characterOffsetBegin": 170, "originalText": ",", "ArgType": null, "before": " "}, {"index": 31, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 175, "segment_span": [10, 35], "characterOffsetBegin": 172, "originalText": "and", "ArgType": null, "before": " "}, {"index": 32, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 177, "segment_span": [10, 35], "characterOffsetBegin": 176, "originalText": "T", "ArgType": null, "before": " "}, {"index": 33, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 180, "segment_span": [10, 35], "characterOffsetBegin": 178, "originalText": "is", "ArgType": null, "before": " "}, {"index": 34, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 182, "segment_span": [10, 35], "characterOffsetBegin": 181, "originalText": "a", "ArgType": null, "before": " "}, {"index": 35, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 193, "segment_span": [10, 35], "characterOffsetBegin": 183, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 195, "characterOffsetBegin": 194, "originalText": ".", "ArgType": null, "before": " "}], "text": "This says that each string x preceded by equation and followed by equation is replaced by T ( x ) , where equation and equation are arbitrary regular expressions , and T is a transducer ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "contrasts", "lemma": "contrast", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 14, "segment_span": [0, 21], "tense": "Z", "characterOffsetBegin": 5, "originalText": "contrasts", "ArgType": "verb", "before": " "}, {"index": 3, "word": "sharply", "lemma": "sharply", "after": " ", "pos": "RB", "characterOffsetEnd": 22, "segment_span": [0, 21], "characterOffsetBegin": 15, "originalText": "sharply", "ArgType": null, "before": " "}, {"index": 4, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 21], "characterOffsetBegin": 23, "originalText": "with", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 21], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "rewriting", "lemma": "rewrite", "after": " ", "pos": "VBG", "characterOffsetEnd": 41, "segment_span": [0, 21], "characterOffsetBegin": 32, "originalText": "rewriting", "ArgType": null, "before": " "}, {"index": 7, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 47, "segment_span": [0, 21], "characterOffsetBegin": 42, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 52, "segment_span": [7, 20], "characterOffsetBegin": 48, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 9, "word": "follow", "lemma": "follow", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 59, "segment_span": [7, 20], "tense": "P", "characterOffsetBegin": 53, "originalText": "follow", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 63, "segment_span": [7, 20], "characterOffsetBegin": 60, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "tradition", "lemma": "tradition", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [7, 20], "characterOffsetBegin": 64, "originalText": "tradition", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [7, 20], "characterOffsetBegin": 74, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 84, "segment_span": [7, 20], "characterOffsetBegin": 78, "originalText": "Kaplan", "ArgType": null, "before": "  "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 86, "segment_span": [7, 20], "characterOffsetBegin": 85, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 90, "segment_span": [7, 20], "characterOffsetBegin": 86, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 91, "segment_span": [7, 20], "characterOffsetBegin": 90, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 94, "segment_span": [7, 20], "characterOffsetBegin": 93, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 18, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 99, "segment_span": [7, 20], "characterOffsetBegin": 96, "originalText": "Kay", "ArgType": null, "before": "  "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 101, "segment_span": [7, 20], "characterOffsetBegin": 100, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 105, "segment_span": [7, 20], "characterOffsetBegin": 101, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 106, "segment_span": [0, 21], "characterOffsetBegin": 105, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 109, "characterOffsetBegin": 108, "originalText": ":", "ArgType": null, "before": "  "}], "text": "This contrasts sharply with the rewriting rules that follow the tradition of Kaplan ( 0000 ) & Kay ( 0000 ) :"}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 21], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 21], "characterOffsetBegin": 8, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 21], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 21], "characterOffsetBegin": 15, "originalText": "any", "ArgType": null, "before": " "}, {"index": 6, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 21], "characterOffsetBegin": 19, "originalText": "string", "ArgType": null, "before": " "}, {"index": 7, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 21], "characterOffsetBegin": 26, "originalText": "from", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 21], "characterOffsetBegin": 31, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "language", "lemma": "language", "after": "  ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 21], "characterOffsetBegin": 35, "originalText": "language", "ArgType": null, "before": " "}, {"index": 10, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 21], "characterOffsetBegin": 45, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 57, "segment_span": [0, 21], "characterOffsetBegin": 55, "originalText": "is", "ArgType": null, "before": "  "}, {"index": 12, "word": "replaced", "is_pass": true, "lemma": "replace", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 66, "segment_span": [0, 21], "tense": "N", "characterOffsetBegin": 58, "originalText": "replaced", "ArgType": null, "before": " "}, {"index": 13, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [0, 21], "characterOffsetBegin": 67, "originalText": "by", "ArgType": null, "before": " "}, {"index": 14, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 73, "segment_span": [0, 21], "characterOffsetBegin": 70, "originalText": "any", "ArgType": null, "before": " "}, {"index": 15, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 21], "characterOffsetBegin": 74, "originalText": "string", "ArgType": null, "before": " "}, {"index": 16, "word": "independently", "lemma": "independently", "after": " ", "pos": "RB", "characterOffsetEnd": 94, "segment_span": [0, 21], "characterOffsetBegin": 81, "originalText": "independently", "ArgType": null, "before": " "}, {"index": 17, "word": "chosen", "lemma": "choose", "after": " ", "pos": "VBN", "characterOffsetEnd": 101, "segment_span": [0, 21], "characterOffsetBegin": 95, "originalText": "chosen", "ArgType": null, "before": " "}, {"index": 18, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 106, "segment_span": [0, 21], "characterOffsetBegin": 102, "originalText": "from", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [0, 21], "characterOffsetBegin": 107, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "language", "lemma": "language", "after": "  ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 21], "characterOffsetBegin": 111, "originalText": "language", "ArgType": null, "before": " "}, {"index": 21, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 129, "segment_span": [0, 21], "characterOffsetBegin": 121, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 132, "characterOffsetBegin": 131, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In this case , any string from the language equation is replaced by any string independently chosen from the language equation ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 11], "characterOffsetBegin": 3, "originalText": "also", "ArgType": null, "before": " "}, {"index": 3, "word": "allow", "lemma": "allow", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 8, "originalText": "allow", "ArgType": "verb", "before": " "}, {"index": 4, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 14, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "non-permuting", "lemma": "non-permuting", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "non-permuting", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 39, "originalText": ")", "ArgType": null, "before": " "}, {"index": 8, "word": "backreferences", "lemma": "backreference", "after": " ", "pos": "NNS", "characterOffsetEnd": 55, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "backreferences", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [0, 11], "characterOffsetBegin": 56, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 62, "segment_span": [0, 11], "characterOffsetBegin": 59, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 11], "characterOffsetBegin": 63, "originalText": "form", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 69, "characterOffsetBegin": 68, "originalText": ":", "ArgType": null, "before": " "}], "text": "We also allow multiple ( non-permuting ) backreferences of the form :"}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "Since", "ArgType": null, "before": ""}, {"index": 2, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 17, "segment_span": [0, 6], "characterOffsetBegin": 6, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 21, "segment_span": [0, 6], "characterOffsetBegin": 18, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "closed", "is_pass": true, "lemma": "close", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 28, "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 22, "originalText": "closed", "ArgType": null, "before": " "}, {"index": 5, "word": "under", "lemma": "under", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 6], "characterOffsetBegin": 29, "originalText": "under", "ArgType": null, "before": " "}, {"index": 6, "word": "concatenation", "lemma": "concatenation", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 6], "characterOffsetBegin": 35, "originalText": "concatenation", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 50, "segment_span": [6, 19], "characterOffsetBegin": 49, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "handling", "lemma": "handle", "after": " ", "pos": "VBG", "characterOffsetEnd": 59, "segment_span": [6, 19], "characterOffsetBegin": 51, "originalText": "handling", "ArgType": null, "before": " "}, {"index": 9, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 68, "segment_span": [6, 19], "characterOffsetBegin": 60, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 10, "word": "backreferences", "lemma": "backreference", "after": " ", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [6, 19], "characterOffsetBegin": 69, "originalText": "backreferences", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "reduces", "lemma": "reduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 91, "segment_span": [6, 19], "tense": "Z", "characterOffsetBegin": 84, "originalText": "reduces", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 94, "segment_span": [6, 19], "characterOffsetBegin": 92, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [6, 19], "characterOffsetBegin": 95, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [6, 19], "characterOffsetBegin": 99, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [6, 19], "characterOffsetBegin": 107, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "handling", "lemma": "handle", "after": " ", "pos": "VBG", "characterOffsetEnd": 118, "segment_span": [6, 19], "characterOffsetBegin": 110, "originalText": "handling", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 120, "segment_span": [6, 19], "characterOffsetBegin": 119, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 127, "segment_span": [6, 19], "characterOffsetBegin": 121, "originalText": "single", "ArgType": null, "before": " "}, {"index": 19, "word": "backreference", "lemma": "backreference", "after": " ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [6, 19], "characterOffsetBegin": 128, "originalText": "backreference", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ":", "ArgType": null, "before": " "}], "text": "Since transducers are closed under concatenation , handling multiple backreferences reduces to the problem of handling a single backreference :"}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 3], "characterOffsetBegin": 2, "originalText": "problem", "ArgType": "subj", "before": " "}, {"index": 3, "word": "arises", "lemma": "arise", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 16, "segment_span": [0, 3], "tense": "Z", "characterOffsetBegin": 10, "originalText": "arises", "ArgType": "verb", "before": " "}, {"index": 4, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [3, 16], "characterOffsetBegin": 17, "originalText": "if", "ArgType": null, "before": " "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 22, "segment_span": [3, 16], "characterOffsetBegin": 20, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "want", "lemma": "want", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 27, "segment_span": [3, 16], "tense": "P", "characterOffsetBegin": 23, "originalText": "want", "ArgType": null, "before": " "}, {"index": 7, "word": "capturing", "lemma": "capture", "after": " ", "pos": "VBG", "characterOffsetEnd": 37, "segment_span": [3, 16], "characterOffsetBegin": 28, "originalText": "capturing", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 40, "segment_span": [3, 16], "characterOffsetBegin": 38, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "follow", "lemma": "follow", "after": " ", "pos": "VB", "characterOffsetEnd": 47, "segment_span": [3, 16], "characterOffsetBegin": 41, "originalText": "follow", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [3, 16], "characterOffsetBegin": 48, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "POSIX", "lemma": "POSIX", "after": " ", "pos": "NNP", "characterOffsetEnd": 57, "segment_span": [3, 16], "characterOffsetBegin": 52, "originalText": "POSIX", "ArgType": null, "before": " "}, {"index": 12, "word": "standard", "lemma": "standard", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [3, 16], "characterOffsetBegin": 58, "originalText": "standard", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "requiring", "lemma": "require", "after": " ", "pos": "VBG", "characterOffsetEnd": 76, "segment_span": [3, 16], "characterOffsetBegin": 67, "originalText": "requiring", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [3, 16], "characterOffsetBegin": 77, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "longest-capture", "lemma": "longest-capture", "after": " ", "pos": "JJ", "characterOffsetEnd": 94, "segment_span": [3, 16], "characterOffsetBegin": 79, "originalText": "longest-capture", "ArgType": null, "before": " "}, {"index": 16, "word": "strategy", "lemma": "strategy", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [3, 16], "characterOffsetBegin": 95, "originalText": "strategy", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 105, "characterOffsetBegin": 104, "originalText": ".", "ArgType": null, "before": " "}], "text": "A problem arises if we want capturing to follow the POSIX standard requiring a longest-capture strategy ."}, {"tokens": [{"index": 1, "word": "Friedl", "lemma": "Friedl", "after": " ", "pos": "NNP", "characterOffsetEnd": 6, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "Friedl", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 8, "segment_span": [0, 10], "characterOffsetBegin": 7, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 12, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "   ", "pos": "-RRB-", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 12, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 17, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "(", "ArgType": null, "before": "   "}, {"index": 6, "word": "Friedl", "lemma": "Friedl", "after": " ", "pos": "NNP", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 18, "originalText": "Friedl", "ArgType": null, "before": " "}, {"index": 7, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 29, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 31, "segment_span": [0, 10], "characterOffsetBegin": 30, "originalText": ")", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 34, "segment_span": [0, 10], "characterOffsetBegin": 33, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 10, "word": "p", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "p", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 38, "characterOffsetBegin": 37, "originalText": ".", "ArgType": null, "before": " "}], "text": "Friedl ( 0000 ) ( Friedl 1997 ) ( p ."}, {"tokens": [{"index": 1, "word": "117", "lemma": "117", "after": " ", "pos": "CD", "characterOffsetEnd": 3, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "117", "ArgType": null, "before": ""}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 5, "segment_span": [0, 21], "characterOffsetBegin": 4, "originalText": ")", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 7, "segment_span": [0, 21], "characterOffsetBegin": 6, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 11, "segment_span": [0, 21], "characterOffsetBegin": 8, "originalText": "for", "ArgType": null, "before": " "}, {"index": 5, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 21], "characterOffsetBegin": 12, "originalText": "example", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [0, 21], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "discusses", "lemma": "discuss", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 31, "segment_span": [0, 21], "tense": "Z", "characterOffsetBegin": 22, "originalText": "discusses", "ArgType": null, "before": " "}, {"index": 8, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 40, "segment_span": [0, 21], "characterOffsetBegin": 32, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 21], "characterOffsetBegin": 41, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [0, 21], "characterOffsetBegin": 45, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 11, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 21], "characterOffsetBegin": 53, "originalText": "expression", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 65, "segment_span": [0, 21], "characterOffsetBegin": 64, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": "  ", "pos": "TO", "characterOffsetEnd": 68, "segment_span": [0, 21], "characterOffsetBegin": 66, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 21], "characterOffsetBegin": 70, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 15, "word": "top", "lemma": "top", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [0, 21], "characterOffsetBegin": 80, "originalText": "top", "ArgType": null, "before": "  "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 85, "segment_span": [0, 21], "characterOffsetBegin": 84, "originalText": ")", "ArgType": null, "before": " "}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 87, "segment_span": [0, 21], "characterOffsetBegin": 86, "originalText": "(", "ArgType": null, "before": " "}, {"index": 18, "word": "o", "lemma": "o", "after": "  ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [0, 21], "characterOffsetBegin": 88, "originalText": "o", "ArgType": null, "before": " "}, {"index": 19, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [0, 21], "characterOffsetBegin": 91, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 20, "word": "polo", "lemma": "polo", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 21], "characterOffsetBegin": 101, "originalText": "polo", "ArgType": null, "before": "  "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 107, "segment_span": [0, 21], "characterOffsetBegin": 106, "originalText": ")", "ArgType": null, "before": " "}, {"index": 22, "word": "?", "lemma": "?", "after": "", "pos": ".", "characterOffsetEnd": 109, "characterOffsetBegin": 108, "originalText": "?", "ArgType": null, "before": " "}], "text": "117 ) , for example , discusses matching the regular expression ( to equation top ) ( o equation polo ) ?"}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 1, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "(", "ArgType": null, "before": ""}, {"index": 2, "word": "gical", "lemma": "gical", "after": "  ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 4], "characterOffsetBegin": 2, "originalText": "gical", "ArgType": null, "before": " "}, {"index": 3, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 4], "characterOffsetBegin": 9, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 4, "word": "o", "lemma": "o", "after": "", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 4], "characterOffsetBegin": 19, "originalText": "o", "ArgType": null, "before": "  "}, {"index": 5, "word": "?", "lemma": "?", "after": "", "pos": ".", "characterOffsetEnd": 21, "characterOffsetBegin": 20, "originalText": "?", "ArgType": null, "before": ""}], "text": "( gical equation o ?"}, {"tokens": [{"index": 1, "word": "logical", "lemma": "logical", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "logical", "ArgType": null, "before": ""}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 9, "segment_span": [0, 7], "characterOffsetBegin": 8, "originalText": ")", "ArgType": null, "before": " "}, {"index": 3, "word": "against", "lemma": "against", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [0, 7], "characterOffsetBegin": 10, "originalText": "against", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 7], "characterOffsetBegin": 18, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 7], "characterOffsetBegin": 22, "originalText": "word", "ArgType": null, "before": " "}, {"index": 6, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 28, "segment_span": [0, 7], "characterOffsetBegin": 27, "originalText": ":", "ArgType": null, "before": " "}, {"index": 7, "word": "topological", "lemma": "topological", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 7], "characterOffsetBegin": 29, "originalText": "topological", "ArgType": null, "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 42, "characterOffsetBegin": 41, "originalText": ".", "ArgType": null, "before": " "}], "text": "logical ) against the word : topological ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 28], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "desired", "lemma": "desire", "after": " ", "pos": "VBN", "characterOffsetEnd": 11, "segment_span": [0, 28], "characterOffsetBegin": 4, "originalText": "desired", "ArgType": null, "before": " "}, {"index": 3, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 28], "characterOffsetBegin": 12, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 21, "segment_span": [0, 28], "tense": "Z", "characterOffsetBegin": 19, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [4, 27], "characterOffsetBegin": 22, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 28, "segment_span": [4, 27], "characterOffsetBegin": 27, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "once", "lemma": "once", "after": " ", "pos": "RB", "characterOffsetEnd": 33, "segment_span": [4, 27], "characterOffsetBegin": 29, "originalText": "once", "ArgType": null, "before": " "}, {"index": 8, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [4, 27], "characterOffsetBegin": 34, "originalText": "an", "ArgType": null, "before": " "}, {"index": 9, "word": "overall", "lemma": "overall", "after": " ", "pos": "JJ", "characterOffsetEnd": 44, "segment_span": [4, 27], "characterOffsetBegin": 37, "originalText": "overall", "ArgType": null, "before": " "}, {"index": 10, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [4, 27], "characterOffsetBegin": 45, "originalText": "match", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 53, "segment_span": [4, 27], "characterOffsetBegin": 51, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "established", "lemma": "establish", "after": " ", "pos": "VBN", "characterOffsetEnd": 65, "segment_span": [4, 27], "characterOffsetBegin": 54, "originalText": "established", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 67, "segment_span": [4, 27], "characterOffsetBegin": 66, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [4, 27], "characterOffsetBegin": 68, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [4, 27], "characterOffsetBegin": 72, "originalText": "first", "ArgType": null, "before": " "}, {"index": 16, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [4, 27], "characterOffsetBegin": 78, "originalText": "set", "ArgType": "subj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [4, 27], "characterOffsetBegin": 82, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "parentheses", "lemma": "parenthesis", "after": " ", "pos": "NNS", "characterOffsetEnd": 96, "segment_span": [4, 27], "characterOffsetBegin": 85, "originalText": "parentheses", "ArgType": null, "before": " "}, {"index": 19, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 103, "segment_span": [4, 27], "characterOffsetBegin": 97, "originalText": "should", "ArgType": null, "before": " "}, {"index": 20, "word": "capture", "lemma": "capture", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 111, "segment_span": [4, 27], "tense": "B", "characterOffsetBegin": 104, "originalText": "capture", "has_aux": true, "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 115, "segment_span": [4, 27], "characterOffsetBegin": 112, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 123, "segment_span": [4, 27], "characterOffsetBegin": 116, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 23, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [4, 27], "characterOffsetBegin": 124, "originalText": "string", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 139, "segment_span": [4, 27], "characterOffsetBegin": 131, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 141, "segment_span": [4, 27], "characterOffsetBegin": 140, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "top", "lemma": "top", "after": " ", "pos": "JJ", "characterOffsetEnd": 145, "segment_span": [4, 27], "characterOffsetBegin": 142, "originalText": "top", "ArgType": null, "before": " "}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 147, "segment_span": [4, 27], "characterOffsetBegin": 146, "originalText": ")", "ArgType": null, "before": " "}, {"index": 28, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 149, "segment_span": [0, 28], "characterOffsetBegin": 148, "originalText": ";", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 153, "segment_span": [28, 49], "characterOffsetBegin": 150, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 160, "segment_span": [28, 49], "characterOffsetBegin": 154, "originalText": "second", "ArgType": null, "before": " "}, {"index": 31, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [28, 49], "characterOffsetBegin": 161, "originalText": "set", "ArgType": "subj", "before": " "}, {"index": 32, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 171, "segment_span": [28, 49], "characterOffsetBegin": 165, "originalText": "should", "ArgType": null, "before": " "}, {"index": 33, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 176, "segment_span": [28, 49], "characterOffsetBegin": 172, "originalText": "then", "ArgType": null, "before": " "}, {"index": 34, "word": "match", "lemma": "match", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 182, "segment_span": [28, 49], "tense": "B", "characterOffsetBegin": 177, "originalText": "match", "has_aux": true, "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 186, "segment_span": [28, 49], "characterOffsetBegin": 183, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 194, "segment_span": [28, 49], "characterOffsetBegin": 187, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 37, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 201, "segment_span": [28, 49], "characterOffsetBegin": 195, "originalText": "string", "ArgType": "dobj", "before": " "}, {"index": 38, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 210, "segment_span": [28, 49], "characterOffsetBegin": 202, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 39, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 215, "segment_span": [28, 49], "characterOffsetBegin": 211, "originalText": "from", "ArgType": null, "before": " "}, {"index": 40, "word": "what", "lemma": "what", "after": "", "pos": "WP", "characterOffsetEnd": 220, "segment_span": [28, 49], "characterOffsetBegin": 216, "originalText": "what", "ArgType": null, "before": " "}, {"index": 41, "word": "'s", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 222, "segment_span": [28, 49], "characterOffsetBegin": 220, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 42, "word": "left", "lemma": "left", "after": " ", "pos": "NN", "characterOffsetEnd": 227, "segment_span": [28, 49], "characterOffsetBegin": 223, "originalText": "left", "ArgType": null, "before": " "}, {"index": 43, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 229, "segment_span": [28, 49], "characterOffsetBegin": 228, "originalText": "(", "ArgType": null, "before": " "}, {"index": 44, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 231, "segment_span": [28, 49], "characterOffsetBegin": 230, "originalText": "o", "ArgType": null, "before": " "}, {"index": 45, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 233, "segment_span": [28, 49], "characterOffsetBegin": 232, "originalText": ")", "ArgType": null, "before": " "}, {"index": 46, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 235, "segment_span": [28, 49], "characterOffsetBegin": 234, "originalText": ",", "ArgType": null, "before": " "}, {"index": 47, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 239, "segment_span": [28, 49], "characterOffsetBegin": 236, "originalText": "and", "ArgType": null, "before": " "}, {"index": 48, "word": "so", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 242, "segment_span": [28, 49], "characterOffsetBegin": 240, "originalText": "so", "ArgType": null, "before": " "}, {"index": 49, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 245, "segment_span": [28, 49], "characterOffsetBegin": 243, "originalText": "on", "ArgType": null, "before": " "}, {"index": 50, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 247, "characterOffsetBegin": 246, "originalText": ".", "ArgType": null, "before": " "}], "text": "The desired result is that ( once an overall match is established ) the first set of parentheses should capture the longest string possible ( top ) ; the second set should then match the longest string possible from what 's left ( o ) , and so on ."}, {"tokens": [{"index": 1, "word": "Such", "lemma": "such", "after": " ", "pos": "PDT", "characterOffsetEnd": 4, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "Such", "ArgType": null, "before": ""}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 13], "characterOffsetBegin": 5, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "left-most", "lemma": "left-most", "after": " ", "pos": "JJ", "characterOffsetEnd": 16, "segment_span": [0, 13], "characterOffsetBegin": 7, "originalText": "left-most", "ArgType": null, "before": " "}, {"index": 4, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 24, "segment_span": [0, 13], "characterOffsetBegin": 17, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 5, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 13], "characterOffsetBegin": 25, "originalText": "match", "ArgType": null, "before": " "}, {"index": 6, "word": "concatenation", "lemma": "concatenation", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 13], "characterOffsetBegin": 31, "originalText": "concatenation", "ArgType": null, "before": " "}, {"index": 7, "word": "operation", "lemma": "operation", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 13], "characterOffsetBegin": 45, "originalText": "operation", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 57, "segment_span": [0, 13], "characterOffsetBegin": 55, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "described", "is_pass": true, "lemma": "describe", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 67, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 58, "originalText": "described", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 13], "characterOffsetBegin": 68, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 13], "characterOffsetBegin": 72, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 12, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 83, "segment_span": [0, 13], "characterOffsetBegin": 82, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 13, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 89, "segment_span": [0, 13], "characterOffsetBegin": 85, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 92, "characterOffsetBegin": 91, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Such a left-most longest match concatenation operation is described in equation ; CREF ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 17], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 16, "segment_span": [0, 17], "characterOffsetBegin": 7, "originalText": "following", "ArgType": null, "before": " "}, {"index": 4, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 17], "characterOffsetBegin": 17, "originalText": "section", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 26, "segment_span": [0, 17], "characterOffsetBegin": 25, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 29, "segment_span": [0, 17], "characterOffsetBegin": 27, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "initially", "lemma": "initially", "after": " ", "pos": "RB", "characterOffsetEnd": 39, "segment_span": [0, 17], "characterOffsetBegin": 30, "originalText": "initially", "ArgType": null, "before": " "}, {"index": 8, "word": "concentrate", "lemma": "concentrate", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 51, "segment_span": [0, 17], "tense": "P", "characterOffsetBegin": 40, "originalText": "concentrate", "ArgType": "verb", "before": " "}, {"index": 9, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 17], "characterOffsetBegin": 52, "originalText": "on", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 17], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [0, 17], "characterOffsetBegin": 59, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 12, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 17], "characterOffsetBegin": 66, "originalText": "case", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [0, 17], "characterOffsetBegin": 71, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "  ", "pos": "-LRB-", "characterOffsetEnd": 75, "segment_span": [0, 17], "characterOffsetBegin": 74, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "CREF", "lemma": "cref", "after": "  ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 17], "characterOffsetBegin": 77, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 84, "segment_span": [0, 17], "characterOffsetBegin": 83, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 17, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 88, "segment_span": [0, 17], "characterOffsetBegin": 85, "originalText": "and", "ArgType": null, "before": " "}, {"index": 18, "word": "show", "lemma": "show", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 93, "segment_span": [17, 18], "tense": "B", "characterOffsetBegin": 89, "originalText": "show", "ArgType": null, "before": " "}, {"index": 19, "word": "how", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 97, "segment_span": [18, 41], "characterOffsetBegin": 94, "originalText": "how", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "  ", "pos": "-LRB-", "characterOffsetEnd": 99, "segment_span": [18, 41], "characterOffsetBegin": 98, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "CREF", "lemma": "cref", "after": "  ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [18, 41], "characterOffsetBegin": 101, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 108, "segment_span": [18, 41], "characterOffsetBegin": 107, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 23, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 112, "segment_span": [18, 41], "characterOffsetBegin": 109, "originalText": "may", "ArgType": null, "before": " "}, {"index": 24, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 115, "segment_span": [18, 41], "characterOffsetBegin": 113, "originalText": "be", "ArgType": null, "before": " "}, {"index": 25, "word": "compiled", "is_pass": true, "lemma": "compile", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 124, "segment_span": [18, 41], "tense": "N", "characterOffsetBegin": 116, "originalText": "compiled", "has_aux": true, "ArgType": null, "before": " "}, {"index": 26, "word": "assuming", "lemma": "assume", "after": " ", "pos": "VBG", "characterOffsetEnd": 133, "segment_span": [18, 41], "characterOffsetBegin": 125, "originalText": "assuming", "ArgType": null, "before": " "}, {"index": 27, "word": "left-to-right", "lemma": "left-to-right", "after": " ", "pos": "JJ", "characterOffsetEnd": 147, "segment_span": [18, 41], "characterOffsetBegin": 134, "originalText": "left-to-right", "ArgType": null, "before": " "}, {"index": 28, "word": "processing", "lemma": "processing", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [18, 41], "characterOffsetBegin": 148, "originalText": "processing", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "along", "lemma": "along", "after": " ", "pos": "IN", "characterOffsetEnd": 164, "segment_span": [18, 41], "characterOffsetBegin": 159, "originalText": "along", "ArgType": null, "before": " "}, {"index": 30, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 169, "segment_span": [18, 41], "characterOffsetBegin": 165, "originalText": "with", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 173, "segment_span": [18, 41], "characterOffsetBegin": 170, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "overall", "lemma": "overall", "after": " ", "pos": "JJ", "characterOffsetEnd": 181, "segment_span": [18, 41], "characterOffsetBegin": 174, "originalText": "overall", "ArgType": null, "before": " "}, {"index": 33, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 189, "segment_span": [18, 41], "characterOffsetBegin": 182, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 34, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 195, "segment_span": [18, 41], "characterOffsetBegin": 190, "originalText": "match", "ArgType": null, "before": " "}, {"index": 35, "word": "strategy", "lemma": "strategy", "after": " ", "pos": "NN", "characterOffsetEnd": 204, "segment_span": [18, 41], "characterOffsetBegin": 196, "originalText": "strategy", "ArgType": null, "before": " "}, {"index": 36, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 214, "segment_span": [18, 41], "characterOffsetBegin": 205, "originalText": "described", "ArgType": null, "before": " "}, {"index": 37, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 217, "segment_span": [18, 41], "characterOffsetBegin": 215, "originalText": "by", "ArgType": null, "before": " "}, {"index": 38, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 220, "segment_span": [18, 41], "characterOffsetBegin": 219, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 39, "word": "Karttunen", "lemma": "karttunen", "after": " ", "pos": "NN", "characterOffsetEnd": 230, "segment_span": [18, 41], "characterOffsetBegin": 221, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 40, "word": "1996a", "lemma": "1996a", "after": " ", "pos": "NN", "characterOffsetEnd": 236, "segment_span": [18, 41], "characterOffsetBegin": 231, "originalText": "1996a", "ArgType": null, "before": " "}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 238, "segment_span": [18, 41], "characterOffsetBegin": 237, "originalText": ")", "ArgType": null, "before": " "}, {"index": 42, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 241, "characterOffsetBegin": 240, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In the following section , we initially concentrate on the simple case in ( CREF ) and show how ( CREF ) may be compiled assuming left-to-right processing along with the overall longest match strategy described by ( Karttunen 1996a ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 28], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "major", "lemma": "major", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 28], "characterOffsetBegin": 4, "originalText": "major", "ArgType": null, "before": " "}, {"index": 3, "word": "components", "lemma": "component", "after": " ", "pos": "NNS", "characterOffsetEnd": 20, "segment_span": [0, 28], "characterOffsetBegin": 10, "originalText": "components", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 28], "characterOffsetBegin": 21, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [0, 28], "characterOffsetBegin": 24, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 28], "characterOffsetBegin": 28, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 41, "segment_span": [0, 28], "characterOffsetBegin": 38, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 45, "segment_span": [0, 28], "characterOffsetBegin": 42, "originalText": "not", "ArgType": null, "before": " "}, {"index": 9, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 49, "segment_span": [0, 28], "characterOffsetBegin": 46, "originalText": "new", "ArgType": "verb", "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 51, "segment_span": [0, 28], "characterOffsetBegin": 50, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 55, "segment_span": [0, 28], "characterOffsetBegin": 52, "originalText": "but", "ArgType": null, "before": " "}, {"index": 12, "word": "straightforward", "lemma": "straightforward", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [0, 28], "characterOffsetBegin": 56, "originalText": "straightforward", "ArgType": null, "before": " "}, {"index": 13, "word": "modifications", "lemma": "modification", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [0, 28], "characterOffsetBegin": 72, "originalText": "modifications", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [0, 28], "characterOffsetBegin": 86, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "components", "lemma": "component", "after": " ", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [0, 28], "characterOffsetBegin": 89, "originalText": "components", "ArgType": null, "before": " "}, {"index": 16, "word": "presented", "lemma": "present", "after": " ", "pos": "VBN", "characterOffsetEnd": 109, "segment_span": [0, 28], "characterOffsetBegin": 100, "originalText": "presented", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 112, "segment_span": [0, 28], "characterOffsetBegin": 110, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 115, "segment_span": [0, 28], "characterOffsetBegin": 114, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 19, "word": "Karttunen", "lemma": "karttunen", "after": " ", "pos": "NN", "characterOffsetEnd": 125, "segment_span": [0, 28], "characterOffsetBegin": 116, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 20, "word": "1996a", "lemma": "1996a", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [0, 28], "characterOffsetBegin": 126, "originalText": "1996a", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 133, "segment_span": [0, 28], "characterOffsetBegin": 132, "originalText": ")", "ArgType": null, "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 138, "segment_span": [0, 28], "characterOffsetBegin": 135, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 141, "segment_span": [0, 28], "characterOffsetBegin": 140, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 24, "word": "Mohri", "lemma": "Mohri", "after": " ", "pos": "NNP", "characterOffsetEnd": 147, "segment_span": [0, 28], "characterOffsetBegin": 142, "originalText": "Mohri", "ArgType": null, "before": " "}, {"index": 25, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 151, "segment_span": [0, 28], "characterOffsetBegin": 148, "originalText": "and", "ArgType": null, "before": " "}, {"index": 26, "word": "Sproat", "lemma": "Sproat", "after": " ", "pos": "NNP", "characterOffsetEnd": 158, "segment_span": [0, 28], "characterOffsetBegin": 152, "originalText": "Sproat", "ArgType": null, "before": " "}, {"index": 27, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 163, "segment_span": [0, 28], "characterOffsetBegin": 159, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 165, "segment_span": [0, 28], "characterOffsetBegin": 164, "originalText": ")", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 168, "characterOffsetBegin": 167, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The major components of the algorithm are not new , but straightforward modifications of components presented in ( Karttunen 1996a ) and ( Mohri and Sproat 1996 ) ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "improve", "lemma": "improve", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 10, "segment_span": [0, 5], "tense": "P", "characterOffsetBegin": 3, "originalText": "improve", "ArgType": "verb", "before": " "}, {"index": 3, "word": "upon", "lemma": "upon", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 5], "characterOffsetBegin": 11, "originalText": "upon", "ArgType": null, "before": " "}, {"index": 4, "word": "existing", "lemma": "exist", "after": " ", "pos": "VBG", "characterOffsetEnd": 24, "segment_span": [0, 5], "characterOffsetBegin": 16, "originalText": "existing", "ArgType": null, "before": " "}, {"index": 5, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 35, "segment_span": [0, 5], "characterOffsetBegin": 25, "originalText": "approaches", "ArgType": null, "before": " "}, {"index": 6, "word": "because", "lemma": "because", "after": " ", "pos": "IN", "characterOffsetEnd": 43, "segment_span": [5, 22], "characterOffsetBegin": 36, "originalText": "because", "ArgType": null, "before": " "}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 46, "segment_span": [5, 22], "characterOffsetBegin": 44, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "solve", "lemma": "solve", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 52, "segment_span": [5, 22], "tense": "P", "characterOffsetBegin": 47, "originalText": "solve", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [5, 22], "characterOffsetBegin": 53, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [5, 22], "characterOffsetBegin": 55, "originalText": "problem", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "concerning", "lemma": "concern", "after": " ", "pos": "VBG", "characterOffsetEnd": 73, "segment_span": [5, 22], "characterOffsetBegin": 63, "originalText": "concerning", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 77, "segment_span": [5, 22], "characterOffsetBegin": 74, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [5, 22], "characterOffsetBegin": 78, "originalText": "use", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [5, 22], "characterOffsetBegin": 82, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 92, "segment_span": [5, 22], "characterOffsetBegin": 85, "originalText": "special", "ArgType": null, "before": " "}, {"index": 16, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [5, 22], "characterOffsetBegin": 93, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 17, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 107, "segment_span": [5, 22], "characterOffsetBegin": 100, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "  ", "pos": "-LRB-", "characterOffsetEnd": 109, "segment_span": [5, 22], "characterOffsetBegin": 108, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [5, 22], "characterOffsetBegin": 111, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 20, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 122, "segment_span": [5, 22], "characterOffsetBegin": 121, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 21, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 128, "segment_span": [5, 22], "characterOffsetBegin": 124, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 131, "segment_span": [5, 22], "characterOffsetBegin": 130, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 133, "characterOffsetBegin": 132, "originalText": ".", "ArgType": null, "before": " "}], "text": "We improve upon existing approaches because we solve a problem concerning the use of special marker symbols ( equation ; CREF ) ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 29], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "further", "lemma": "further", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 29], "characterOffsetBegin": 2, "originalText": "further", "ArgType": null, "before": " "}, {"index": 3, "word": "contribution", "lemma": "contribution", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 29], "characterOffsetBegin": 10, "originalText": "contribution", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 25, "segment_span": [0, 29], "tense": "Z", "characterOffsetBegin": 23, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [4, 14], "characterOffsetBegin": 26, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [4, 14], "characterOffsetBegin": 31, "originalText": "all", "ArgType": null, "before": " "}, {"index": 7, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 40, "segment_span": [4, 14], "characterOffsetBegin": 35, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 8, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 44, "segment_span": [4, 14], "characterOffsetBegin": 41, "originalText": "are", "ArgType": null, "before": " "}, {"index": 9, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 56, "segment_span": [4, 14], "tense": "N", "characterOffsetBegin": 45, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [4, 14], "characterOffsetBegin": 57, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 61, "segment_span": [4, 14], "characterOffsetBegin": 60, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "freely", "lemma": "freely", "after": " ", "pos": "RB", "characterOffsetEnd": 68, "segment_span": [4, 14], "characterOffsetBegin": 62, "originalText": "freely", "ArgType": null, "before": " "}, {"index": 13, "word": "available", "lemma": "available", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [4, 14], "characterOffsetBegin": 69, "originalText": "available", "ArgType": null, "before": " "}, {"index": 14, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [4, 14], "characterOffsetBegin": 79, "originalText": "system", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 87, "segment_span": [0, 29], "characterOffsetBegin": 86, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 91, "segment_span": [0, 29], "characterOffsetBegin": 88, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 95, "segment_span": [0, 29], "characterOffsetBegin": 92, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 18, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 105, "segment_span": [0, 29], "characterOffsetBegin": 96, "originalText": "Utilities", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": "  ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [0, 29], "characterOffsetBegin": 106, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 111, "segment_span": [0, 29], "characterOffsetBegin": 110, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 21, "word": "van", "lemma": "van", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [0, 29], "characterOffsetBegin": 112, "originalText": "van", "ArgType": null, "before": " "}, {"index": 22, "word": "Noord", "lemma": "noord", "after": " ", "pos": "VBN", "characterOffsetEnd": 121, "segment_span": [0, 29], "characterOffsetBegin": 116, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 23, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 126, "segment_span": [0, 29], "characterOffsetBegin": 122, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 128, "segment_span": [0, 29], "characterOffsetBegin": 127, "originalText": ")", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "  ", "pos": "-LRB-", "characterOffsetEnd": 131, "segment_span": [0, 29], "characterOffsetBegin": 130, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 26, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [0, 29], "characterOffsetBegin": 133, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 27, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 144, "segment_span": [0, 29], "characterOffsetBegin": 143, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 28, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 150, "segment_span": [0, 29], "characterOffsetBegin": 146, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 153, "segment_span": [0, 29], "characterOffsetBegin": 152, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 155, "characterOffsetBegin": 154, "originalText": ".", "ArgType": null, "before": " "}], "text": "A further contribution is that all steps are implemented in a freely available system , the FSA Utilities of ( van Noord 1997 ) ( equation ; CREF ) ."}]}], "title": "Introduction"}, {"num": 1, "subsections": [{"title": "", "num": 0, "sentences": []}, {"title": "Preliminary Considerations", "num": 1, "sentences": [{"tokens": [{"index": 1, "word": "Before", "lemma": "before", "after": " ", "pos": "IN", "characterOffsetEnd": 6, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "Before", "ArgType": null, "before": ""}, {"index": 2, "word": "presenting", "lemma": "present", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 5], "tense": "G", "characterOffsetBegin": 7, "originalText": "presenting", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 5], "characterOffsetBegin": 18, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 5], "characterOffsetBegin": 22, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "proper", "lemma": "proper", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 5], "characterOffsetBegin": 32, "originalText": "proper", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 40, "segment_span": [5, 15], "characterOffsetBegin": 39, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 43, "segment_span": [5, 15], "characterOffsetBegin": 41, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 48, "segment_span": [5, 15], "characterOffsetBegin": 44, "originalText": "will", "ArgType": null, "before": " "}, {"index": 9, "word": "deal", "lemma": "deal", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 53, "segment_span": [5, 15], "tense": "B", "characterOffsetBegin": 49, "originalText": "deal", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [5, 15], "characterOffsetBegin": 54, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [5, 15], "characterOffsetBegin": 59, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "couple", "lemma": "couple", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [5, 15], "characterOffsetBegin": 61, "originalText": "couple", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [5, 15], "characterOffsetBegin": 68, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "meta", "lemma": "meta", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [5, 15], "characterOffsetBegin": 71, "originalText": "meta", "ArgType": null, "before": " "}, {"index": 15, "word": "issues", "lemma": "issue", "after": " ", "pos": "NNS", "characterOffsetEnd": 82, "segment_span": [5, 15], "characterOffsetBegin": 76, "originalText": "issues", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ".", "ArgType": null, "before": " "}], "text": "Before presenting the algorithm proper , we will deal with a couple of meta issues ."}, {"tokens": [{"index": 1, "word": "First", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 5, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "First", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 7, "segment_span": [0, 14], "characterOffsetBegin": 6, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 10, "segment_span": [0, 14], "characterOffsetBegin": 8, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 14], "tense": "P", "characterOffsetBegin": 11, "originalText": "introduce", "ArgType": "verb", "before": " "}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 24, "segment_span": [0, 14], "characterOffsetBegin": 21, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "version", "lemma": "version", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 14], "characterOffsetBegin": 25, "originalText": "version", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 35, "segment_span": [0, 14], "characterOffsetBegin": 33, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [0, 14], "characterOffsetBegin": 36, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 46, "segment_span": [0, 14], "characterOffsetBegin": 40, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 10, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 14], "characterOffsetBegin": 47, "originalText": "state", "ArgType": null, "before": " "}, {"index": 11, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 14], "characterOffsetBegin": 53, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 14], "characterOffsetBegin": 62, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 14], "characterOffsetBegin": 66, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 14, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 77, "segment_span": [0, 14], "characterOffsetBegin": 76, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 15, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 83, "segment_span": [14, 15], "characterOffsetBegin": 79, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 86, "characterOffsetBegin": 85, "originalText": ".", "ArgType": null, "before": "  "}], "text": "First , we introduce our version of the finite state calculus in equation ; CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "treatment", "lemma": "treatment", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "treatment", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 11], "characterOffsetBegin": 14, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 17, "originalText": "special", "ArgType": null, "before": " "}, {"index": 5, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 6, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 39, "segment_span": [0, 11], "characterOffsetBegin": 32, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 42, "segment_span": [0, 11], "characterOffsetBegin": 40, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "discussed", "is_pass": true, "lemma": "discuss", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 52, "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 43, "originalText": "discussed", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 11], "characterOffsetBegin": 57, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 11, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 68, "segment_span": [0, 11], "characterOffsetBegin": 67, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 12, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 74, "segment_span": [11, 12], "characterOffsetBegin": 70, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 77, "characterOffsetBegin": 76, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The treatment of special marker symbols is discussed in equation ; CREF ."}, {"tokens": [{"index": 1, "word": "Then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "Then", "ArgType": null, "before": ""}, {"index": 2, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 7, "segment_span": [0, 4], "characterOffsetBegin": 5, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 4], "characterOffsetBegin": 9, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 4, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 20, "segment_span": [0, 4], "characterOffsetBegin": 19, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 5, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 26, "segment_span": [4, 10], "characterOffsetBegin": 22, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 29, "segment_span": [4, 10], "characterOffsetBegin": 28, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 32, "segment_span": [4, 10], "characterOffsetBegin": 30, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "discuss", "lemma": "discuss", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 40, "segment_span": [4, 10], "tense": "P", "characterOffsetBegin": 33, "originalText": "discuss", "ArgType": null, "before": " "}, {"index": 9, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 48, "segment_span": [4, 10], "characterOffsetBegin": 41, "originalText": "various", "ArgType": null, "before": " "}, {"index": 10, "word": "utilities", "lemma": "utility", "after": " ", "pos": "NNS", "characterOffsetEnd": 58, "segment_span": [4, 10], "characterOffsetBegin": 49, "originalText": "utilities", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 63, "segment_span": [10, 17], "characterOffsetBegin": 59, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 12, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 68, "segment_span": [10, 17], "characterOffsetBegin": 64, "originalText": "will", "ArgType": null, "before": " "}, {"index": 13, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 71, "segment_span": [10, 17], "characterOffsetBegin": 69, "originalText": "be", "ArgType": null, "before": " "}, {"index": 14, "word": "essential", "lemma": "essential", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [10, 17], "has_aux": true, "characterOffsetBegin": 72, "originalText": "essential", "ArgType": null, "before": " "}, {"index": 15, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [10, 17], "characterOffsetBegin": 82, "originalText": "for", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [10, 17], "characterOffsetBegin": 86, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [10, 17], "characterOffsetBegin": 90, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 101, "characterOffsetBegin": 100, "originalText": ".", "ArgType": null, "before": " "}], "text": "Then in equation ; CREF , we discuss various utilities that will be essential for the algorithm ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 16, "segment_span": [0, 13], "characterOffsetBegin": 14, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 28, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 17, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 13], "characterOffsetBegin": 29, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [0, 13], "characterOffsetBegin": 32, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 39, "segment_span": [0, 13], "characterOffsetBegin": 36, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 8, "word": "Utilities", "lemma": "Utilities", "after": "  ", "pos": "NNP", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 40, "originalText": "Utilities", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 52, "segment_span": [0, 13], "characterOffsetBegin": 51, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 10, "word": "van", "lemma": "van", "after": " ", "pos": "NNP", "characterOffsetEnd": 56, "segment_span": [0, 13], "characterOffsetBegin": 53, "originalText": "van", "ArgType": null, "before": " "}, {"index": 11, "word": "Noord", "lemma": "Noord", "after": " ", "pos": "NNP", "characterOffsetEnd": 62, "segment_span": [0, 13], "characterOffsetBegin": 57, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 12, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 67, "segment_span": [0, 13], "characterOffsetBegin": 63, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 69, "segment_span": [0, 13], "characterOffsetBegin": 68, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 72, "characterOffsetBegin": 71, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The algorithm is implemented in the FSA Utilities ( van Noord 1997 ) ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "use", "lemma": "use", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 6, "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 3, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 11], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "notation", "lemma": "notation", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 11], "characterOffsetBegin": 11, "originalText": "notation", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "provided", "lemma": "provide", "after": " ", "pos": "VBN", "characterOffsetEnd": 28, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "provided", "ArgType": null, "before": " "}, {"index": 6, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 11], "characterOffsetBegin": 29, "originalText": "by", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [0, 11], "characterOffsetBegin": 32, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "toolbox", "lemma": "toolbox", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 11], "characterOffsetBegin": 36, "originalText": "toolbox", "ArgType": null, "before": " "}, {"index": 9, "word": "throughout", "lemma": "throughout", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 11], "characterOffsetBegin": 44, "originalText": "throughout", "ArgType": null, "before": " "}, {"index": 10, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 55, "originalText": "this", "ArgType": null, "before": " "}, {"index": 11, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 11], "characterOffsetBegin": 60, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ".", "ArgType": null, "before": " "}], "text": "We use the notation provided by the toolbox throughout this paper ."}, {"tokens": [{"index": 1, "word": "Table", "lemma": "Table", "after": "  ", "pos": "NNP", "characterOffsetEnd": 5, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "Table", "ArgType": null, "before": ""}, {"index": 2, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 7, "originalText": "CREF", "ArgType": "subj", "before": "  "}, {"index": 3, "word": "lists", "lemma": "list", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 18, "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 13, "originalText": "lists", "ArgType": "verb", "before": "  "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "relevant", "lemma": "relevant", "after": " ", "pos": "JJ", "characterOffsetEnd": 31, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "relevant", "ArgType": null, "before": " "}, {"index": 6, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 39, "segment_span": [0, 8], "characterOffsetBegin": 32, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 7, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 8], "characterOffsetBegin": 40, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 8, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 60, "segment_span": [0, 8], "characterOffsetBegin": 51, "originalText": "operators", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 62, "characterOffsetBegin": 61, "originalText": ".", "ArgType": null, "before": " "}], "text": "Table CREF lists the relevant regular expression operators ."}, {"tokens": [{"index": 1, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 3, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "FSA", "ArgType": null, "before": ""}, {"index": 2, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 13, "segment_span": [0, 5], "characterOffsetBegin": 4, "originalText": "Utilities", "ArgType": "subj", "before": " "}, {"index": 3, "word": "offers", "lemma": "offer", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 20, "segment_span": [0, 5], "tense": "Z", "characterOffsetBegin": 14, "originalText": "offers", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 5], "characterOffsetBegin": 21, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "possibility", "lemma": "possibility", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 5], "characterOffsetBegin": 25, "originalText": "possibility", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 39, "segment_span": [5, 11], "characterOffsetBegin": 37, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "define", "lemma": "define", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 46, "segment_span": [5, 11], "tense": "B", "characterOffsetBegin": 40, "originalText": "define", "ArgType": null, "before": " "}, {"index": 8, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 50, "segment_span": [5, 11], "characterOffsetBegin": 47, "originalText": "new", "ArgType": null, "before": " "}, {"index": 9, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [5, 11], "characterOffsetBegin": 51, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 10, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [5, 11], "characterOffsetBegin": 59, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 11, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 79, "segment_span": [5, 11], "characterOffsetBegin": 70, "originalText": "operators", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 81, "characterOffsetBegin": 80, "originalText": ".", "ArgType": null, "before": " "}], "text": "FSA Utilities offers the possibility to define new regular expression operators ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 35], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 35], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 35], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "consider", "lemma": "consider", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 35], "tense": "B", "characterOffsetBegin": 14, "originalText": "consider", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 35], "characterOffsetBegin": 23, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 35], "characterOffsetBegin": 27, "originalText": "definition", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 35], "characterOffsetBegin": 38, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 35], "characterOffsetBegin": 41, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "nullary", "lemma": "nullary", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [0, 35], "characterOffsetBegin": 45, "originalText": "nullary", "ArgType": null, "before": " "}, {"index": 10, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 35], "characterOffsetBegin": 53, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 11, "word": "vowel", "lemma": "vowel", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 35], "characterOffsetBegin": 62, "originalText": "vowel", "ArgType": null, "before": " "}, {"index": 12, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 35], "characterOffsetBegin": 68, "originalText": "as", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [0, 35], "characterOffsetBegin": 71, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "union", "lemma": "union", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 35], "characterOffsetBegin": 75, "originalText": "union", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [0, 35], "characterOffsetBegin": 81, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 87, "segment_span": [0, 35], "characterOffsetBegin": 84, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "five", "lemma": "five", "after": " ", "pos": "CD", "characterOffsetEnd": 92, "segment_span": [0, 35], "characterOffsetBegin": 88, "originalText": "five", "ArgType": null, "before": " "}, {"index": 18, "word": "vowels", "lemma": "vowel", "after": " ", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [0, 35], "characterOffsetBegin": 93, "originalText": "vowels", "ArgType": null, "before": " "}, {"index": 19, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 101, "segment_span": [0, 35], "characterOffsetBegin": 100, "originalText": ":", "ArgType": null, "before": " "}, {"index": 20, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [0, 35], "characterOffsetBegin": 102, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 109, "segment_span": [0, 35], "characterOffsetBegin": 108, "originalText": "(", "ArgType": null, "before": " "}, {"index": 22, "word": "vowel", "lemma": "vowel", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [0, 35], "characterOffsetBegin": 110, "originalText": "vowel", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 117, "segment_span": [0, 35], "characterOffsetBegin": 116, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "-LCB-", "lemma": "-lcb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 119, "segment_span": [0, 35], "characterOffsetBegin": 118, "originalText": "{", "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 121, "segment_span": [0, 35], "characterOffsetBegin": 120, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 123, "segment_span": [0, 35], "characterOffsetBegin": 122, "originalText": ",", "ArgType": null, "before": " "}, {"index": 27, "word": "e", "lemma": "e", "after": " ", "pos": "LS", "characterOffsetEnd": 125, "segment_span": [0, 35], "characterOffsetBegin": 124, "originalText": "e", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 127, "segment_span": [0, 35], "characterOffsetBegin": 126, "originalText": ",", "ArgType": null, "before": " "}, {"index": 29, "word": "i", "lemma": "i", "after": " ", "pos": "FW", "characterOffsetEnd": 129, "segment_span": [0, 35], "characterOffsetBegin": 128, "originalText": "i", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 131, "segment_span": [0, 35], "characterOffsetBegin": 130, "originalText": ",", "ArgType": null, "before": " "}, {"index": 31, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 133, "segment_span": [0, 35], "characterOffsetBegin": 132, "originalText": "o", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 135, "segment_span": [0, 35], "characterOffsetBegin": 134, "originalText": ",", "ArgType": null, "before": " "}, {"index": 33, "word": "u", "lemma": "u", "after": " ", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [0, 35], "characterOffsetBegin": 136, "originalText": "u", "ArgType": null, "before": " "}, {"index": 34, "word": "-RCB-", "lemma": "-rcb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 139, "segment_span": [0, 35], "characterOffsetBegin": 138, "originalText": "}", "ArgType": null, "before": " "}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 141, "segment_span": [0, 35], "characterOffsetBegin": 140, "originalText": ")", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example , consider the definition of the nullary operator vowel as the union of the five vowels : macro ( vowel , -LCB- a , e , i , o , u -RCB- ) ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "such", "ArgType": null, "before": " "}, {"index": 3, "word": "macro", "lemma": "macro", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 4, "word": "definitions", "lemma": "definition", "after": " ", "pos": "NNS", "characterOffsetEnd": 25, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "definitions", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 27, "segment_span": [0, 10], "characterOffsetBegin": 26, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "Prolog", "lemma": "Prolog", "after": " ", "pos": "NNP", "characterOffsetEnd": 34, "segment_span": [0, 10], "characterOffsetBegin": 28, "originalText": "Prolog", "ArgType": null, "before": " "}, {"index": 7, "word": "variables", "lemma": "variable", "after": " ", "pos": "NNS", "characterOffsetEnd": 44, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "variables", "ArgType": null, "before": " "}, {"index": 8, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 48, "segment_span": [0, 10], "characterOffsetBegin": 45, "originalText": "can", "ArgType": null, "before": " "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 51, "segment_span": [0, 10], "characterOffsetBegin": 49, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 56, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 52, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [10, 24], "characterOffsetBegin": 57, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [10, 24], "characterOffsetBegin": 60, "originalText": "order", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 68, "segment_span": [10, 24], "characterOffsetBegin": 66, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "define", "lemma": "define", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 75, "segment_span": [10, 24], "tense": "B", "characterOffsetBegin": 69, "originalText": "define", "ArgType": null, "before": " "}, {"index": 15, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 79, "segment_span": [10, 24], "characterOffsetBegin": 76, "originalText": "new", "ArgType": null, "before": " "}, {"index": 16, "word": "n-ary", "lemma": "n-ary", "after": " ", "pos": "JJ", "characterOffsetEnd": 85, "segment_span": [10, 24], "characterOffsetBegin": 80, "originalText": "n-ary", "ArgType": null, "before": " "}, {"index": 17, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [10, 24], "characterOffsetBegin": 86, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 18, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [10, 24], "characterOffsetBegin": 94, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 19, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 114, "segment_span": [10, 24], "characterOffsetBegin": 105, "originalText": "operators", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 117, "segment_span": [10, 24], "characterOffsetBegin": 115, "originalText": "in", "ArgType": null, "before": " "}, {"index": 21, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 123, "segment_span": [10, 24], "characterOffsetBegin": 118, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 126, "segment_span": [10, 24], "characterOffsetBegin": 124, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "existing", "lemma": "exist", "after": " ", "pos": "VBG", "characterOffsetEnd": 135, "segment_span": [10, 24], "characterOffsetBegin": 127, "originalText": "existing", "ArgType": null, "before": " "}, {"index": 24, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 145, "segment_span": [10, 24], "characterOffsetBegin": 136, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 147, "characterOffsetBegin": 146, "originalText": ".", "ArgType": null, "before": " "}], "text": "In such macro definitions , Prolog variables can be used in order to define new n-ary regular expression operators in terms of existing operators ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 35], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "instance", "lemma": "instance", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 35], "characterOffsetBegin": 4, "originalText": "instance", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 35], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 35], "characterOffsetBegin": 15, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "lenient_composition", "lemma": "lenient_composition", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 35], "characterOffsetBegin": 19, "originalText": "lenient_composition", "ArgType": null, "before": " "}, {"index": 6, "word": "operator", "lemma": "operator", "after": "  ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 35], "characterOffsetBegin": 39, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 50, "segment_span": [0, 35], "characterOffsetBegin": 49, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 8, "word": "Karttunen", "lemma": "karttunen", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 35], "characterOffsetBegin": 51, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 9, "word": "1998", "lemma": "1998", "after": " ", "pos": "CD", "characterOffsetEnd": 65, "segment_span": [0, 35], "characterOffsetBegin": 61, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 67, "segment_span": [0, 35], "characterOffsetBegin": 66, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 71, "segment_span": [0, 35], "characterOffsetBegin": 69, "originalText": "is", "ArgType": null, "before": "  "}, {"index": 12, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 79, "segment_span": [0, 35], "tense": "N", "characterOffsetBegin": 72, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 13, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [0, 35], "characterOffsetBegin": 80, "originalText": "by", "ArgType": null, "before": " "}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 84, "segment_span": [0, 35], "characterOffsetBegin": 83, "originalText": ":", "ArgType": null, "before": " "}, {"index": 15, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [0, 35], "characterOffsetBegin": 85, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 92, "segment_span": [0, 35], "characterOffsetBegin": 91, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "priority_union", "lemma": "priority_union", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [0, 35], "characterOffsetBegin": 93, "originalText": "priority_union", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 109, "segment_span": [0, 35], "characterOffsetBegin": 108, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "Q", "lemma": "Q", "after": " ", "pos": "NNP", "characterOffsetEnd": 111, "segment_span": [0, 35], "characterOffsetBegin": 110, "originalText": "Q", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 113, "segment_span": [0, 35], "characterOffsetBegin": 112, "originalText": ",", "ArgType": null, "before": " "}, {"index": 21, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [0, 35], "characterOffsetBegin": 114, "originalText": "R", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 117, "segment_span": [0, 35], "characterOffsetBegin": 116, "originalText": ")", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 119, "segment_span": [0, 35], "characterOffsetBegin": 118, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "-LCB-", "lemma": "-lcb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 121, "segment_span": [0, 35], "characterOffsetBegin": 120, "originalText": "{", "ArgType": null, "before": " "}, {"index": 25, "word": "Q", "lemma": "Q", "after": " ", "pos": "NNP", "characterOffsetEnd": 123, "segment_span": [0, 35], "characterOffsetBegin": 122, "originalText": "Q", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 125, "segment_span": [0, 35], "characterOffsetBegin": 124, "originalText": ",", "ArgType": null, "before": " "}, {"index": 27, "word": "~", "lemma": "~", "after": "", "pos": "NN", "characterOffsetEnd": 127, "segment_span": [0, 35], "characterOffsetBegin": 126, "originalText": "~", "ArgType": null, "before": " "}, {"index": 28, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 133, "segment_span": [0, 35], "characterOffsetBegin": 127, "originalText": "domain", "ArgType": null, "before": ""}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 135, "segment_span": [0, 35], "characterOffsetBegin": 134, "originalText": "(", "ArgType": null, "before": " "}, {"index": 30, "word": "Q", "lemma": "Q", "after": " ", "pos": "NNP", "characterOffsetEnd": 137, "segment_span": [0, 35], "characterOffsetBegin": 136, "originalText": "Q", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 139, "segment_span": [0, 35], "characterOffsetBegin": 138, "originalText": ")", "ArgType": null, "before": " "}, {"index": 32, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [0, 35], "characterOffsetBegin": 140, "originalText": "o", "ArgType": null, "before": " "}, {"index": 33, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 143, "segment_span": [0, 35], "characterOffsetBegin": 142, "originalText": "R", "ArgType": null, "before": " "}, {"index": 34, "word": "-RCB-", "lemma": "-rcb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 145, "segment_span": [0, 35], "characterOffsetBegin": 144, "originalText": "}", "ArgType": null, "before": " "}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 147, "segment_span": [0, 35], "characterOffsetBegin": 146, "originalText": ")", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 149, "characterOffsetBegin": 148, "originalText": ".", "ArgType": null, "before": " "}], "text": "For instance , the lenient_composition operator ( Karttunen 1998 ) is defined by : macro ( priority_union ( Q , R ) , -LCB- Q , ~ domain ( Q ) o R -RCB- ) ."}, {"tokens": [{"index": 1, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 5, "segment_span": [0, 18], "characterOffsetBegin": 0, "originalText": "macro", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 7, "segment_span": [0, 18], "characterOffsetBegin": 6, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "lenient_composition", "lemma": "lenient_composition", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [0, 18], "characterOffsetBegin": 8, "originalText": "lenient_composition", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 29, "segment_span": [0, 18], "characterOffsetBegin": 28, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 18], "characterOffsetBegin": 30, "originalText": "R", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 33, "segment_span": [0, 18], "characterOffsetBegin": 32, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 18], "characterOffsetBegin": 34, "originalText": "C", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 37, "segment_span": [0, 18], "characterOffsetBegin": 36, "originalText": ")", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 39, "segment_span": [0, 18], "characterOffsetBegin": 38, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "priority_union", "lemma": "priority_union", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 18], "characterOffsetBegin": 40, "originalText": "priority_union", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 56, "segment_span": [0, 18], "characterOffsetBegin": 55, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 18], "characterOffsetBegin": 57, "originalText": "R", "ArgType": null, "before": " "}, {"index": 13, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 18], "characterOffsetBegin": 59, "originalText": "o", "ArgType": null, "before": " "}, {"index": 14, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [0, 18], "characterOffsetBegin": 61, "originalText": "C", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 64, "segment_span": [0, 18], "characterOffsetBegin": 63, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [0, 18], "characterOffsetBegin": 65, "originalText": "R", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [0, 18], "characterOffsetBegin": 67, "originalText": ")", "ArgType": null, "before": " "}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 70, "segment_span": [0, 18], "characterOffsetBegin": 69, "originalText": ")", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 72, "characterOffsetBegin": 71, "originalText": ".", "ArgType": null, "before": " "}], "text": "macro ( lenient_composition ( R , C ) , priority_union ( R o C , R ) ) ."}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 30], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 6, "segment_span": [0, 30], "characterOffsetBegin": 5, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "priority_union", "lemma": "priority_union", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 30], "characterOffsetBegin": 7, "originalText": "priority_union", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 30], "characterOffsetBegin": 22, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 28, "segment_span": [0, 30], "characterOffsetBegin": 25, "originalText": "two", "ArgType": null, "before": " "}, {"index": 6, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [0, 30], "characterOffsetBegin": 29, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 7, "word": "expressions", "lemma": "expression", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 30], "characterOffsetBegin": 37, "originalText": "expressions", "ArgType": null, "before": " "}, {"index": 8, "word": "Q", "lemma": "Q", "after": " ", "pos": "NNP", "characterOffsetEnd": 50, "segment_span": [0, 30], "characterOffsetBegin": 49, "originalText": "Q", "ArgType": null, "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 54, "segment_span": [0, 30], "characterOffsetBegin": 51, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 30], "characterOffsetBegin": 55, "originalText": "R", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 59, "segment_span": [0, 30], "characterOffsetBegin": 57, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 67, "segment_span": [0, 30], "tense": "N", "characterOffsetBegin": 60, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 13, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 30], "characterOffsetBegin": 68, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [0, 30], "characterOffsetBegin": 71, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "union", "lemma": "union", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 30], "characterOffsetBegin": 75, "originalText": "union", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 83, "segment_span": [0, 30], "characterOffsetBegin": 81, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "Q", "lemma": "Q", "after": " ", "pos": "NNP", "characterOffsetEnd": 85, "segment_span": [0, 30], "characterOffsetBegin": 84, "originalText": "Q", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 89, "segment_span": [0, 30], "characterOffsetBegin": 86, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [0, 30], "characterOffsetBegin": 90, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 30], "characterOffsetBegin": 94, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [0, 30], "characterOffsetBegin": 106, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 112, "segment_span": [0, 30], "characterOffsetBegin": 109, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "complement", "lemma": "complement", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [0, 30], "characterOffsetBegin": 113, "originalText": "complement", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 126, "segment_span": [0, 30], "characterOffsetBegin": 124, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 130, "segment_span": [0, 30], "characterOffsetBegin": 127, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [0, 30], "characterOffsetBegin": 131, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 140, "segment_span": [0, 30], "characterOffsetBegin": 138, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "Q", "lemma": "Q", "after": " ", "pos": "NNP", "characterOffsetEnd": 142, "segment_span": [0, 30], "characterOffsetBegin": 141, "originalText": "Q", "ArgType": null, "before": " "}, {"index": 29, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 147, "segment_span": [0, 30], "characterOffsetBegin": 143, "originalText": "with", "ArgType": null, "before": " "}, {"index": 30, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [0, 30], "characterOffsetBegin": 148, "originalText": "R", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 151, "characterOffsetBegin": 150, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here , priority_union of two regular expressions Q and R is defined as the union of Q and the composition of the complement of the domain of Q with R ."}, {"tokens": [{"index": 1, "word": "Lenient", "lemma": "lenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 33], "characterOffsetBegin": 0, "originalText": "Lenient", "ArgType": null, "before": ""}, {"index": 2, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 33], "characterOffsetBegin": 8, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 33], "characterOffsetBegin": 20, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 33], "characterOffsetBegin": 23, "originalText": "R", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 28, "segment_span": [0, 33], "characterOffsetBegin": 25, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 33], "characterOffsetBegin": 29, "originalText": "C", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 33, "segment_span": [0, 33], "characterOffsetBegin": 31, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 41, "segment_span": [0, 33], "tense": "N", "characterOffsetBegin": 34, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 9, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [0, 33], "characterOffsetBegin": 42, "originalText": "as", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 48, "segment_span": [0, 33], "characterOffsetBegin": 45, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "priority", "lemma": "priority", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [0, 33], "characterOffsetBegin": 49, "originalText": "priority", "ArgType": null, "before": " "}, {"index": 12, "word": "union", "lemma": "union", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 33], "characterOffsetBegin": 58, "originalText": "union", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 33], "characterOffsetBegin": 64, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [0, 33], "characterOffsetBegin": 67, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 33], "characterOffsetBegin": 71, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [0, 33], "characterOffsetBegin": 83, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 33], "characterOffsetBegin": 86, "originalText": "R", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 91, "segment_span": [0, 33], "characterOffsetBegin": 88, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "C", "lemma": "c", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [0, 33], "characterOffsetBegin": 92, "originalText": "C", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 95, "segment_span": [0, 33], "characterOffsetBegin": 94, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 98, "segment_span": [0, 33], "characterOffsetBegin": 96, "originalText": "on", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 102, "segment_span": [0, 33], "characterOffsetBegin": 99, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 106, "segment_span": [0, 33], "characterOffsetBegin": 103, "originalText": "one", "ArgType": null, "before": " "}, {"index": 24, "word": "hand", "lemma": "hand", "after": " ", "pos": "NN", "characterOffsetEnd": 111, "segment_span": [0, 33], "characterOffsetBegin": 107, "originalText": "hand", "ArgType": null, "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 113, "segment_span": [0, 33], "characterOffsetBegin": 112, "originalText": ")", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 117, "segment_span": [0, 33], "characterOffsetBegin": 114, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 33], "characterOffsetBegin": 118, "originalText": "R", "ArgType": null, "before": " "}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 121, "segment_span": [0, 33], "characterOffsetBegin": 120, "originalText": "(", "ArgType": null, "before": " "}, {"index": 29, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [0, 33], "characterOffsetBegin": 122, "originalText": "on", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 128, "segment_span": [0, 33], "characterOffsetBegin": 125, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 134, "segment_span": [0, 33], "characterOffsetBegin": 129, "originalText": "other", "ArgType": null, "before": " "}, {"index": 32, "word": "hand", "lemma": "hand", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [0, 33], "characterOffsetBegin": 135, "originalText": "hand", "ArgType": null, "before": " "}, {"index": 33, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 141, "segment_span": [0, 33], "characterOffsetBegin": 140, "originalText": ")", "ArgType": null, "before": " "}, {"index": 34, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ".", "ArgType": null, "before": " "}], "text": "Lenient composition of R and C is defined as the priority union of the composition of R and C ( on the one hand ) and R ( on the other hand ) ."}, {"tokens": [{"index": 1, "word": "Some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "Some", "ArgType": null, "before": ""}, {"index": 2, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 14, "segment_span": [0, 15], "characterOffsetBegin": 5, "originalText": "operators", "ArgType": "subj", "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 16, "segment_span": [0, 15], "characterOffsetBegin": 15, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 24, "segment_span": [0, 15], "characterOffsetBegin": 17, "originalText": "however", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 26, "segment_span": [0, 15], "characterOffsetBegin": 25, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "require", "lemma": "require", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 34, "segment_span": [0, 15], "tense": "P", "characterOffsetBegin": 27, "originalText": "require", "ArgType": "verb", "before": " "}, {"index": 7, "word": "something", "lemma": "something", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 15], "characterOffsetBegin": 35, "originalText": "something", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 49, "segment_span": [0, 15], "characterOffsetBegin": 45, "originalText": "more", "ArgType": null, "before": " "}, {"index": 9, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 15], "characterOffsetBegin": 50, "originalText": "than", "ArgType": null, "before": " "}, {"index": 10, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 61, "segment_span": [0, 15], "characterOffsetBegin": 55, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 11, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 15], "characterOffsetBegin": 62, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 12, "word": "expansion", "lemma": "expansion", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [0, 15], "characterOffsetBegin": 68, "originalText": "expansion", "ArgType": null, "before": " "}, {"index": 13, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [0, 15], "characterOffsetBegin": 78, "originalText": "for", "ArgType": null, "before": " "}, {"index": 14, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 87, "segment_span": [0, 15], "characterOffsetBegin": 82, "originalText": "their", "ArgType": null, "before": " "}, {"index": 15, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [0, 15], "characterOffsetBegin": 88, "originalText": "definition", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 100, "characterOffsetBegin": 99, "originalText": ".", "ArgType": null, "before": " "}], "text": "Some operators , however , require something more than simple macro expansion for their definition ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 4], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "suppose", "lemma": "suppose", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 21, "segment_span": [0, 4], "tense": "P", "characterOffsetBegin": 14, "originalText": "suppose", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [4, 14], "characterOffsetBegin": 22, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "user", "lemma": "user", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [4, 14], "characterOffsetBegin": 24, "originalText": "user", "ArgType": "subj", "before": " "}, {"index": 7, "word": "wanted", "lemma": "want", "after": " ", "pos": "VBD", "is_root": true, "characterOffsetEnd": 35, "segment_span": [4, 14], "tense": "D", "characterOffsetBegin": 29, "originalText": "wanted", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 38, "segment_span": [4, 14], "characterOffsetBegin": 36, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "match", "lemma": "match", "after": " ", "pos": "VB", "characterOffsetEnd": 44, "segment_span": [4, 14], "characterOffsetBegin": 39, "originalText": "match", "ArgType": null, "before": " "}, {"index": 10, "word": "n", "lemma": "n", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [4, 14], "characterOffsetBegin": 45, "originalText": "n", "ArgType": null, "before": " "}, {"index": 11, "word": "occurrences", "lemma": "occurrence", "after": " ", "pos": "NNS", "characterOffsetEnd": 58, "segment_span": [4, 14], "characterOffsetBegin": 47, "originalText": "occurrences", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [4, 14], "characterOffsetBegin": 59, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 66, "segment_span": [4, 14], "characterOffsetBegin": 62, "originalText": "some", "ArgType": null, "before": " "}, {"index": 14, "word": "pattern", "lemma": "pattern", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [4, 14], "characterOffsetBegin": 67, "originalText": "pattern", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 76, "characterOffsetBegin": 75, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example , suppose a user wanted to match n occurrences of some pattern ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 7, "segment_span": [0, 26], "characterOffsetBegin": 4, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 3, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 17, "segment_span": [0, 26], "characterOffsetBegin": 8, "originalText": "Utilities", "ArgType": "subj", "before": " "}, {"index": 4, "word": "already", "lemma": "already", "after": " ", "pos": "RB", "characterOffsetEnd": 25, "segment_span": [0, 26], "characterOffsetBegin": 18, "originalText": "already", "ArgType": null, "before": " "}, {"index": 5, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 26], "tense": "Z", "characterOffsetBegin": 26, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 26], "characterOffsetBegin": 30, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 35, "segment_span": [0, 26], "characterOffsetBegin": 34, "originalText": "'", "ArgType": null, "before": " "}, {"index": 8, "word": "*", "lemma": "*", "after": " ", "pos": "SYM", "characterOffsetEnd": 37, "segment_span": [0, 26], "characterOffsetBegin": 36, "originalText": "*", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 39, "segment_span": [0, 26], "characterOffsetBegin": 38, "originalText": "'", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 43, "segment_span": [0, 26], "characterOffsetBegin": 40, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 45, "segment_span": [0, 26], "characterOffsetBegin": 44, "originalText": "'", "ArgType": null, "before": " "}, {"index": 12, "word": "+", "lemma": "+", "after": " ", "pos": "CC", "characterOffsetEnd": 47, "segment_span": [0, 26], "characterOffsetBegin": 46, "originalText": "+", "ArgType": null, "before": " "}, {"index": 13, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 49, "segment_span": [0, 26], "characterOffsetBegin": 48, "originalText": "'", "ArgType": null, "before": " "}, {"index": 14, "word": "quantifiers", "lemma": "quantifier", "after": " ", "pos": "NNS", "characterOffsetEnd": 61, "segment_span": [0, 26], "characterOffsetBegin": 50, "originalText": "quantifiers", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 63, "segment_span": [0, 26], "characterOffsetBegin": 62, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 67, "segment_span": [0, 26], "characterOffsetBegin": 64, "originalText": "but", "ArgType": null, "before": " "}, {"index": 17, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [0, 26], "characterOffsetBegin": 68, "originalText": "any", "ArgType": null, "before": " "}, {"index": 18, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [0, 26], "characterOffsetBegin": 72, "originalText": "other", "ArgType": null, "before": " "}, {"index": 19, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 87, "segment_span": [0, 26], "characterOffsetBegin": 78, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 20, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 92, "segment_span": [0, 26], "characterOffsetBegin": 88, "originalText": "like", "ArgType": null, "before": " "}, {"index": 21, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 97, "segment_span": [0, 26], "characterOffsetBegin": 93, "originalText": "this", "ArgType": null, "before": " "}, {"index": 22, "word": "need", "lemma": "need", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [0, 26], "characterOffsetBegin": 98, "originalText": "need", "ArgType": null, "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 105, "segment_span": [0, 26], "characterOffsetBegin": 103, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 108, "segment_span": [0, 26], "characterOffsetBegin": 106, "originalText": "be", "ArgType": null, "before": " "}, {"index": 25, "word": "user", "lemma": "user", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [0, 26], "characterOffsetBegin": 109, "originalText": "user", "ArgType": null, "before": " "}, {"index": 26, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "characterOffsetEnd": 121, "segment_span": [0, 26], "characterOffsetBegin": 114, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 123, "characterOffsetBegin": 122, "originalText": ".", "ArgType": null, "before": " "}], "text": "The FSA Utilities already has the ' * ' and ' + ' quantifiers , but any other operators like this need to be user defined ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 8, "segment_span": [0, 19], "characterOffsetBegin": 4, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "purpose", "lemma": "purpose", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 19], "characterOffsetBegin": 9, "originalText": "purpose", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 18, "segment_span": [0, 19], "characterOffsetBegin": 17, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 19], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 26, "segment_span": [0, 19], "characterOffsetBegin": 23, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 7, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 36, "segment_span": [0, 19], "characterOffsetBegin": 27, "originalText": "Utilities", "ArgType": "subj", "before": " "}, {"index": 8, "word": "supplies", "lemma": "supply", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 45, "segment_span": [0, 19], "tense": "Z", "characterOffsetBegin": 37, "originalText": "supplies", "ArgType": "verb", "before": " "}, {"index": 9, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [0, 19], "characterOffsetBegin": 46, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 10, "word": "Prolog", "lemma": "Prolog", "after": " ", "pos": "NNP", "characterOffsetEnd": 59, "segment_span": [0, 19], "characterOffsetBegin": 53, "originalText": "Prolog", "ArgType": null, "before": " "}, {"index": 11, "word": "hooks", "lemma": "hook", "after": " ", "pos": "NNS", "characterOffsetEnd": 65, "segment_span": [0, 19], "characterOffsetBegin": 60, "originalText": "hooks", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "allowing", "lemma": "allow", "after": " ", "pos": "VBG", "characterOffsetEnd": 74, "segment_span": [0, 19], "characterOffsetBegin": 66, "originalText": "allowing", "ArgType": null, "before": " "}, {"index": 13, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [0, 19], "characterOffsetBegin": 75, "originalText": "this", "ArgType": null, "before": " "}, {"index": 14, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 87, "segment_span": [0, 19], "characterOffsetBegin": 80, "originalText": "general", "ArgType": null, "before": " "}, {"index": 15, "word": "quantifier", "lemma": "quantifier", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [0, 19], "characterOffsetBegin": 88, "originalText": "quantifier", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 101, "segment_span": [0, 19], "characterOffsetBegin": 99, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 104, "segment_span": [0, 19], "characterOffsetBegin": 102, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "characterOffsetEnd": 112, "segment_span": [0, 19], "characterOffsetBegin": 105, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 19, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 115, "segment_span": [0, 19], "characterOffsetBegin": 113, "originalText": "as", "ArgType": null, "before": " "}, {"index": 20, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 117, "characterOffsetBegin": 116, "originalText": ":", "ArgType": null, "before": " "}], "text": "For this purpose , the FSA Utilities supplies simple Prolog hooks allowing this general quantifier to be defined as :"}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 25], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 25], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 13, "segment_span": [0, 25], "characterOffsetBegin": 12, "originalText": ":", "ArgType": null, "before": " "}, {"index": 4, "word": "match_n", "lemma": "match_n", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 25], "characterOffsetBegin": 14, "originalText": "match_n", "ArgType": "subj", "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 23, "segment_span": [0, 25], "characterOffsetBegin": 22, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 25, "segment_span": [0, 25], "characterOffsetBegin": 24, "originalText": "3", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 27, "segment_span": [0, 25], "characterOffsetBegin": 26, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [0, 25], "characterOffsetBegin": 28, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 31, "segment_span": [0, 25], "characterOffsetBegin": 30, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 34, "segment_span": [0, 25], "characterOffsetBegin": 32, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "equivalent", "lemma": "equivalent", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [0, 25], "characterOffsetBegin": 35, "originalText": "equivalent", "ArgType": "verb", "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 48, "segment_span": [0, 25], "characterOffsetBegin": 46, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [0, 25], "characterOffsetBegin": 49, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "ordinary", "lemma": "ordinary", "after": " ", "pos": "JJ", "characterOffsetEnd": 61, "segment_span": [0, 25], "characterOffsetBegin": 53, "originalText": "ordinary", "ArgType": null, "before": " "}, {"index": 15, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 68, "segment_span": [0, 25], "characterOffsetBegin": 62, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 16, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 25], "characterOffsetBegin": 69, "originalText": "state", "ArgType": null, "before": " "}, {"index": 17, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [0, 25], "characterOffsetBegin": 75, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 18, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [0, 25], "characterOffsetBegin": 84, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 19, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 96, "segment_span": [0, 25], "characterOffsetBegin": 95, "originalText": "[", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 97, "segment_span": [0, 25], "characterOffsetBegin": 96, "originalText": "a", "ArgType": null, "before": ""}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 99, "segment_span": [0, 25], "characterOffsetBegin": 98, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 101, "segment_span": [0, 25], "characterOffsetBegin": 100, "originalText": "a", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 103, "segment_span": [0, 25], "characterOffsetBegin": 102, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 105, "segment_span": [0, 25], "characterOffsetBegin": 104, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "]", "lemma": "-rsb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 106, "segment_span": [0, 25], "characterOffsetBegin": 105, "originalText": "]", "ArgType": null, "before": ""}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 108, "characterOffsetBegin": 107, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example : match_n ( 3 , a ) is equivalent to the ordinary finite state calculus expression [ a , a , a ] ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 16], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 16], "characterOffsetBegin": 10, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 4, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 16], "characterOffsetBegin": 18, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 5, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 38, "segment_span": [0, 16], "characterOffsetBegin": 29, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 42, "segment_span": [0, 16], "characterOffsetBegin": 39, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 45, "segment_span": [0, 16], "characterOffsetBegin": 43, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 53, "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 46, "originalText": "defined", "has_aux": true, "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [0, 16], "characterOffsetBegin": 54, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 62, "segment_span": [0, 16], "characterOffsetBegin": 57, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [0, 16], "characterOffsetBegin": 63, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "operations", "lemma": "operation", "after": " ", "pos": "NNS", "characterOffsetEnd": 76, "segment_span": [0, 16], "characterOffsetBegin": 66, "originalText": "operations", "ArgType": null, "before": " "}, {"index": 13, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 79, "segment_span": [0, 16], "characterOffsetBegin": 77, "originalText": "on", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 83, "segment_span": [0, 16], "characterOffsetBegin": 80, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "underlying", "lemma": "underlie", "after": " ", "pos": "VBG", "characterOffsetEnd": 94, "segment_span": [0, 16], "characterOffsetBegin": 84, "originalText": "underlying", "ArgType": null, "before": " "}, {"index": 16, "word": "automaton", "lemma": "automaton", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [0, 16], "characterOffsetBegin": 95, "originalText": "automaton", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 106, "characterOffsetBegin": 105, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , regular expression operators can be defined in terms of operations on the underlying automaton ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "such", "ArgType": null, "before": " "}, {"index": 3, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "cases", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "Prolog", "lemma": "Prolog", "after": " ", "pos": "NNP", "characterOffsetEnd": 22, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "Prolog", "ArgType": null, "before": " "}, {"index": 6, "word": "hooks", "lemma": "hook", "after": " ", "pos": "NNS", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 23, "originalText": "hooks", "ArgType": null, "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 10], "characterOffsetBegin": 29, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "manipulating", "lemma": "manipulate", "after": " ", "pos": "VBG", "characterOffsetEnd": 45, "segment_span": [0, 10], "characterOffsetBegin": 33, "originalText": "manipulating", "ArgType": null, "before": " "}, {"index": 9, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 52, "segment_span": [0, 10], "characterOffsetBegin": 46, "originalText": "states", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 56, "segment_span": [0, 10], "characterOffsetBegin": 53, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "transitions", "lemma": "transition", "after": " ", "pos": "NNS", "characterOffsetEnd": 68, "segment_span": [10, 14], "characterOffsetBegin": 57, "originalText": "transitions", "ArgType": null, "before": " "}, {"index": 12, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 72, "segment_span": [10, 14], "characterOffsetBegin": 69, "originalText": "may", "ArgType": null, "before": " "}, {"index": 13, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 75, "segment_span": [10, 14], "characterOffsetBegin": 73, "originalText": "be", "ArgType": null, "before": " "}, {"index": 14, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 80, "segment_span": [10, 14], "tense": "N", "characterOffsetBegin": 76, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 82, "characterOffsetBegin": 81, "originalText": ".", "ArgType": null, "before": " "}], "text": "In such cases , Prolog hooks for manipulating states and transitions may be used ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 27], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "functionality", "lemma": "functionality", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 27], "characterOffsetBegin": 5, "originalText": "functionality", "ArgType": null, "before": " "}, {"index": 3, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 22, "segment_span": [0, 27], "characterOffsetBegin": 19, "originalText": "has", "ArgType": null, "before": " "}, {"index": 4, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 27, "segment_span": [0, 27], "characterOffsetBegin": 23, "originalText": "been", "ArgType": null, "before": " "}, {"index": 5, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 32, "segment_span": [0, 27], "tense": "N", "characterOffsetBegin": 28, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 35, "segment_span": [0, 27], "characterOffsetBegin": 33, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 38, "segment_span": [0, 27], "characterOffsetBegin": 37, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 8, "word": "van", "lemma": "van", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 27], "characterOffsetBegin": 39, "originalText": "van", "ArgType": null, "before": " "}, {"index": 9, "word": "Noord", "lemma": "noord", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 27], "characterOffsetBegin": 43, "originalText": "Noord", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 52, "segment_span": [0, 27], "characterOffsetBegin": 49, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "Gerdemann", "lemma": "Gerdemann", "after": " ", "pos": "NNP", "characterOffsetEnd": 62, "segment_span": [0, 27], "characterOffsetBegin": 53, "originalText": "Gerdemann", "ArgType": null, "before": " "}, {"index": 12, "word": "1999", "lemma": "1999", "after": " ", "pos": "CD", "characterOffsetEnd": 67, "segment_span": [0, 27], "characterOffsetBegin": 63, "originalText": "1999", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 69, "segment_span": [0, 27], "characterOffsetBegin": 68, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 73, "segment_span": [0, 27], "characterOffsetBegin": 71, "originalText": "to", "ArgType": null, "before": "  "}, {"index": 15, "word": "provide", "lemma": "provide", "after": " ", "pos": "VB", "characterOffsetEnd": 81, "segment_span": [0, 27], "characterOffsetBegin": 74, "originalText": "provide", "ArgType": null, "before": " "}, {"index": 16, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 84, "segment_span": [0, 27], "characterOffsetBegin": 82, "originalText": "an", "ArgType": null, "before": " "}, {"index": 17, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [0, 27], "characterOffsetBegin": 85, "originalText": "implementation", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 27], "characterOffsetBegin": 100, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 106, "segment_span": [0, 27], "characterOffsetBegin": 103, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 116, "segment_span": [0, 27], "characterOffsetBegin": 107, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 21, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 119, "segment_span": [0, 27], "characterOffsetBegin": 117, "originalText": "in", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 122, "segment_span": [0, 27], "characterOffsetBegin": 121, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 23, "word": "Mohri", "lemma": "Mohri", "after": " ", "pos": "NNP", "characterOffsetEnd": 128, "segment_span": [0, 27], "characterOffsetBegin": 123, "originalText": "Mohri", "ArgType": null, "before": " "}, {"index": 24, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 132, "segment_span": [0, 27], "characterOffsetBegin": 129, "originalText": "and", "ArgType": null, "before": " "}, {"index": 25, "word": "Sproat", "lemma": "Sproat", "after": " ", "pos": "NNP", "characterOffsetEnd": 139, "segment_span": [0, 27], "characterOffsetBegin": 133, "originalText": "Sproat", "ArgType": null, "before": " "}, {"index": 26, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 144, "segment_span": [0, 27], "characterOffsetBegin": 140, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 146, "segment_span": [0, 27], "characterOffsetBegin": 145, "originalText": ")", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 149, "characterOffsetBegin": 148, "originalText": ".", "ArgType": null, "before": "  "}], "text": "This functionality has been used in ( van Noord and Gerdemann 1999 ) to provide an implementation of the algorithm in ( Mohri and Sproat 1996 ) ."}, {"tokens": [{"index": 1, "word": "Previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "Previous", "ArgType": null, "before": ""}, {"index": 2, "word": "algorithms", "lemma": "algorithm", "after": " ", "pos": "NNS", "characterOffsetEnd": 19, "segment_span": [0, 16], "characterOffsetBegin": 9, "originalText": "algorithms", "ArgType": null, "before": " "}, {"index": 3, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 16], "characterOffsetBegin": 20, "originalText": "for", "ArgType": null, "before": " "}, {"index": 4, "word": "compiling", "lemma": "compile", "after": " ", "pos": "VBG", "characterOffsetEnd": 33, "segment_span": [0, 16], "characterOffsetBegin": 24, "originalText": "compiling", "ArgType": null, "before": " "}, {"index": 5, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VB", "characterOffsetEnd": 41, "segment_span": [0, 16], "characterOffsetBegin": 34, "originalText": "rewrite", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 47, "segment_span": [0, 16], "characterOffsetBegin": 42, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 16], "characterOffsetBegin": 48, "originalText": "into", "ArgType": null, "before": " "}, {"index": 8, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 16], "characterOffsetBegin": 53, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 9, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 69, "segment_span": [0, 16], "characterOffsetBegin": 65, "originalText": "have", "ArgType": null, "before": " "}, {"index": 10, "word": "followed", "lemma": "follow", "after": "  ", "pos": "VBN", "characterOffsetEnd": 78, "segment_span": [0, 16], "characterOffsetBegin": 70, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 81, "segment_span": [0, 16], "characterOffsetBegin": 80, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 12, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 88, "segment_span": [0, 16], "characterOffsetBegin": 82, "originalText": "Kaplan", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 92, "segment_span": [0, 16], "characterOffsetBegin": 89, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 96, "segment_span": [0, 16], "characterOffsetBegin": 93, "originalText": "Kay", "ArgType": null, "before": " "}, {"index": 15, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 101, "segment_span": [0, 16], "characterOffsetBegin": 97, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 103, "segment_span": [0, 16], "characterOffsetBegin": 102, "originalText": ")", "ArgType": null, "before": " "}, {"index": 17, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 107, "segment_span": [16, 35], "characterOffsetBegin": 105, "originalText": "by", "ArgType": null, "before": "  "}, {"index": 18, "word": "introducing", "lemma": "introduce", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 119, "segment_span": [16, 35], "tense": "G", "characterOffsetBegin": 108, "originalText": "introducing", "ArgType": null, "before": " "}, {"index": 19, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 127, "segment_span": [16, 35], "characterOffsetBegin": 120, "originalText": "special", "ArgType": null, "before": " "}, {"index": 20, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [16, 35], "characterOffsetBegin": 128, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 21, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 142, "segment_span": [16, 35], "characterOffsetBegin": 135, "originalText": "symbols", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 144, "segment_span": [16, 35], "characterOffsetBegin": 143, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 152, "segment_span": [16, 35], "characterOffsetBegin": 145, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 154, "segment_span": [16, 35], "characterOffsetBegin": 153, "originalText": ")", "ArgType": null, "before": " "}, {"index": 25, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 159, "segment_span": [16, 35], "characterOffsetBegin": 155, "originalText": "into", "ArgType": null, "before": " "}, {"index": 26, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 167, "segment_span": [16, 35], "characterOffsetBegin": 160, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 27, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 170, "segment_span": [16, 35], "characterOffsetBegin": 168, "originalText": "in", "ArgType": null, "before": " "}, {"index": 28, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 176, "segment_span": [16, 35], "characterOffsetBegin": 171, "originalText": "order", "ArgType": null, "before": " "}, {"index": 29, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 179, "segment_span": [16, 35], "characterOffsetBegin": 177, "originalText": "to", "ArgType": null, "before": " "}, {"index": 30, "word": "mark", "lemma": "mark", "after": " ", "pos": "VB", "characterOffsetEnd": 184, "segment_span": [16, 35], "characterOffsetBegin": 180, "originalText": "mark", "ArgType": null, "before": " "}, {"index": 31, "word": "off", "lemma": "off", "after": " ", "pos": "RP", "characterOffsetEnd": 188, "segment_span": [16, 35], "characterOffsetBegin": 185, "originalText": "off", "ArgType": null, "before": " "}, {"index": 32, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 198, "segment_span": [16, 35], "characterOffsetBegin": 189, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 33, "word": "regions", "lemma": "region", "after": " ", "pos": "NNS", "characterOffsetEnd": 206, "segment_span": [16, 35], "characterOffsetBegin": 199, "originalText": "regions", "ArgType": "dobj", "before": " "}, {"index": 34, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 210, "segment_span": [16, 35], "characterOffsetBegin": 207, "originalText": "for", "ArgType": null, "before": " "}, {"index": 35, "word": "replacement", "lemma": "replacement", "after": " ", "pos": "NN", "characterOffsetEnd": 222, "segment_span": [16, 35], "characterOffsetBegin": 211, "originalText": "replacement", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 224, "characterOffsetBegin": 223, "originalText": ".", "ArgType": null, "before": " "}], "text": "Previous algorithms for compiling rewrite rules into transducers have followed ( Kaplan and Kay 1994 ) by introducing special marker symbols ( markers ) into strings in order to mark off candidate regions for replacement ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "assumption", "lemma": "assumption", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 3], "characterOffsetBegin": 4, "originalText": "assumption", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 3], "tense": "Z", "characterOffsetBegin": 15, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [3, 13], "characterOffsetBegin": 18, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [3, 13], "characterOffsetBegin": 23, "originalText": "these", "ArgType": null, "before": " "}, {"index": 6, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [3, 13], "characterOffsetBegin": 29, "originalText": "markers", "ArgType": "subj", "before": " "}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 40, "segment_span": [3, 13], "characterOffsetBegin": 37, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "outside", "lemma": "outside", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [3, 13], "characterOffsetBegin": 41, "originalText": "outside", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [3, 13], "characterOffsetBegin": 49, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 62, "segment_span": [3, 13], "characterOffsetBegin": 53, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 11, "word": "transducer", "lemma": "transducer", "after": "", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [3, 13], "characterOffsetBegin": 63, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 12, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 75, "segment_span": [3, 13], "characterOffsetBegin": 73, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 13, "word": "alphabets", "lemma": "alphabet", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [3, 13], "characterOffsetBegin": 76, "originalText": "alphabets", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 87, "characterOffsetBegin": 86, "originalText": ".", "ArgType": null, "before": " "}], "text": "The assumption is that these markers are outside the resulting transducer 's alphabets ."}, {"tokens": [{"index": 1, "word": "But", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 3, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "But", "ArgType": null, "before": ""}, {"index": 2, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 6], "characterOffsetBegin": 4, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 3, "word": "algorithms", "lemma": "algorithm", "after": " ", "pos": "NNS", "characterOffsetEnd": 23, "segment_span": [0, 6], "characterOffsetBegin": 13, "originalText": "algorithms", "ArgType": "subj", "before": " "}, {"index": 4, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 28, "segment_span": [0, 6], "characterOffsetBegin": 24, "originalText": "have", "ArgType": null, "before": " "}, {"index": 5, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 32, "segment_span": [0, 6], "characterOffsetBegin": 29, "originalText": "not", "ArgType": null, "before": " "}, {"index": 6, "word": "ensured", "lemma": "ensure", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 40, "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 33, "originalText": "ensured", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [6, 10], "characterOffsetBegin": 41, "originalText": "that", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [6, 10], "characterOffsetBegin": 46, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "assumption", "lemma": "assumption", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [6, 10], "characterOffsetBegin": 50, "originalText": "assumption", "ArgType": "subj", "before": " "}, {"index": 10, "word": "holds", "lemma": "hold", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 66, "segment_span": [6, 10], "tense": "Z", "characterOffsetBegin": 61, "originalText": "holds", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 68, "characterOffsetBegin": 67, "originalText": ".", "ArgType": null, "before": " "}], "text": "But previous algorithms have not ensured that the assumption holds ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 4], "characterOffsetBegin": 5, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 3, "word": "was", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 16, "segment_span": [0, 4], "characterOffsetBegin": 13, "originalText": "was", "ArgType": null, "before": " "}, {"index": 4, "word": "recognized", "is_pass": true, "lemma": "recognize", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 27, "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 17, "originalText": "recognized", "ArgType": null, "before": " "}, {"index": 5, "word": "by", "lemma": "by", "after": "  ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [4, 17], "characterOffsetBegin": 28, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 33, "segment_span": [4, 17], "characterOffsetBegin": 32, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 7, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 43, "segment_span": [4, 17], "characterOffsetBegin": 34, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 8, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 48, "segment_span": [4, 17], "characterOffsetBegin": 44, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 50, "segment_span": [4, 17], "characterOffsetBegin": 49, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 53, "segment_span": [4, 17], "characterOffsetBegin": 52, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 11, "word": "whose", "lemma": "whose", "after": " ", "pos": "WP$", "characterOffsetEnd": 59, "segment_span": [4, 17], "characterOffsetBegin": 54, "originalText": "whose", "ArgType": null, "before": " "}, {"index": 12, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [4, 17], "characterOffsetBegin": 60, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 13, "word": "starts", "lemma": "start", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 76, "segment_span": [4, 17], "tense": "Z", "characterOffsetBegin": 70, "originalText": "starts", "ArgType": null, "before": " "}, {"index": 14, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [4, 17], "characterOffsetBegin": 77, "originalText": "with", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 83, "segment_span": [4, 17], "characterOffsetBegin": 82, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [4, 17], "characterOffsetBegin": 84, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 17, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [4, 17], "characterOffsetBegin": 91, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 18, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 107, "segment_span": [17, 25], "characterOffsetBegin": 102, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 19, "word": "filters", "lemma": "filter", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 115, "segment_span": [17, 25], "tense": "Z", "characterOffsetBegin": 108, "originalText": "filters", "ArgType": null, "before": " "}, {"index": 20, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 119, "segment_span": [17, 25], "characterOffsetBegin": 116, "originalText": "out", "ArgType": null, "before": " "}, {"index": 21, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 123, "segment_span": [17, 25], "characterOffsetBegin": 120, "originalText": "any", "ArgType": null, "before": " "}, {"index": 22, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [17, 25], "characterOffsetBegin": 124, "originalText": "string", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "containing", "lemma": "contain", "after": " ", "pos": "VBG", "characterOffsetEnd": 141, "segment_span": [17, 25], "characterOffsetBegin": 131, "originalText": "containing", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 143, "segment_span": [17, 25], "characterOffsetBegin": 142, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [17, 25], "characterOffsetBegin": 144, "originalText": "marker", "ArgType": "dobj", "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 152, "characterOffsetBegin": 151, "originalText": ".", "ArgType": null, "before": " "}], "text": "This problem was recognized by ( Karttunen 1996 ) , whose algorithm starts with a filter transducer which filters out any string containing a marker ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 7, "segment_span": [0, 6], "characterOffsetBegin": 5, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "problematic", "lemma": "problematic", "after": " ", "pos": "JJ", "characterOffsetEnd": 19, "segment_span": [0, 6], "characterOffsetBegin": 8, "originalText": "problematic", "ArgType": "verb", "before": " "}, {"index": 4, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 6], "characterOffsetBegin": 20, "originalText": "for", "ArgType": null, "before": " "}, {"index": 5, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 27, "segment_span": [0, 6], "characterOffsetBegin": 24, "originalText": "two", "ArgType": null, "before": " "}, {"index": 6, "word": "reasons", "lemma": "reason", "after": " ", "pos": "NNS", "characterOffsetEnd": 35, "segment_span": [0, 6], "characterOffsetBegin": 28, "originalText": "reasons", "ArgType": null, "before": " "}, {"index": 7, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 37, "characterOffsetBegin": 36, "originalText": ".", "ArgType": null, "before": " "}], "text": "This is problematic for two reasons ."}, {"tokens": [{"index": 1, "word": "First", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "First", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 7, "segment_span": [0, 20], "characterOffsetBegin": 6, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 12, "segment_span": [0, 20], "characterOffsetBegin": 8, "originalText": "when", "ArgType": null, "before": " "}, {"index": 4, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBN", "characterOffsetEnd": 20, "segment_span": [0, 20], "characterOffsetBegin": 13, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 21, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 25, "segment_span": [0, 20], "characterOffsetBegin": 24, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 20], "characterOffsetBegin": 26, "originalText": "string", "ArgType": null, "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 37, "segment_span": [7, 14], "characterOffsetBegin": 33, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 9, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 42, "segment_span": [7, 14], "characterOffsetBegin": 38, "originalText": "does", "ArgType": null, "before": " "}, {"index": 10, "word": "happen", "lemma": "happen", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 49, "segment_span": [7, 14], "tense": "B", "characterOffsetBegin": 43, "originalText": "happen", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 52, "segment_span": [7, 14], "characterOffsetBegin": 50, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "contain", "lemma": "contain", "after": " ", "pos": "VB", "characterOffsetEnd": 60, "segment_span": [7, 14], "characterOffsetBegin": 53, "originalText": "contain", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 62, "segment_span": [7, 14], "characterOffsetBegin": 61, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [7, 14], "characterOffsetBegin": 63, "originalText": "marker", "ArgType": "dobj", "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 71, "segment_span": [0, 20], "characterOffsetBegin": 70, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [0, 20], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [0, 20], "characterOffsetBegin": 76, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 18, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 90, "segment_span": [0, 20], "characterOffsetBegin": 86, "originalText": "will", "ArgType": null, "before": " "}, {"index": 19, "word": "simply", "lemma": "simply", "after": " ", "pos": "RB", "characterOffsetEnd": 97, "segment_span": [0, 20], "characterOffsetBegin": 91, "originalText": "simply", "ArgType": null, "before": " "}, {"index": 20, "word": "fail", "lemma": "fail", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 102, "segment_span": [0, 20], "tense": "B", "characterOffsetBegin": 98, "originalText": "fail", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 104, "characterOffsetBegin": 103, "originalText": ".", "ArgType": null, "before": " "}], "text": "First , when applied to a string that does happen to contain a marker , the algorithm will simply fail ."}, {"tokens": [{"index": 1, "word": "Second", "lemma": "second", "after": " ", "pos": "RB", "characterOffsetEnd": 6, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "Second", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 8, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 11, "segment_span": [0, 12], "characterOffsetBegin": 9, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 4, "word": "leads", "lemma": "lead", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 12], "tense": "Z", "characterOffsetBegin": 12, "originalText": "leads", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 20, "segment_span": [0, 12], "characterOffsetBegin": 18, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "logical", "lemma": "logical", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 12], "characterOffsetBegin": 21, "originalText": "logical", "ArgType": null, "before": " "}, {"index": 7, "word": "problems", "lemma": "problem", "after": " ", "pos": "NNS", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 29, "originalText": "problems", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 12], "characterOffsetBegin": 38, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 12], "characterOffsetBegin": 41, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "interpretation", "lemma": "interpretation", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 12], "characterOffsetBegin": 45, "originalText": "interpretation", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 12], "characterOffsetBegin": 60, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "complementation", "lemma": "complementation", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 12], "characterOffsetBegin": 63, "originalText": "complementation", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 80, "characterOffsetBegin": 79, "originalText": ".", "ArgType": null, "before": " "}], "text": "Second , it leads to logical problems in the interpretation of complementation ."}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "Since", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 13], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "complement", "lemma": "complement", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 13], "characterOffsetBegin": 10, "originalText": "complement", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 13], "characterOffsetBegin": 21, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 25, "segment_span": [0, 13], "characterOffsetBegin": 24, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "regular", "lemma": "regular", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 13], "characterOffsetBegin": 26, "originalText": "regular", "ArgType": null, "before": " "}, {"index": 7, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 13], "characterOffsetBegin": 34, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 8, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 13], "characterOffsetBegin": 45, "originalText": "R", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 47, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 57, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 50, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 11, "word": "as", "lemma": "as", "after": "  ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [0, 13], "characterOffsetBegin": 58, "originalText": "as", "ArgType": null, "before": " "}, {"index": 12, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 13], "characterOffsetBegin": 62, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 73, "segment_span": [0, 13], "characterOffsetBegin": 72, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 14, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 77, "segment_span": [13, 17], "characterOffsetBegin": 74, "originalText": "one", "ArgType": "subj", "before": " "}, {"index": 15, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 83, "segment_span": [13, 17], "tense": "Z", "characterOffsetBegin": 78, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 86, "segment_span": [13, 17], "characterOffsetBegin": 84, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "know", "lemma": "know", "after": " ", "pos": "VB", "characterOffsetEnd": 91, "segment_span": [13, 17], "characterOffsetBegin": 87, "originalText": "know", "ArgType": null, "before": " "}, {"index": 18, "word": "whether", "lemma": "whether", "after": " ", "pos": "IN", "characterOffsetEnd": 99, "segment_span": [17, 26], "characterOffsetBegin": 92, "originalText": "whether", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 103, "segment_span": [17, 26], "characterOffsetBegin": 100, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [17, 26], "characterOffsetBegin": 104, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 21, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 118, "segment_span": [17, 26], "characterOffsetBegin": 111, "originalText": "symbols", "ArgType": "subj", "before": " "}, {"index": 22, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 122, "segment_span": [17, 26], "characterOffsetBegin": 119, "originalText": "are", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 125, "segment_span": [17, 26], "characterOffsetBegin": 123, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [17, 26], "characterOffsetBegin": 127, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 25, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 139, "segment_span": [17, 26], "characterOffsetBegin": 137, "originalText": "or", "ArgType": null, "before": "  "}, {"index": 26, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 143, "segment_span": [17, 26], "characterOffsetBegin": 140, "originalText": "not", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 145, "characterOffsetBegin": 144, "originalText": ".", "ArgType": null, "before": " "}], "text": "Since the complement of a regular expression R is defined as equation , one needs to know whether the marker symbols are in equation or not ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 8, "segment_span": [0, 9], "characterOffsetBegin": 5, "originalText": "has", "ArgType": null, "before": " "}, {"index": 3, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 12, "segment_span": [0, 9], "characterOffsetBegin": 9, "originalText": "not", "ArgType": null, "before": " "}, {"index": 4, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 17, "segment_span": [0, 9], "characterOffsetBegin": 13, "originalText": "been", "ArgType": null, "before": " "}, {"index": 5, "word": "clearly", "lemma": "clearly", "after": " ", "pos": "RB", "characterOffsetEnd": 25, "segment_span": [0, 9], "characterOffsetBegin": 18, "originalText": "clearly", "ArgType": null, "before": " "}, {"index": 6, "word": "addressed", "is_pass": true, "lemma": "address", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 35, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 26, "originalText": "addressed", "has_aux": true, "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 36, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 47, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 9, "word": "literature", "lemma": "literature", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 9], "characterOffsetBegin": 48, "originalText": "literature", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 60, "characterOffsetBegin": 59, "originalText": ".", "ArgType": null, "before": " "}], "text": "This has not been clearly addressed in previous literature ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 7, "segment_span": [0, 6], "characterOffsetBegin": 3, "originalText": "have", "ArgType": null, "before": " "}, {"index": 3, "word": "taken", "lemma": "take", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 8, "originalText": "taken", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 6], "characterOffsetBegin": 14, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 25, "segment_span": [0, 6], "characterOffsetBegin": 16, "originalText": "different", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 6], "characterOffsetBegin": 26, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [6, 16], "characterOffsetBegin": 35, "originalText": "by", "ArgType": null, "before": " "}, {"index": 8, "word": "providing", "lemma": "provide", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 47, "segment_span": [6, 16], "tense": "G", "characterOffsetBegin": 38, "originalText": "providing", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [6, 16], "characterOffsetBegin": 48, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "contextual", "lemma": "contextual", "after": " ", "pos": "JJ", "characterOffsetEnd": 60, "segment_span": [6, 16], "characterOffsetBegin": 50, "originalText": "contextual", "ArgType": null, "before": " "}, {"index": 11, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [6, 16], "characterOffsetBegin": 61, "originalText": "way", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [6, 16], "characterOffsetBegin": 65, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "distinguishing", "lemma": "distinguish", "after": " ", "pos": "VBG", "characterOffsetEnd": 82, "segment_span": [6, 16], "characterOffsetBegin": 68, "originalText": "distinguishing", "ArgType": null, "before": " "}, {"index": 14, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 90, "segment_span": [6, 16], "characterOffsetBegin": 83, "originalText": "markers", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [6, 16], "characterOffsetBegin": 91, "originalText": "from", "ArgType": null, "before": " "}, {"index": 16, "word": "non-markers", "lemma": "non-markers", "after": " ", "pos": "JJ", "characterOffsetEnd": 107, "segment_span": [6, 16], "characterOffsetBegin": 96, "originalText": "non-markers", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 109, "characterOffsetBegin": 108, "originalText": ".", "ArgType": null, "before": " "}], "text": "We have taken a different approach by providing a contextual way of distinguishing markers from non-markers ."}, {"tokens": [{"index": 1, "word": "Every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 5, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "Every", "ArgType": null, "before": ""}, {"index": 2, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 14], "characterOffsetBegin": 6, "originalText": "symbol", "ArgType": null, "before": " "}, {"index": 3, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 17, "segment_span": [0, 14], "characterOffsetBegin": 13, "originalText": "used", "ArgType": null, "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 20, "segment_span": [0, 14], "characterOffsetBegin": 18, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 14], "characterOffsetBegin": 21, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 14], "characterOffsetBegin": 25, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 37, "segment_span": [0, 14], "characterOffsetBegin": 35, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "replaced", "is_pass": true, "lemma": "replace", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 38, "originalText": "replaced", "ArgType": null, "before": " "}, {"index": 9, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [0, 14], "characterOffsetBegin": 47, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [0, 14], "characterOffsetBegin": 50, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "pair", "lemma": "pair", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 14], "characterOffsetBegin": 52, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [0, 14], "characterOffsetBegin": 57, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 67, "segment_span": [0, 14], "characterOffsetBegin": 60, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 69, "segment_span": [0, 14], "characterOffsetBegin": 68, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 75, "segment_span": [14, 29], "characterOffsetBegin": 70, "originalText": "where", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [14, 29], "characterOffsetBegin": 76, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 86, "segment_span": [14, 29], "characterOffsetBegin": 80, "originalText": "second", "ArgType": null, "before": " "}, {"index": 18, "word": "member", "lemma": "member", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [14, 29], "characterOffsetBegin": 87, "originalText": "member", "ArgType": "subj", "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 96, "segment_span": [14, 29], "characterOffsetBegin": 94, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [14, 29], "characterOffsetBegin": 97, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "pair", "lemma": "pair", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [14, 29], "characterOffsetBegin": 101, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 22, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 108, "segment_span": [14, 29], "tense": "Z", "characterOffsetBegin": 106, "originalText": "is", "ArgType": null, "before": " "}, {"index": 23, "word": "either", "lemma": "either", "after": " ", "pos": "CC", "characterOffsetEnd": 115, "segment_span": [14, 29], "characterOffsetBegin": 109, "originalText": "either", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 117, "segment_span": [14, 29], "characterOffsetBegin": 116, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 119, "segment_span": [14, 29], "characterOffsetBegin": 118, "originalText": "0", "ArgType": null, "before": " "}, {"index": 26, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 122, "segment_span": [14, 29], "characterOffsetBegin": 120, "originalText": "or", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 124, "segment_span": [14, 29], "characterOffsetBegin": 123, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 126, "segment_span": [14, 29], "characterOffsetBegin": 125, "originalText": "1", "ArgType": null, "before": " "}, {"index": 29, "word": "depending", "lemma": "depend", "after": " ", "pos": "VBG", "characterOffsetEnd": 136, "segment_span": [14, 29], "characterOffsetBegin": 127, "originalText": "depending", "ArgType": null, "before": " "}, {"index": 30, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [29, 39], "characterOffsetBegin": 137, "originalText": "on", "ArgType": null, "before": " "}, {"index": 31, "word": "whether", "lemma": "whether", "after": " ", "pos": "IN", "characterOffsetEnd": 147, "segment_span": [29, 39], "characterOffsetBegin": 140, "originalText": "whether", "ArgType": null, "before": " "}, {"index": 32, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 151, "segment_span": [29, 39], "characterOffsetBegin": 148, "originalText": "the", "ArgType": null, "before": " "}, {"index": 33, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 157, "segment_span": [29, 39], "characterOffsetBegin": 152, "originalText": "first", "ArgType": null, "before": " "}, {"index": 34, "word": "member", "lemma": "member", "after": " ", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [29, 39], "characterOffsetBegin": 158, "originalText": "member", "ArgType": "subj", "before": " "}, {"index": 35, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 167, "segment_span": [29, 39], "characterOffsetBegin": 165, "originalText": "is", "ArgType": null, "before": " "}, {"index": 36, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 169, "segment_span": [29, 39], "characterOffsetBegin": 168, "originalText": "a", "ArgType": null, "before": " "}, {"index": 37, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 176, "segment_span": [29, 39], "characterOffsetBegin": 170, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 38, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 179, "segment_span": [29, 39], "characterOffsetBegin": 177, "originalText": "or", "ArgType": null, "before": " "}, {"index": 39, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 183, "segment_span": [29, 39], "characterOffsetBegin": 180, "originalText": "not", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 185, "characterOffsetBegin": 184, "originalText": ".", "ArgType": null, "before": " "}], "text": "Every symbol used in the algorithm is replaced by a pair of symbols , where the second member of the pair is either a 0 or a 1 depending on whether the first member is a marker or not ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 21], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 21], "characterOffsetBegin": 7, "originalText": "first", "ArgType": null, "before": " "}, {"index": 4, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 21], "characterOffsetBegin": 13, "originalText": "step", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 20, "segment_span": [0, 21], "characterOffsetBegin": 18, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 21], "characterOffsetBegin": 21, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 21], "characterOffsetBegin": 25, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 36, "segment_span": [0, 21], "characterOffsetBegin": 35, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "0", "lemma": "0", "after": "", "pos": "CD", "characterOffsetEnd": 38, "segment_span": [0, 21], "characterOffsetBegin": 37, "originalText": "0", "ArgType": null, "before": " "}, {"index": 10, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 40, "segment_span": [0, 21], "characterOffsetBegin": 38, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 11, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 44, "segment_span": [0, 21], "characterOffsetBegin": 41, "originalText": "are", "ArgType": null, "before": " "}, {"index": 12, "word": "inserted", "is_pass": true, "lemma": "insert", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 53, "segment_span": [0, 21], "tense": "N", "characterOffsetBegin": 45, "originalText": "inserted", "ArgType": null, "before": " "}, {"index": 13, "word": "after", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [0, 21], "characterOffsetBegin": 54, "originalText": "after", "ArgType": null, "before": " "}, {"index": 14, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [0, 21], "characterOffsetBegin": 60, "originalText": "every", "ArgType": null, "before": " "}, {"index": 15, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 21], "characterOffsetBegin": 66, "originalText": "symbol", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 75, "segment_span": [0, 21], "characterOffsetBegin": 73, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [0, 21], "characterOffsetBegin": 76, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [0, 21], "characterOffsetBegin": 80, "originalText": "input", "ArgType": null, "before": " "}, {"index": 19, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 21], "characterOffsetBegin": 86, "originalText": "string", "ArgType": null, "before": " "}, {"index": 20, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 95, "segment_span": [0, 21], "characterOffsetBegin": 93, "originalText": "to", "ArgType": null, "before": " "}, {"index": 21, "word": "indicate", "lemma": "indicate", "after": " ", "pos": "VB", "characterOffsetEnd": 104, "segment_span": [0, 21], "characterOffsetBegin": 96, "originalText": "indicate", "ArgType": null, "before": " "}, {"index": 22, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [21, 28], "characterOffsetBegin": 105, "originalText": "that", "ArgType": null, "before": " "}, {"index": 23, "word": "initially", "lemma": "initially", "after": " ", "pos": "RB", "characterOffsetEnd": 119, "segment_span": [21, 28], "characterOffsetBegin": 110, "originalText": "initially", "ArgType": null, "before": " "}, {"index": 24, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 125, "segment_span": [21, 28], "characterOffsetBegin": 120, "originalText": "every", "ArgType": null, "before": " "}, {"index": 25, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [21, 28], "characterOffsetBegin": 126, "originalText": "symbol", "ArgType": "subj", "before": " "}, {"index": 26, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 135, "segment_span": [21, 28], "characterOffsetBegin": 133, "originalText": "is", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 137, "segment_span": [21, 28], "characterOffsetBegin": 136, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "non-marker", "lemma": "non-marker", "after": " ", "pos": "JJ", "characterOffsetEnd": 148, "segment_span": [21, 28], "characterOffsetBegin": 138, "originalText": "non-marker", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 150, "characterOffsetBegin": 149, "originalText": ".", "ArgType": null, "before": " "}], "text": "As the first step in the algorithm , 0 's are inserted after every symbol in the input string to indicate that initially every symbol is a non-marker ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 5, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 15, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 8, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 4, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "as", "ArgType": null, "before": " "}, {"index": 5, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 20, "segment_span": [0, 10], "characterOffsetBegin": 19, "originalText": ":", "ArgType": null, "before": " "}, {"index": 6, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 10], "characterOffsetBegin": 21, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "non_markers", "lemma": "non_markers", "after": " ", "pos": "NNS", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 29, "originalText": "non_markers", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 42, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 44, "segment_span": [0, 10], "characterOffsetBegin": 43, "originalText": "[", "ArgType": null, "before": " "}, {"index": 11, "word": "?", "lemma": "?", "after": "", "pos": ".", "characterOffsetEnd": 45, "characterOffsetBegin": 44, "originalText": "?", "ArgType": null, "before": ""}], "text": "This is defined as : macro ( non_markers , [ ?"}, {"tokens": [{"index": 1, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": ",", "ArgType": null, "before": ""}, {"index": 2, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 3, "segment_span": [0, 7], "characterOffsetBegin": 2, "originalText": "[", "ArgType": null, "before": " "}, {"index": 3, "word": "]", "lemma": "-rsb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 4, "segment_span": [0, 7], "characterOffsetBegin": 3, "originalText": "]", "ArgType": null, "before": ""}, {"index": 4, "word": ":0", "lemma": ":0", "after": "", "pos": "CD", "characterOffsetEnd": 6, "segment_span": [0, 7], "characterOffsetBegin": 4, "originalText": ":0", "ArgType": null, "before": ""}, {"index": 5, "word": "]", "lemma": "-rsb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 7, "segment_span": [0, 7], "characterOffsetBegin": 6, "originalText": "]", "ArgType": null, "before": ""}, {"index": 6, "word": "*", "lemma": "*", "after": " ", "pos": "SYM", "characterOffsetEnd": 8, "segment_span": [0, 7], "characterOffsetBegin": 7, "originalText": "*", "ArgType": null, "before": ""}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 10, "segment_span": [0, 7], "characterOffsetBegin": 9, "originalText": ")", "ArgType": null, "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 12, "characterOffsetBegin": 11, "originalText": ".", "ArgType": null, "before": " "}], "text": ", [ ] :0 ] * ) ."}, {"tokens": [{"index": 1, "word": "Similarly", "lemma": "similarly", "after": " ", "pos": "RB", "characterOffsetEnd": 9, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Similarly", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 11, "segment_span": [0, 20], "characterOffsetBegin": 10, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 20], "characterOffsetBegin": 12, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 25, "segment_span": [0, 20], "characterOffsetBegin": 16, "originalText": "following", "ArgType": null, "before": " "}, {"index": 5, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 20], "characterOffsetBegin": 26, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 35, "segment_span": [0, 20], "characterOffsetBegin": 32, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 38, "segment_span": [0, 20], "characterOffsetBegin": 36, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 43, "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 39, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 46, "segment_span": [0, 20], "characterOffsetBegin": 44, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "insert", "lemma": "insert", "after": " ", "pos": "VB", "characterOffsetEnd": 53, "segment_span": [0, 20], "characterOffsetBegin": 47, "originalText": "insert", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [0, 20], "characterOffsetBegin": 54, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 57, "segment_span": [0, 20], "characterOffsetBegin": 56, "originalText": "0", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "after", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 20], "characterOffsetBegin": 58, "originalText": "after", "ArgType": null, "before": " "}, {"index": 14, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 20], "characterOffsetBegin": 64, "originalText": "every", "ArgType": null, "before": " "}, {"index": 15, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [0, 20], "characterOffsetBegin": 70, "originalText": "symbol", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 79, "segment_span": [0, 20], "characterOffsetBegin": 77, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 82, "segment_span": [0, 20], "characterOffsetBegin": 80, "originalText": "an", "ArgType": null, "before": " "}, {"index": 18, "word": "arbitrary", "lemma": "arbitrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 92, "segment_span": [0, 20], "characterOffsetBegin": 83, "originalText": "arbitrary", "ArgType": null, "before": " "}, {"index": 19, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 20], "characterOffsetBegin": 93, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 20, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 20], "characterOffsetBegin": 104, "originalText": "E", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 107, "characterOffsetBegin": 106, "originalText": ".", "ArgType": null, "before": " "}], "text": "Similarly , the following macro can be used to insert a 0 after every symbol in an arbitrary expression E ."}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "Since", "ArgType": null, "before": ""}, {"index": 2, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 5], "characterOffsetBegin": 6, "originalText": "E", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 10, "segment_span": [0, 5], "characterOffsetBegin": 8, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 5], "characterOffsetBegin": 11, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "recognizer", "lemma": "recognizer", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 5], "characterOffsetBegin": 13, "originalText": "recognizer", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 25, "segment_span": [5, 15], "characterOffsetBegin": 24, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 28, "segment_span": [5, 15], "characterOffsetBegin": 26, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 31, "segment_span": [5, 15], "characterOffsetBegin": 29, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [5, 15], "characterOffsetBegin": 32, "originalText": "first", "ArgType": null, "before": " "}, {"index": 10, "word": "coerced", "lemma": "coerce", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 45, "segment_span": [5, 15], "tense": "N", "characterOffsetBegin": 38, "originalText": "coerced", "ArgType": "verb", "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 48, "segment_span": [5, 15], "characterOffsetBegin": 46, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "identity", "lemma": "identity", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [5, 15], "characterOffsetBegin": 49, "originalText": "identity", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 59, "segment_span": [5, 15], "characterOffsetBegin": 58, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [5, 15], "characterOffsetBegin": 60, "originalText": "E", "ArgType": null, "before": " "}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 63, "segment_span": [5, 15], "characterOffsetBegin": 62, "originalText": ")", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 65, "characterOffsetBegin": 64, "originalText": ".", "ArgType": null, "before": " "}], "text": "Since E is a recognizer , it is first coerced to identity ( E ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 12], "characterOffsetBegin": 5, "originalText": "form", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 12], "characterOffsetBegin": 10, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "implicit", "lemma": "implicit", "after": " ", "pos": "JJ", "characterOffsetEnd": 21, "segment_span": [0, 12], "characterOffsetBegin": 13, "originalText": "implicit", "ArgType": null, "before": " "}, {"index": 5, "word": "conversion", "lemma": "conversion", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 12], "characterOffsetBegin": 22, "originalText": "conversion", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 35, "segment_span": [0, 12], "characterOffsetBegin": 33, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "standard", "lemma": "standard", "after": " ", "pos": "JJ", "characterOffsetEnd": 44, "segment_span": [0, 12], "characterOffsetBegin": 36, "originalText": "standard", "ArgType": "verb", "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [0, 12], "characterOffsetBegin": 45, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [0, 12], "characterOffsetBegin": 48, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [0, 12], "characterOffsetBegin": 52, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 11, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [0, 12], "characterOffsetBegin": 59, "originalText": "state", "ArgType": null, "before": " "}, {"index": 12, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 12], "characterOffsetBegin": 65, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 75, "characterOffsetBegin": 74, "originalText": ".", "ArgType": null, "before": " "}], "text": "This form of implicit conversion is standard in the finite state calculus ."}, {"tokens": [{"index": 1, "word": "Note", "lemma": "note", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 4, "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 0, "originalText": "Note", "ArgType": null, "before": ""}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 9, "segment_span": [1, 11], "characterOffsetBegin": 5, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 11, "segment_span": [1, 11], "characterOffsetBegin": 10, "originalText": "0", "ArgType": "subj", "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 15, "segment_span": [1, 11], "characterOffsetBegin": 12, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 17, "segment_span": [1, 11], "characterOffsetBegin": 16, "originalText": "1", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 21, "segment_span": [1, 11], "characterOffsetBegin": 18, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "perfectly", "lemma": "perfectly", "after": " ", "pos": "RB", "characterOffsetEnd": 31, "segment_span": [1, 11], "characterOffsetBegin": 22, "originalText": "perfectly", "ArgType": null, "before": " "}, {"index": 8, "word": "ordinary", "lemma": "ordinary", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [1, 11], "characterOffsetBegin": 32, "originalText": "ordinary", "ArgType": null, "before": " "}, {"index": 9, "word": "alphabet", "lemma": "alphabet", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [1, 11], "characterOffsetBegin": 41, "originalText": "alphabet", "ArgType": null, "before": " "}, {"index": 10, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [1, 11], "characterOffsetBegin": 50, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 59, "segment_span": [1, 11], "characterOffsetBegin": 58, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 65, "segment_span": [11, 19], "characterOffsetBegin": 60, "originalText": "which", "ArgType": null, "before": " "}, {"index": 13, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 69, "segment_span": [11, 19], "characterOffsetBegin": 66, "originalText": "may", "ArgType": null, "before": " "}, {"index": 14, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 74, "segment_span": [11, 19], "characterOffsetBegin": 70, "originalText": "also", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 77, "segment_span": [11, 19], "characterOffsetBegin": 75, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 82, "segment_span": [11, 19], "tense": "N", "characterOffsetBegin": 78, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "within", "lemma": "within", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [11, 19], "characterOffsetBegin": 83, "originalText": "within", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 91, "segment_span": [11, 19], "characterOffsetBegin": 90, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "replacement", "lemma": "replacement", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [11, 19], "characterOffsetBegin": 92, "originalText": "replacement", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 105, "characterOffsetBegin": 104, "originalText": ".", "ArgType": null, "before": " "}], "text": "Note that 0 and 1 are perfectly ordinary alphabet symbols , which may also be used within a replacement ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 16], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 16], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 16], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 16], "characterOffsetBegin": 18, "originalText": "sequence", "ArgType": "subj", "before": " "}, {"index": 6, "word": "[", "lemma": "-lsb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 28, "segment_span": [0, 16], "characterOffsetBegin": 27, "originalText": "[", "ArgType": null, "before": " "}, {"index": 7, "word": "1,0", "lemma": "1,0", "after": "", "pos": "CD", "characterOffsetEnd": 31, "segment_span": [0, 16], "characterOffsetBegin": 28, "originalText": "1,0", "ArgType": null, "before": ""}, {"index": 8, "word": "]", "lemma": "-rsb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 32, "segment_span": [0, 16], "characterOffsetBegin": 31, "originalText": "]", "ArgType": null, "before": ""}, {"index": 9, "word": "represents", "lemma": "represent", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 43, "segment_span": [0, 16], "tense": "Z", "characterOffsetBegin": 33, "originalText": "represents", "ArgType": "verb", "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [0, 16], "characterOffsetBegin": 44, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "non-marker", "lemma": "non-marker", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [0, 16], "characterOffsetBegin": 46, "originalText": "non-marker", "ArgType": null, "before": " "}, {"index": 12, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 16], "characterOffsetBegin": 57, "originalText": "use", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 16], "characterOffsetBegin": 61, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 67, "segment_span": [0, 16], "characterOffsetBegin": 64, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "symbol", "lemma": "symbol", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 16], "characterOffsetBegin": 68, "originalText": "symbol", "ArgType": null, "before": " "}, {"index": 16, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 76, "segment_span": [0, 16], "characterOffsetBegin": 75, "originalText": "1", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 78, "characterOffsetBegin": 77, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example , the sequence [ 1,0 ] represents a non-marker use of the symbol 1 ."}, {"tokens": [{"index": 1, "word": "Before", "lemma": "before", "after": " ", "pos": "IN", "characterOffsetEnd": 6, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "Before", "ArgType": null, "before": ""}, {"index": 2, "word": "describing", "lemma": "describe", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 17, "segment_span": [0, 4], "tense": "G", "characterOffsetBegin": 7, "originalText": "describing", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 4], "characterOffsetBegin": 18, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 4], "characterOffsetBegin": 22, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 33, "segment_span": [4, 19], "characterOffsetBegin": 32, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 36, "segment_span": [4, 19], "characterOffsetBegin": 34, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 7, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 41, "segment_span": [4, 19], "characterOffsetBegin": 37, "originalText": "will", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 44, "segment_span": [4, 19], "characterOffsetBegin": 42, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "helpful", "lemma": "helpful", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [4, 19], "has_aux": true, "characterOffsetBegin": 45, "originalText": "helpful", "ArgType": "verb", "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 55, "segment_span": [4, 19], "characterOffsetBegin": 53, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "have", "lemma": "have", "after": " ", "pos": "VB", "characterOffsetEnd": 60, "segment_span": [4, 19], "characterOffsetBegin": 56, "originalText": "have", "ArgType": null, "before": " "}, {"index": 12, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [4, 19], "characterOffsetBegin": 61, "originalText": "at", "ArgType": null, "before": " "}, {"index": 13, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 67, "segment_span": [4, 19], "characterOffsetBegin": 64, "originalText": "our", "ArgType": null, "before": " "}, {"index": 14, "word": "disposal", "lemma": "disposal", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [4, 19], "characterOffsetBegin": 68, "originalText": "disposal", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [4, 19], "characterOffsetBegin": 77, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "few", "lemma": "few", "after": " ", "pos": "JJ", "characterOffsetEnd": 82, "segment_span": [4, 19], "characterOffsetBegin": 79, "originalText": "few", "ArgType": null, "before": " "}, {"index": 17, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [4, 19], "characterOffsetBegin": 83, "originalText": "general", "ArgType": null, "before": " "}, {"index": 18, "word": "tools", "lemma": "tool", "after": " ", "pos": "NNS", "characterOffsetEnd": 96, "segment_span": [4, 19], "characterOffsetBegin": 91, "originalText": "tools", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [4, 19], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": " "}, {"index": 20, "word": "most", "lemma": "most", "after": " ", "pos": "JJS", "characterOffsetEnd": 103, "segment_span": [19, 32], "characterOffsetBegin": 99, "originalText": "most", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 106, "segment_span": [19, 32], "characterOffsetBegin": 104, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 112, "segment_span": [19, 32], "characterOffsetBegin": 107, "originalText": "which", "ArgType": null, "before": " "}, {"index": 23, "word": "were", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 117, "segment_span": [19, 32], "characterOffsetBegin": 113, "originalText": "were", "ArgType": null, "before": " "}, {"index": 24, "word": "described", "is_pass": true, "lemma": "describe", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 127, "segment_span": [19, 32], "tense": "N", "characterOffsetBegin": 118, "originalText": "described", "ArgType": null, "before": " "}, {"index": 25, "word": "already", "lemma": "already", "after": " ", "pos": "RB", "characterOffsetEnd": 135, "segment_span": [19, 32], "characterOffsetBegin": 128, "originalText": "already", "ArgType": null, "before": " "}, {"index": 26, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 138, "segment_span": [19, 32], "characterOffsetBegin": 136, "originalText": "in", "ArgType": null, "before": " "}, {"index": 27, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 141, "segment_span": [19, 32], "characterOffsetBegin": 140, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 28, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 148, "segment_span": [19, 32], "characterOffsetBegin": 142, "originalText": "Kaplan", "ArgType": null, "before": " "}, {"index": 29, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 152, "segment_span": [19, 32], "characterOffsetBegin": 149, "originalText": "and", "ArgType": null, "before": " "}, {"index": 30, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 156, "segment_span": [19, 32], "characterOffsetBegin": 153, "originalText": "Kay", "ArgType": null, "before": " "}, {"index": 31, "word": "1994", "lemma": "1994", "after": " ", "pos": "CD", "characterOffsetEnd": 161, "segment_span": [19, 32], "characterOffsetBegin": 157, "originalText": "1994", "ArgType": null, "before": " "}, {"index": 32, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 163, "segment_span": [19, 32], "characterOffsetBegin": 162, "originalText": ")", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 166, "characterOffsetBegin": 165, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Before describing the algorithm , it will be helpful to have at our disposal a few general tools , most of which were described already in ( Kaplan and Kay 1994 ) ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 5, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "These", "ArgType": null, "before": ""}, {"index": 2, "word": "tools", "lemma": "tool", "after": " ", "pos": "NNS", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 6, "originalText": "tools", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 8], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "however", "lemma": "however", "after": " ", "pos": "RB", "characterOffsetEnd": 21, "segment_span": [0, 8], "characterOffsetBegin": 14, "originalText": "however", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 23, "segment_span": [0, 8], "characterOffsetBegin": 22, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 28, "segment_span": [0, 8], "characterOffsetBegin": 24, "originalText": "have", "ArgType": null, "before": " "}, {"index": 7, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 33, "segment_span": [0, 8], "characterOffsetBegin": 29, "originalText": "been", "ArgType": null, "before": " "}, {"index": 8, "word": "modified", "is_pass": true, "lemma": "modify", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 42, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 34, "originalText": "modified", "has_aux": true, "ArgType": null, "before": " "}, {"index": 9, "word": "so", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [8, 21], "characterOffsetBegin": 43, "originalText": "so", "ArgType": null, "before": " "}, {"index": 10, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 50, "segment_span": [8, 21], "characterOffsetBegin": 46, "originalText": "that", "ArgType": null, "before": " "}, {"index": 11, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 55, "segment_span": [8, 21], "characterOffsetBegin": 51, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 12, "word": "work", "lemma": "work", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 60, "segment_span": [8, 21], "tense": "P", "characterOffsetBegin": 56, "originalText": "work", "ArgType": null, "before": " "}, {"index": 13, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [8, 21], "characterOffsetBegin": 61, "originalText": "with", "ArgType": null, "before": " "}, {"index": 14, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 69, "segment_span": [8, 21], "characterOffsetBegin": 66, "originalText": "our", "ArgType": null, "before": " "}, {"index": 15, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [8, 21], "characterOffsetBegin": 70, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [8, 21], "characterOffsetBegin": 79, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "distinguishing", "lemma": "distinguish", "after": " ", "pos": "VBG", "characterOffsetEnd": 96, "segment_span": [8, 21], "characterOffsetBegin": 82, "originalText": "distinguishing", "ArgType": null, "before": " "}, {"index": 18, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 104, "segment_span": [8, 21], "characterOffsetBegin": 97, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 19, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [8, 21], "characterOffsetBegin": 105, "originalText": "from", "ArgType": null, "before": " "}, {"index": 20, "word": "ordinary", "lemma": "ordinary", "after": " ", "pos": "JJ", "characterOffsetEnd": 118, "segment_span": [8, 21], "characterOffsetBegin": 110, "originalText": "ordinary", "ArgType": null, "before": " "}, {"index": 21, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 126, "segment_span": [8, 21], "characterOffsetBegin": 119, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 128, "characterOffsetBegin": 127, "originalText": ".", "ArgType": null, "before": " "}], "text": "These tools , however , have been modified so that they work with our approach of distinguishing markers from ordinary symbols ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 2, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "So", "ArgType": null, "before": ""}, {"index": 2, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 5, "segment_span": [1, 4], "characterOffsetBegin": 3, "originalText": "to", "ArgType": null, "before": " "}, {"index": 3, "word": "begin", "lemma": "begin", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 11, "segment_span": [1, 4], "tense": "B", "characterOffsetBegin": 6, "originalText": "begin", "ArgType": null, "before": " "}, {"index": 4, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [1, 4], "characterOffsetBegin": 12, "originalText": "with", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 18, "segment_span": [0, 19], "characterOffsetBegin": 17, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 21, "segment_span": [0, 19], "characterOffsetBegin": 19, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "provide", "lemma": "provide", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 19], "tense": "P", "characterOffsetBegin": 22, "originalText": "provide", "ArgType": "verb", "before": " "}, {"index": 8, "word": "macros", "lemma": "macro", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 19], "characterOffsetBegin": 30, "originalText": "macros", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 39, "segment_span": [0, 19], "characterOffsetBegin": 37, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "describe", "lemma": "describe", "after": " ", "pos": "VB", "characterOffsetEnd": 48, "segment_span": [0, 19], "characterOffsetBegin": 40, "originalText": "describe", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [0, 19], "characterOffsetBegin": 49, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "alphabet", "lemma": "alphabet", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 19], "characterOffsetBegin": 53, "originalText": "alphabet", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 65, "segment_span": [0, 19], "characterOffsetBegin": 62, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [0, 19], "characterOffsetBegin": 66, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "alphabet", "lemma": "alphabet", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 19], "characterOffsetBegin": 70, "originalText": "alphabet", "ArgType": null, "before": " "}, {"index": 16, "word": "extended", "lemma": "extend", "after": " ", "pos": "VBN", "characterOffsetEnd": 87, "segment_span": [0, 19], "characterOffsetBegin": 79, "originalText": "extended", "ArgType": null, "before": " "}, {"index": 17, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 92, "segment_span": [0, 19], "characterOffsetBegin": 88, "originalText": "with", "ArgType": null, "before": " "}, {"index": 18, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [0, 19], "characterOffsetBegin": 93, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 19, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 107, "segment_span": [0, 19], "characterOffsetBegin": 100, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 20, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 109, "characterOffsetBegin": 108, "originalText": ":", "ArgType": null, "before": " "}], "text": "So to begin with , we provide macros to describe the alphabet and the alphabet extended with marker symbols :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 5], "characterOffsetBegin": 4, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 3, "word": "xsig", "lemma": "xsig", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 5], "characterOffsetBegin": 10, "originalText": "xsig", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 17, "segment_span": [0, 5], "characterOffsetBegin": 15, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 24, "segment_span": [0, 5], "characterOffsetBegin": 18, "originalText": "useful", "ArgType": "verb", "before": " "}, {"index": 6, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [5, 14], "characterOffsetBegin": 25, "originalText": "for", "ArgType": null, "before": " "}, {"index": 7, "word": "defining", "lemma": "define", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 37, "segment_span": [5, 14], "tense": "G", "characterOffsetBegin": 29, "originalText": "defining", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [5, 14], "characterOffsetBegin": 38, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "specialized", "lemma": "specialize", "after": " ", "pos": "VBN", "characterOffsetEnd": 51, "segment_span": [5, 14], "characterOffsetBegin": 40, "originalText": "specialized", "ArgType": null, "before": " "}, {"index": 10, "word": "version", "lemma": "version", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [5, 14], "characterOffsetBegin": 52, "originalText": "version", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [5, 14], "characterOffsetBegin": 60, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "complementation", "lemma": "complementation", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [5, 14], "characterOffsetBegin": 63, "originalText": "complementation", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 82, "segment_span": [5, 14], "characterOffsetBegin": 79, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "containment", "lemma": "containment", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [5, 14], "characterOffsetBegin": 83, "originalText": "containment", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 96, "characterOffsetBegin": 95, "originalText": ":", "ArgType": null, "before": " "}], "text": "The macro xsig is useful for defining a specialized version of complementation and containment :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 27], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 27], "characterOffsetBegin": 4, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 3, "word": "uses", "lemma": "use", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 18, "segment_span": [0, 27], "tense": "Z", "characterOffsetBegin": 14, "originalText": "uses", "ArgType": "verb", "before": " "}, {"index": 4, "word": "four", "lemma": "four", "after": " ", "pos": "CD", "characterOffsetEnd": 23, "segment_span": [0, 27], "characterOffsetBegin": 19, "originalText": "four", "ArgType": null, "before": " "}, {"index": 5, "word": "kinds", "lemma": "kind", "after": " ", "pos": "NNS", "characterOffsetEnd": 29, "segment_span": [0, 27], "characterOffsetBegin": 24, "originalText": "kinds", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 27], "characterOffsetBegin": 30, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 41, "segment_span": [0, 27], "characterOffsetBegin": 33, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 43, "segment_span": [0, 27], "characterOffsetBegin": 42, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "so", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [8, 21], "characterOffsetBegin": 44, "originalText": "so", "ArgType": null, "before": " "}, {"index": 10, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 49, "segment_span": [8, 21], "characterOffsetBegin": 47, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 11, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 54, "segment_span": [8, 21], "characterOffsetBegin": 50, "originalText": "will", "ArgType": null, "before": " "}, {"index": 12, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 57, "segment_span": [8, 21], "characterOffsetBegin": 55, "originalText": "be", "ArgType": null, "before": " "}, {"index": 13, "word": "convenient", "lemma": "convenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 68, "segment_span": [8, 21], "has_aux": true, "characterOffsetBegin": 58, "originalText": "convenient", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 71, "segment_span": [8, 21], "characterOffsetBegin": 69, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "define", "lemma": "define", "after": " ", "pos": "VB", "characterOffsetEnd": 78, "segment_span": [8, 21], "characterOffsetBegin": 72, "originalText": "define", "ArgType": null, "before": " "}, {"index": 16, "word": "macros", "lemma": "macro", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [8, 21], "characterOffsetBegin": 79, "originalText": "macros", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [8, 21], "characterOffsetBegin": 86, "originalText": "for", "ArgType": null, "before": " "}, {"index": 18, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 94, "segment_span": [8, 21], "characterOffsetBegin": 90, "originalText": "each", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [8, 21], "characterOffsetBegin": 95, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 103, "segment_span": [8, 21], "characterOffsetBegin": 98, "originalText": "these", "ArgType": null, "before": " "}, {"index": 21, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 112, "segment_span": [8, 21], "characterOffsetBegin": 104, "originalText": "brackets", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 114, "segment_span": [0, 27], "characterOffsetBegin": 113, "originalText": ",", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 118, "segment_span": [0, 27], "characterOffsetBegin": 115, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 122, "segment_span": [0, 27], "characterOffsetBegin": 119, "originalText": "for", "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 124, "segment_span": [0, 27], "characterOffsetBegin": 123, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "few", "lemma": "few", "after": " ", "pos": "JJ", "characterOffsetEnd": 128, "segment_span": [0, 27], "characterOffsetBegin": 125, "originalText": "few", "ArgType": null, "before": " "}, {"index": 27, "word": "disjunctions", "lemma": "disjunction", "after": " ", "pos": "NNS", "characterOffsetEnd": 141, "segment_span": [0, 27], "characterOffsetBegin": 129, "originalText": "disjunctions", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ".", "ArgType": null, "before": " "}], "text": "The algorithm uses four kinds of brackets , so it will be convenient to define macros for each of these brackets , and for a few disjunctions ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 3, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 13, "segment_span": [0, 20], "characterOffsetBegin": 7, "originalText": "Kaplan", "ArgType": null, "before": "  "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 15, "segment_span": [0, 20], "characterOffsetBegin": 14, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 19, "segment_span": [0, 20], "characterOffsetBegin": 15, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 20, "segment_span": [0, 20], "characterOffsetBegin": 19, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 22, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 8, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 28, "segment_span": [0, 20], "characterOffsetBegin": 25, "originalText": "Kay", "ArgType": null, "before": "  "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 30, "segment_span": [0, 20], "characterOffsetBegin": 29, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 34, "segment_span": [0, 20], "characterOffsetBegin": 30, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 35, "segment_span": [0, 20], "characterOffsetBegin": 34, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 38, "segment_span": [0, 20], "characterOffsetBegin": 37, "originalText": ",", "ArgType": null, "before": "  "}, {"index": 13, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 41, "segment_span": [0, 20], "characterOffsetBegin": 39, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 14, "word": "define", "lemma": "define", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 48, "segment_span": [0, 20], "tense": "P", "characterOffsetBegin": 42, "originalText": "define", "ArgType": "verb", "before": " "}, {"index": 15, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [0, 20], "characterOffsetBegin": 49, "originalText": "an", "ArgType": null, "before": " "}, {"index": 16, "word": "Intro", "lemma": "intro", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [0, 20], "characterOffsetBegin": 52, "originalText": "Intro", "ArgType": null, "before": " "}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 59, "segment_span": [0, 20], "characterOffsetBegin": 58, "originalText": "(", "ArgType": null, "before": " "}, {"index": 18, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 20], "characterOffsetBegin": 60, "originalText": "S", "ArgType": null, "before": " "}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 63, "segment_span": [0, 20], "characterOffsetBegin": 62, "originalText": ")", "ArgType": null, "before": " "}, {"index": 20, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 20], "characterOffsetBegin": 64, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 77, "segment_span": [20, 24], "characterOffsetBegin": 73, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 22, "word": "produces", "lemma": "produce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 86, "segment_span": [20, 24], "tense": "Z", "characterOffsetBegin": 78, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 23, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [20, 24], "characterOffsetBegin": 87, "originalText": "a", "ArgType": null, "before": " "}, {"index": 24, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [20, 24], "characterOffsetBegin": 89, "originalText": "transducer", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 104, "segment_span": [24, 34], "characterOffsetBegin": 100, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 26, "word": "freely", "lemma": "freely", "after": " ", "pos": "RB", "characterOffsetEnd": 111, "segment_span": [24, 34], "characterOffsetBegin": 105, "originalText": "freely", "ArgType": null, "before": " "}, {"index": 27, "word": "introduces", "lemma": "introduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 122, "segment_span": [24, 34], "tense": "Z", "characterOffsetBegin": 112, "originalText": "introduces", "ArgType": null, "before": " "}, {"index": 28, "word": "instances", "lemma": "instance", "after": " ", "pos": "NNS", "characterOffsetEnd": 132, "segment_span": [24, 34], "characterOffsetBegin": 123, "originalText": "instances", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [24, 34], "characterOffsetBegin": 133, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [24, 34], "characterOffsetBegin": 136, "originalText": "S", "ArgType": null, "before": " "}, {"index": 31, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 142, "segment_span": [24, 34], "characterOffsetBegin": 138, "originalText": "into", "ArgType": null, "before": " "}, {"index": 32, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 145, "segment_span": [24, 34], "characterOffsetBegin": 143, "originalText": "an", "ArgType": null, "before": " "}, {"index": 33, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [24, 34], "characterOffsetBegin": 146, "originalText": "input", "ArgType": null, "before": " "}, {"index": 34, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [24, 34], "characterOffsetBegin": 152, "originalText": "string", "ArgType": null, "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 160, "characterOffsetBegin": 159, "originalText": ".", "ArgType": null, "before": " "}], "text": "As in Kaplan ( 0000 ) & Kay ( 0000 ) , we define an Intro ( S ) operator that produces a transducer that freely introduces instances of S into an input string ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "extend", "lemma": "extend", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 9, "segment_span": [0, 4], "tense": "P", "characterOffsetBegin": 3, "originalText": "extend", "ArgType": "verb", "before": " "}, {"index": 3, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 14, "segment_span": [0, 4], "characterOffsetBegin": 10, "originalText": "this", "ArgType": null, "before": " "}, {"index": 4, "word": "idea", "lemma": "idea", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 4], "characterOffsetBegin": 15, "originalText": "idea", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 22, "segment_span": [4, 11], "characterOffsetBegin": 20, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "create", "lemma": "create", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 29, "segment_span": [4, 11], "tense": "B", "characterOffsetBegin": 23, "originalText": "create", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [4, 11], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "family", "lemma": "family", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [4, 11], "characterOffsetBegin": 32, "originalText": "family", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 41, "segment_span": [4, 11], "characterOffsetBegin": 39, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "Intro", "lemma": "Intro", "after": " ", "pos": "NNP", "characterOffsetEnd": 47, "segment_span": [4, 11], "characterOffsetBegin": 42, "originalText": "Intro", "ArgType": null, "before": " "}, {"index": 11, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [4, 11], "characterOffsetBegin": 48, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 59, "characterOffsetBegin": 58, "originalText": ".", "ArgType": null, "before": " "}], "text": "We extend this idea to create a family of Intro operators ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 5, "segment_span": [0, 5], "characterOffsetBegin": 3, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "often", "lemma": "often", "after": " ", "pos": "RB", "characterOffsetEnd": 11, "segment_span": [0, 5], "characterOffsetBegin": 6, "originalText": "often", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 5], "characterOffsetBegin": 12, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 5], "characterOffsetBegin": 16, "originalText": "case", "ArgType": "verb", "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [5, 25], "characterOffsetBegin": 21, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 28, "segment_span": [5, 25], "characterOffsetBegin": 26, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "want", "lemma": "want", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 33, "segment_span": [5, 25], "tense": "P", "characterOffsetBegin": 29, "originalText": "want", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 36, "segment_span": [5, 25], "characterOffsetBegin": 34, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "freely", "lemma": "freely", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [5, 25], "characterOffsetBegin": 37, "originalText": "freely", "ArgType": null, "before": " "}, {"index": 11, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VB", "characterOffsetEnd": 53, "segment_span": [5, 25], "characterOffsetBegin": 44, "originalText": "introduce", "ArgType": null, "before": " "}, {"index": 12, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [5, 25], "characterOffsetBegin": 54, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 13, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 68, "segment_span": [5, 25], "characterOffsetBegin": 61, "originalText": "symbols", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [5, 25], "characterOffsetBegin": 69, "originalText": "into", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [5, 25], "characterOffsetBegin": 74, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [5, 25], "characterOffsetBegin": 76, "originalText": "string", "ArgType": null, "before": " "}, {"index": 17, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [5, 25], "characterOffsetBegin": 83, "originalText": "at", "ArgType": null, "before": " "}, {"index": 18, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [5, 25], "characterOffsetBegin": 86, "originalText": "any", "ArgType": null, "before": " "}, {"index": 19, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 98, "segment_span": [5, 25], "characterOffsetBegin": 90, "originalText": "position", "ArgType": null, "before": " "}, {"index": 20, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 105, "segment_span": [5, 25], "characterOffsetBegin": 99, "originalText": "except", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [5, 25], "characterOffsetBegin": 106, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "beginning", "lemma": "beginning", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [5, 25], "characterOffsetBegin": 110, "originalText": "beginning", "ArgType": null, "before": " "}, {"index": 23, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 122, "segment_span": [5, 25], "characterOffsetBegin": 120, "originalText": "or", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 126, "segment_span": [5, 25], "characterOffsetBegin": 123, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "end", "lemma": "end", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [5, 25], "characterOffsetBegin": 127, "originalText": "end", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 132, "characterOffsetBegin": 131, "originalText": ".", "ArgType": null, "before": " "}], "text": "It is often the case that we want to freely introduce marker symbols into a string at any position except the beginning or the end ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "family", "lemma": "family", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 7], "characterOffsetBegin": 5, "originalText": "family", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [0, 7], "characterOffsetBegin": 12, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "Intro", "lemma": "Intro", "after": " ", "pos": "NNP", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 15, "originalText": "Intro", "ArgType": null, "before": " "}, {"index": 5, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 30, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 33, "segment_span": [0, 7], "characterOffsetBegin": 31, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 7], "characterOffsetBegin": 34, "originalText": "useful", "ArgType": "verb", "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [7, 14], "characterOffsetBegin": 41, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "defining", "lemma": "define", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 53, "segment_span": [7, 14], "tense": "G", "characterOffsetBegin": 45, "originalText": "defining", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [7, 14], "characterOffsetBegin": 54, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "family", "lemma": "family", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [7, 14], "characterOffsetBegin": 56, "originalText": "family", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [7, 14], "characterOffsetBegin": 63, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "Ignore", "lemma": "ignore", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [7, 14], "characterOffsetBegin": 66, "originalText": "Ignore", "ArgType": null, "before": " "}, {"index": 14, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 82, "segment_span": [7, 14], "characterOffsetBegin": 73, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ":", "ArgType": null, "before": " "}], "text": "This family of Intro operators is useful for defining a family of Ignore operators :"}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 6], "characterOffsetBegin": 3, "originalText": "order", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 11, "segment_span": [0, 6], "characterOffsetBegin": 9, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "create", "lemma": "create", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 18, "segment_span": [0, 6], "tense": "B", "characterOffsetBegin": 12, "originalText": "create", "ArgType": null, "before": " "}, {"index": 5, "word": "filter", "lemma": "filter", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 6], "characterOffsetBegin": 19, "originalText": "filter", "ArgType": null, "before": " "}, {"index": 6, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 37, "segment_span": [0, 6], "characterOffsetBegin": 26, "originalText": "transducers", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 40, "segment_span": [6, 8], "characterOffsetBegin": 38, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "ensure", "lemma": "ensure", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 47, "segment_span": [6, 8], "tense": "B", "characterOffsetBegin": 41, "originalText": "ensure", "ArgType": null, "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [8, 16], "characterOffsetBegin": 48, "originalText": "that", "ArgType": null, "before": " "}, {"index": 10, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 60, "segment_span": [8, 16], "characterOffsetBegin": 53, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 11, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 64, "segment_span": [8, 16], "characterOffsetBegin": 61, "originalText": "are", "ArgType": null, "before": " "}, {"index": 12, "word": "placed", "is_pass": true, "lemma": "place", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 71, "segment_span": [8, 16], "tense": "N", "characterOffsetBegin": 65, "originalText": "placed", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 74, "segment_span": [8, 16], "characterOffsetBegin": 72, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [8, 16], "characterOffsetBegin": 75, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "correct", "lemma": "correct", "after": " ", "pos": "JJ", "characterOffsetEnd": 86, "segment_span": [8, 16], "characterOffsetBegin": 79, "originalText": "correct", "ArgType": null, "before": " "}, {"index": 16, "word": "positions", "lemma": "position", "after": " ", "pos": "NNS", "characterOffsetEnd": 96, "segment_span": [8, 16], "characterOffsetBegin": 87, "originalText": "positions", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": "  ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [16, 35], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": " "}, {"index": 18, "word": "Kaplan", "lemma": "Kaplan", "after": " ", "pos": "NNP", "characterOffsetEnd": 106, "segment_span": [16, 35], "characterOffsetBegin": 100, "originalText": "Kaplan", "ArgType": "subj", "before": "  "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 108, "segment_span": [16, 35], "characterOffsetBegin": 107, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 112, "segment_span": [16, 35], "characterOffsetBegin": 108, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 113, "segment_span": [16, 35], "characterOffsetBegin": 112, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 116, "segment_span": [16, 35], "characterOffsetBegin": 115, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 23, "word": "Kay", "lemma": "Kay", "after": " ", "pos": "NNP", "characterOffsetEnd": 121, "segment_span": [16, 35], "characterOffsetBegin": 118, "originalText": "Kay", "ArgType": null, "before": "  "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 123, "segment_span": [16, 35], "characterOffsetBegin": 122, "originalText": "(", "ArgType": null, "before": " "}, {"index": 25, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 127, "segment_span": [16, 35], "characterOffsetBegin": 123, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 128, "segment_span": [16, 35], "characterOffsetBegin": 127, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 139, "segment_span": [16, 35], "tense": "B", "characterOffsetBegin": 130, "originalText": "introduce", "ArgType": "verb", "before": "  "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 143, "segment_span": [16, 35], "characterOffsetBegin": 140, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [16, 35], "characterOffsetBegin": 144, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 30, "word": "P-iff-S", "lemma": "p-iff-s", "after": " ", "pos": "NN", "characterOffsetEnd": 160, "segment_span": [16, 35], "characterOffsetBegin": 153, "originalText": "P-iff-S", "ArgType": "dobj", "before": " "}, {"index": 31, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 162, "segment_span": [16, 35], "characterOffsetBegin": 161, "originalText": "(", "ArgType": null, "before": " "}, {"index": 32, "word": "L1", "lemma": "l1", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [16, 35], "characterOffsetBegin": 163, "originalText": "L1", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 167, "segment_span": [16, 35], "characterOffsetBegin": 166, "originalText": ",", "ArgType": null, "before": " "}, {"index": 34, "word": "L2", "lemma": "l2", "after": " ", "pos": "NN", "characterOffsetEnd": 170, "segment_span": [16, 35], "characterOffsetBegin": 168, "originalText": "L2", "ArgType": null, "before": " "}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 172, "segment_span": [16, 35], "characterOffsetBegin": 171, "originalText": ")", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 174, "characterOffsetBegin": 173, "originalText": ".", "ArgType": null, "before": " "}], "text": "In order to create filter transducers to ensure that markers are placed in the correct positions , Kaplan ( 0000 ) & Kay ( 0000 ) introduce the operator P-iff-S ( L1 , L2 ) ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 31], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 31], "characterOffsetBegin": 2, "originalText": "string", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 11, "segment_span": [0, 31], "characterOffsetBegin": 9, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 21, "segment_span": [0, 31], "characterOffsetBegin": 12, "originalText": "described", "ArgType": null, "before": " "}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [4, 24], "characterOffsetBegin": 22, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [4, 24], "characterOffsetBegin": 25, "originalText": "this", "ArgType": null, "before": " "}, {"index": 7, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [4, 24], "characterOffsetBegin": 30, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 8, "word": "iff", "lemma": "iff", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [4, 24], "characterOffsetBegin": 41, "originalText": "iff", "ArgType": null, "before": " "}, {"index": 9, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [4, 24], "characterOffsetBegin": 45, "originalText": "each", "ArgType": null, "before": " "}, {"index": 10, "word": "prefix", "lemma": "prefix", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [4, 24], "characterOffsetBegin": 50, "originalText": "prefix", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 59, "segment_span": [4, 24], "characterOffsetBegin": 57, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "L1", "lemma": "l1", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [4, 24], "characterOffsetBegin": 60, "originalText": "L1", "ArgType": null, "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 65, "segment_span": [4, 24], "characterOffsetBegin": 63, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "followed", "is_pass": true, "lemma": "follow", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 74, "segment_span": [4, 24], "tense": "N", "characterOffsetBegin": 66, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 15, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 77, "segment_span": [4, 24], "characterOffsetBegin": 75, "originalText": "by", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [4, 24], "characterOffsetBegin": 78, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "suffix", "lemma": "suffix", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [4, 24], "characterOffsetBegin": 80, "originalText": "suffix", "ArgType": null, "before": " "}, {"index": 18, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [4, 24], "characterOffsetBegin": 87, "originalText": "in", "ArgType": null, "before": " "}, {"index": 19, "word": "L2", "lemma": "l2", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [4, 24], "characterOffsetBegin": 90, "originalText": "L2", "ArgType": null, "before": " "}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 96, "segment_span": [4, 24], "characterOffsetBegin": 93, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 101, "segment_span": [4, 24], "characterOffsetBegin": 97, "originalText": "each", "ArgType": null, "before": " "}, {"index": 22, "word": "suffix", "lemma": "suffix", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [4, 24], "characterOffsetBegin": 102, "originalText": "suffix", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 111, "segment_span": [4, 24], "characterOffsetBegin": 109, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "L2", "lemma": "l2", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [4, 24], "characterOffsetBegin": 112, "originalText": "L2", "ArgType": null, "before": " "}, {"index": 25, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 117, "segment_span": [0, 31], "characterOffsetBegin": 115, "originalText": "is", "ArgType": null, "before": " "}, {"index": 26, "word": "preceded", "is_pass": true, "lemma": "precede", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 126, "segment_span": [0, 31], "tense": "N", "characterOffsetBegin": 118, "originalText": "preceded", "ArgType": null, "before": " "}, {"index": 27, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 129, "segment_span": [0, 31], "characterOffsetBegin": 127, "originalText": "by", "ArgType": null, "before": " "}, {"index": 28, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 131, "segment_span": [0, 31], "characterOffsetBegin": 130, "originalText": "a", "ArgType": null, "before": " "}, {"index": 29, "word": "prefix", "lemma": "prefix", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [0, 31], "characterOffsetBegin": 132, "originalText": "prefix", "ArgType": null, "before": " "}, {"index": 30, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [0, 31], "characterOffsetBegin": 139, "originalText": "in", "ArgType": null, "before": " "}, {"index": 31, "word": "L1", "lemma": "l1", "after": " ", "pos": "NN", "characterOffsetEnd": 144, "segment_span": [0, 31], "characterOffsetBegin": 142, "originalText": "L1", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 146, "characterOffsetBegin": 145, "originalText": ".", "ArgType": null, "before": " "}], "text": "A string is described by this expression iff each prefix in L1 is followed by a suffix in L2 and each suffix in L2 is preceded by a prefix in L1 ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 6, "segment_span": [0, 8], "characterOffsetBegin": 3, "originalText": "our", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 8], "characterOffsetBegin": 7, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 17, "segment_span": [0, 8], "characterOffsetBegin": 16, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 18, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 25, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 33, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 26, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 36, "segment_span": [0, 8], "characterOffsetBegin": 34, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 38, "characterOffsetBegin": 37, "originalText": ":", "ArgType": null, "before": " "}], "text": "In our approach , this is defined as :"}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "make", "lemma": "make", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 8], "tense": "B", "characterOffsetBegin": 3, "originalText": "make", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 8, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 8], "characterOffsetBegin": 12, "originalText": "use", "ArgType": "subj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 8], "characterOffsetBegin": 16, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "p_iff_s", "lemma": "p_iff_s", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 8], "characterOffsetBegin": 19, "originalText": "p_iff_s", "ArgType": null, "before": " "}, {"index": 7, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 31, "segment_span": [0, 8], "characterOffsetBegin": 27, "originalText": "more", "ArgType": null, "before": " "}, {"index": 8, "word": "convenient", "lemma": "convenient", "after": " ", "pos": "JJ", "characterOffsetEnd": 42, "segment_span": [0, 8], "characterOffsetBegin": 32, "originalText": "convenient", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 44, "segment_span": [8, 21], "characterOffsetBegin": 43, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 47, "segment_span": [8, 21], "characterOffsetBegin": 45, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 11, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 57, "segment_span": [8, 21], "tense": "P", "characterOffsetBegin": 48, "originalText": "introduce", "ArgType": "verb", "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [8, 21], "characterOffsetBegin": 58, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [8, 21], "characterOffsetBegin": 60, "originalText": "new", "ArgType": null, "before": " "}, {"index": 14, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [8, 21], "characterOffsetBegin": 64, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 15, "word": "l_iff_r", "lemma": "l_iff_r", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [8, 21], "characterOffsetBegin": 73, "originalText": "l_iff_r", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 82, "segment_span": [8, 21], "characterOffsetBegin": 81, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "L", "lemma": "l", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [8, 21], "characterOffsetBegin": 83, "originalText": "L", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 86, "segment_span": [8, 21], "characterOffsetBegin": 85, "originalText": ",", "ArgType": null, "before": " "}, {"index": 19, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [8, 21], "characterOffsetBegin": 87, "originalText": "R", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 90, "segment_span": [8, 21], "characterOffsetBegin": 89, "originalText": ")", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 92, "segment_span": [8, 21], "characterOffsetBegin": 91, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 98, "segment_span": [21, 46], "characterOffsetBegin": 93, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 23, "word": "describes", "lemma": "describe", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 108, "segment_span": [21, 46], "tense": "Z", "characterOffsetBegin": 99, "originalText": "describes", "ArgType": null, "before": " "}, {"index": 24, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 116, "segment_span": [21, 46], "characterOffsetBegin": 109, "originalText": "strings", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 122, "segment_span": [24, 35], "characterOffsetBegin": 117, "originalText": "where", "ArgType": null, "before": " "}, {"index": 26, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 128, "segment_span": [24, 35], "characterOffsetBegin": 123, "originalText": "every", "ArgType": null, "before": " "}, {"index": 27, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [24, 35], "characterOffsetBegin": 129, "originalText": "string", "ArgType": null, "before": " "}, {"index": 28, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 144, "segment_span": [24, 35], "characterOffsetBegin": 136, "originalText": "position", "ArgType": null, "before": " "}, {"index": 29, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 147, "segment_span": [24, 35], "characterOffsetBegin": 145, "originalText": "is", "ArgType": null, "before": " "}, {"index": 30, "word": "preceded", "is_pass": true, "lemma": "precede", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 156, "segment_span": [24, 35], "tense": "N", "characterOffsetBegin": 148, "originalText": "preceded", "ArgType": null, "before": " "}, {"index": 31, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 159, "segment_span": [24, 35], "characterOffsetBegin": 157, "originalText": "by", "ArgType": null, "before": " "}, {"index": 32, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 161, "segment_span": [24, 35], "characterOffsetBegin": 160, "originalText": "a", "ArgType": null, "before": " "}, {"index": 33, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 168, "segment_span": [24, 35], "characterOffsetBegin": 162, "originalText": "string", "ArgType": null, "before": " "}, {"index": 34, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 171, "segment_span": [24, 35], "characterOffsetBegin": 169, "originalText": "in", "ArgType": null, "before": " "}, {"index": 35, "word": "L", "lemma": "l", "after": " ", "pos": "NN", "characterOffsetEnd": 173, "segment_span": [24, 35], "characterOffsetBegin": 172, "originalText": "L", "ArgType": null, "before": " "}, {"index": 36, "word": "just", "lemma": "just", "after": " ", "pos": "RB", "characterOffsetEnd": 178, "segment_span": [21, 46], "characterOffsetBegin": 174, "originalText": "just", "ArgType": null, "before": " "}, {"index": 37, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 181, "segment_span": [21, 46], "characterOffsetBegin": 179, "originalText": "in", "ArgType": null, "before": " "}, {"index": 38, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 186, "segment_span": [21, 46], "characterOffsetBegin": 182, "originalText": "case", "ArgType": null, "before": " "}, {"index": 39, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 189, "segment_span": [21, 46], "characterOffsetBegin": 187, "originalText": "it", "ArgType": null, "before": " "}, {"index": 40, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 192, "segment_span": [21, 46], "characterOffsetBegin": 190, "originalText": "is", "ArgType": null, "before": " "}, {"index": 41, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 201, "segment_span": [21, 46], "characterOffsetBegin": 193, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 42, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 204, "segment_span": [21, 46], "characterOffsetBegin": 202, "originalText": "by", "ArgType": null, "before": " "}, {"index": 43, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 206, "segment_span": [21, 46], "characterOffsetBegin": 205, "originalText": "a", "ArgType": null, "before": " "}, {"index": 44, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 213, "segment_span": [21, 46], "characterOffsetBegin": 207, "originalText": "string", "ArgType": null, "before": " "}, {"index": 45, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 216, "segment_span": [21, 46], "characterOffsetBegin": 214, "originalText": "in", "ArgType": null, "before": " "}, {"index": 46, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 218, "segment_span": [21, 46], "characterOffsetBegin": 217, "originalText": "R", "ArgType": null, "before": " "}, {"index": 47, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 220, "characterOffsetBegin": 219, "originalText": ":", "ArgType": null, "before": " "}], "text": "To make the use of p_iff_s more convenient , we introduce a new operator l_iff_r ( L , R ) , which describes strings where every string position is preceded by a string in L just in case it is followed by a string in R :"}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 17], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 12, "segment_span": [0, 17], "characterOffsetBegin": 10, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 17], "tense": "P", "characterOffsetBegin": 13, "originalText": "introduce", "ArgType": "verb", "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [0, 17], "characterOffsetBegin": 23, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 17], "characterOffsetBegin": 25, "originalText": "new", "ArgType": null, "before": " "}, {"index": 7, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 17], "characterOffsetBegin": 29, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 17], "characterOffsetBegin": 38, "originalText": "if", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 42, "segment_span": [0, 17], "characterOffsetBegin": 41, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "Condition", "lemma": "condition", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 17], "characterOffsetBegin": 43, "originalText": "Condition", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [0, 17], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "Then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 59, "segment_span": [0, 17], "characterOffsetBegin": 55, "originalText": "Then", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 61, "segment_span": [0, 17], "characterOffsetBegin": 60, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "Else", "lemma": "else", "after": " ", "pos": "RB", "characterOffsetEnd": 66, "segment_span": [0, 17], "characterOffsetBegin": 62, "originalText": "Else", "ArgType": null, "before": " "}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [0, 17], "characterOffsetBegin": 67, "originalText": ")", "ArgType": null, "before": " "}, {"index": 16, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 17], "characterOffsetBegin": 69, "originalText": "for", "ArgType": null, "before": " "}, {"index": 17, "word": "conditionals", "lemma": "conditional", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [0, 17], "characterOffsetBegin": 73, "originalText": "conditionals", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 87, "characterOffsetBegin": 86, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , we introduce a new operator if ( Condition , Then , Else ) for conditionals ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 23], "characterOffsetBegin": 5, "originalText": "operator", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 16, "segment_span": [0, 23], "characterOffsetBegin": 14, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "extremely", "lemma": "extremely", "after": " ", "pos": "RB", "characterOffsetEnd": 26, "segment_span": [0, 23], "characterOffsetBegin": 17, "originalText": "extremely", "ArgType": null, "before": " "}, {"index": 5, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 23], "characterOffsetBegin": 27, "originalText": "useful", "ArgType": "verb", "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 35, "segment_span": [0, 23], "characterOffsetBegin": 34, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 39, "segment_span": [0, 23], "characterOffsetBegin": 36, "originalText": "but", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 23], "characterOffsetBegin": 40, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "order", "lemma": "order", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 23], "characterOffsetBegin": 43, "originalText": "order", "ArgType": null, "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 23], "characterOffsetBegin": 49, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 55, "segment_span": [0, 23], "characterOffsetBegin": 53, "originalText": "it", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 58, "segment_span": [0, 23], "characterOffsetBegin": 56, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "work", "lemma": "work", "after": " ", "pos": "VB", "characterOffsetEnd": 63, "segment_span": [0, 23], "characterOffsetBegin": 59, "originalText": "work", "ArgType": null, "before": " "}, {"index": 14, "word": "within", "lemma": "within", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 23], "characterOffsetBegin": 64, "originalText": "within", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 74, "segment_span": [0, 23], "characterOffsetBegin": 71, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [0, 23], "characterOffsetBegin": 75, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 17, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 23], "characterOffsetBegin": 82, "originalText": "state", "ArgType": null, "before": " "}, {"index": 18, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [0, 23], "characterOffsetBegin": 88, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [0, 23], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": " "}, {"index": 20, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 102, "segment_span": [0, 23], "characterOffsetBegin": 99, "originalText": "one", "ArgType": "subj", "before": " "}, {"index": 21, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "characterOffsetEnd": 108, "segment_span": [0, 23], "characterOffsetBegin": 103, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 22, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [0, 23], "characterOffsetBegin": 109, "originalText": "a", "ArgType": null, "before": " "}, {"index": 23, "word": "convention", "lemma": "convention", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 23], "characterOffsetBegin": 111, "originalText": "convention", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [23, 37], "characterOffsetBegin": 122, "originalText": "as", "ArgType": null, "before": " "}, {"index": 25, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 127, "segment_span": [23, 37], "characterOffsetBegin": 125, "originalText": "to", "ArgType": null, "before": " "}, {"index": 26, "word": "what", "lemma": "what", "after": " ", "pos": "WP", "characterOffsetEnd": 132, "segment_span": [23, 37], "characterOffsetBegin": 128, "originalText": "what", "ArgType": "subj", "before": " "}, {"index": 27, "word": "counts", "lemma": "count", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 139, "segment_span": [23, 37], "tense": "Z", "characterOffsetBegin": 133, "originalText": "counts", "ArgType": null, "before": " "}, {"index": 28, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 142, "segment_span": [23, 37], "characterOffsetBegin": 140, "originalText": "as", "ArgType": null, "before": " "}, {"index": 29, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 144, "segment_span": [23, 37], "characterOffsetBegin": 143, "originalText": "a", "ArgType": null, "before": " "}, {"index": 30, "word": "boolean", "lemma": "boolean", "after": " ", "pos": "JJ", "characterOffsetEnd": 152, "segment_span": [23, 37], "characterOffsetBegin": 145, "originalText": "boolean", "ArgType": null, "before": " "}, {"index": 31, "word": "true", "lemma": "true", "after": " ", "pos": "JJ", "characterOffsetEnd": 157, "segment_span": [23, 37], "characterOffsetBegin": 153, "originalText": "true", "ArgType": "dobj", "before": " "}, {"index": 32, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 160, "segment_span": [23, 37], "characterOffsetBegin": 158, "originalText": "or", "ArgType": null, "before": " "}, {"index": 33, "word": "false", "lemma": "false", "after": " ", "pos": "JJ", "characterOffsetEnd": 166, "segment_span": [23, 37], "characterOffsetBegin": 161, "originalText": "false", "ArgType": null, "before": " "}, {"index": 34, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 170, "segment_span": [23, 37], "characterOffsetBegin": 167, "originalText": "for", "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 174, "segment_span": [23, 37], "characterOffsetBegin": 171, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "condition", "lemma": "condition", "after": " ", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [23, 37], "characterOffsetBegin": 175, "originalText": "condition", "ArgType": null, "before": " "}, {"index": 37, "word": "argument", "lemma": "argument", "after": " ", "pos": "NN", "characterOffsetEnd": 193, "segment_span": [23, 37], "characterOffsetBegin": 185, "originalText": "argument", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 195, "characterOffsetBegin": 194, "originalText": ".", "ArgType": null, "before": " "}], "text": "This operator is extremely useful , but in order for it to work within the finite state calculus , one needs a convention as to what counts as a boolean true or false for the condition argument ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 5, "segment_span": [0, 16], "characterOffsetBegin": 3, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 16], "characterOffsetBegin": 6, "originalText": "possible", "ArgType": "verb", "before": " "}, {"index": 4, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 17, "segment_span": [0, 16], "characterOffsetBegin": 15, "originalText": "to", "ArgType": null, "before": " "}, {"index": 5, "word": "define", "lemma": "define", "after": " ", "pos": "VB", "characterOffsetEnd": 24, "segment_span": [0, 16], "characterOffsetBegin": 18, "originalText": "define", "ArgType": null, "before": " "}, {"index": 6, "word": "true", "lemma": "true", "after": " ", "pos": "JJ", "characterOffsetEnd": 29, "segment_span": [0, 16], "characterOffsetBegin": 25, "originalText": "true", "ArgType": null, "before": " "}, {"index": 7, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 16], "characterOffsetBegin": 30, "originalText": "as", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [0, 16], "characterOffsetBegin": 33, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "universal", "lemma": "universal", "after": " ", "pos": "JJ", "characterOffsetEnd": 46, "segment_span": [0, 16], "characterOffsetBegin": 37, "originalText": "universal", "ArgType": null, "before": " "}, {"index": 10, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 16], "characterOffsetBegin": 47, "originalText": "language", "ArgType": null, "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 59, "segment_span": [0, 16], "characterOffsetBegin": 56, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "false", "lemma": "false", "after": " ", "pos": "JJ", "characterOffsetEnd": 65, "segment_span": [0, 16], "characterOffsetBegin": 60, "originalText": "false", "ArgType": null, "before": " "}, {"index": 13, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [0, 16], "characterOffsetBegin": 66, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 72, "segment_span": [0, 16], "characterOffsetBegin": 69, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [0, 16], "characterOffsetBegin": 73, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 16, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 16], "characterOffsetBegin": 79, "originalText": "language", "ArgType": null, "before": " "}, {"index": 17, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 89, "characterOffsetBegin": 88, "originalText": ":", "ArgType": null, "before": " "}], "text": "It is possible to define true as the universal language and false as the empty language :"}, {"tokens": [{"index": 1, "word": "With", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 4, "segment_span": [0, 24], "characterOffsetBegin": 0, "originalText": "With", "ArgType": null, "before": ""}, {"index": 2, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 24], "characterOffsetBegin": 5, "originalText": "these", "ArgType": null, "before": " "}, {"index": 3, "word": "definitions", "lemma": "definition", "after": " ", "pos": "NNS", "characterOffsetEnd": 22, "segment_span": [0, 24], "characterOffsetBegin": 11, "originalText": "definitions", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 24, "segment_span": [0, 24], "characterOffsetBegin": 23, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 27, "segment_span": [0, 24], "characterOffsetBegin": 25, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 31, "segment_span": [0, 24], "characterOffsetBegin": 28, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "use", "lemma": "use", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 35, "segment_span": [0, 24], "tense": "B", "characterOffsetBegin": 32, "originalText": "use", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [0, 24], "characterOffsetBegin": 36, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "complement", "lemma": "complement", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 24], "characterOffsetBegin": 40, "originalText": "complement", "ArgType": null, "before": " "}, {"index": 10, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 24], "characterOffsetBegin": 51, "originalText": "operator", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 24], "characterOffsetBegin": 60, "originalText": "as", "ArgType": null, "before": " "}, {"index": 12, "word": "negation", "lemma": "negation", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 24], "characterOffsetBegin": 63, "originalText": "negation", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 73, "segment_span": [0, 24], "characterOffsetBegin": 72, "originalText": ",", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 77, "segment_span": [0, 24], "characterOffsetBegin": 74, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "intersection", "lemma": "intersection", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [0, 24], "characterOffsetBegin": 78, "originalText": "intersection", "ArgType": null, "before": " "}, {"index": 16, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [0, 24], "characterOffsetBegin": 91, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 17, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 24], "characterOffsetBegin": 100, "originalText": "as", "ArgType": null, "before": " "}, {"index": 18, "word": "conjunction", "lemma": "conjunction", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [0, 24], "characterOffsetBegin": 103, "originalText": "conjunction", "ArgType": null, "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 118, "segment_span": [0, 24], "characterOffsetBegin": 115, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 122, "segment_span": [0, 24], "characterOffsetBegin": 119, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "union", "lemma": "union", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [0, 24], "characterOffsetBegin": 123, "originalText": "union", "ArgType": null, "before": " "}, {"index": 22, "word": "operator", "lemma": "operator", "after": " ", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [0, 24], "characterOffsetBegin": 129, "originalText": "operator", "ArgType": null, "before": " "}, {"index": 23, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 140, "segment_span": [0, 24], "characterOffsetBegin": 138, "originalText": "as", "ArgType": null, "before": " "}, {"index": 24, "word": "disjunction", "lemma": "disjunction", "after": " ", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [0, 24], "characterOffsetBegin": 141, "originalText": "disjunction", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 154, "characterOffsetBegin": 153, "originalText": ".", "ArgType": null, "before": " "}], "text": "With these definitions , we can use the complement operator as negation , the intersection operator as conjunction and the union operator as disjunction ."}, {"tokens": [{"index": 1, "word": "Arbitrary", "lemma": "arbitrary", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "Arbitrary", "ArgType": null, "before": ""}, {"index": 2, "word": "expressions", "lemma": "expression", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [0, 11], "characterOffsetBegin": 10, "originalText": "expressions", "ArgType": null, "before": " "}, {"index": 3, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 25, "segment_span": [0, 11], "characterOffsetBegin": 22, "originalText": "may", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 28, "segment_span": [0, 11], "characterOffsetBegin": 26, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "coerced", "is_pass": true, "lemma": "coerce", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 36, "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 29, "originalText": "coerced", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 39, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "booleans", "lemma": "boolean", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 40, "originalText": "booleans", "ArgType": null, "before": " "}, {"index": 8, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 54, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "using", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 11], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 68, "segment_span": [0, 11], "characterOffsetBegin": 59, "originalText": "following", "ArgType": null, "before": " "}, {"index": 11, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 11], "characterOffsetBegin": 69, "originalText": "macro", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 76, "characterOffsetBegin": 75, "originalText": ":", "ArgType": null, "before": " "}], "text": "Arbitrary expressions may be coerced to booleans using the following macro :"}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "Here", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 6, "segment_span": [0, 7], "characterOffsetBegin": 5, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 7], "characterOffsetBegin": 7, "originalText": "E", "ArgType": "subj", "before": " "}, {"index": 4, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 15, "segment_span": [0, 7], "characterOffsetBegin": 9, "originalText": "should", "ArgType": null, "before": " "}, {"index": 5, "word": "describe", "lemma": "describe", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 7], "tense": "B", "characterOffsetBegin": 16, "originalText": "describe", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [0, 7], "characterOffsetBegin": 25, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "recognizer", "lemma": "recognizer", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 7], "characterOffsetBegin": 27, "originalText": "recognizer", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 39, "characterOffsetBegin": 38, "originalText": ".", "ArgType": null, "before": " "}], "text": "Here , E should describe a recognizer ."}, {"tokens": [{"index": 1, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 1, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "E", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 4, "segment_span": [0, 8], "characterOffsetBegin": 2, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "composed", "is_pass": true, "lemma": "compose", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 13, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 5, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 4, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 18, "segment_span": [0, 8], "characterOffsetBegin": 14, "originalText": "with", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 19, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "universal", "lemma": "universal", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "universal", "ArgType": null, "before": " "}, {"index": 7, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 45, "segment_span": [0, 8], "characterOffsetBegin": 44, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 51, "segment_span": [8, 13], "characterOffsetBegin": 46, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 10, "word": "transduces", "lemma": "transduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 62, "segment_span": [8, 13], "tense": "Z", "characterOffsetBegin": 52, "originalText": "transduces", "ArgType": null, "before": " "}, {"index": 11, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [8, 13], "characterOffsetBegin": 63, "originalText": "from", "ArgType": null, "before": " "}, {"index": 12, "word": "anything", "lemma": "anything", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [8, 13], "characterOffsetBegin": 68, "originalText": "anything", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 78, "segment_span": [8, 13], "characterOffsetBegin": 77, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "?", "lemma": "?", "after": "", "pos": ".", "characterOffsetEnd": 80, "characterOffsetBegin": 79, "originalText": "?", "ArgType": null, "before": " "}], "text": "E is composed with the universal transducer , which transduces from anything ( ?"}, {"tokens": [{"index": 1, "word": "*", "lemma": "*", "after": " ", "pos": "SYM", "characterOffsetEnd": 1, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "*", "ArgType": null, "before": ""}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 3, "segment_span": [0, 5], "characterOffsetBegin": 2, "originalText": ")", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 6, "segment_span": [0, 5], "characterOffsetBegin": 4, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "anything", "lemma": "anything", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 5], "characterOffsetBegin": 7, "originalText": "anything", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 17, "segment_span": [0, 5], "characterOffsetBegin": 16, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "?", "lemma": "?", "after": "", "pos": ".", "characterOffsetEnd": 19, "characterOffsetBegin": 18, "originalText": "?", "ArgType": null, "before": " "}], "text": "* ) to anything ( ?"}, {"tokens": [{"index": 1, "word": "*", "lemma": "*", "after": " ", "pos": "SYM", "characterOffsetEnd": 1, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "*", "ArgType": null, "before": ""}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 3, "segment_span": [0, 2], "characterOffsetBegin": 2, "originalText": ")", "ArgType": null, "before": " "}, {"index": 3, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 5, "characterOffsetBegin": 4, "originalText": ".", "ArgType": null, "before": " "}], "text": "* ) ."}, {"tokens": [{"index": 1, "word": "Now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "Now", "ArgType": null, "before": ""}, {"index": 2, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 8, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "with", "ArgType": null, "before": " "}, {"index": 3, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 9, "originalText": "this", "ArgType": null, "before": " "}, {"index": 4, "word": "background", "lemma": "background", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "background", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 26, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 29, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 33, "segment_span": [0, 10], "characterOffsetBegin": 30, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "define", "lemma": "define", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 40, "segment_span": [0, 10], "tense": "B", "characterOffsetBegin": 34, "originalText": "define", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "conditional", "lemma": "conditional", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [0, 10], "characterOffsetBegin": 45, "originalText": "conditional", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 58, "characterOffsetBegin": 57, "originalText": ":", "ArgType": null, "before": " "}], "text": "Now with this background , we can define the conditional :"}]}, {"title": "Implementation", "num": 2, "sentences": [{"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 6, "segment_span": [0, 9], "characterOffsetBegin": 2, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 7, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 10, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "form", "lemma": "form", "after": "  ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "form", "ArgType": null, "before": " "}, {"index": 6, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 20, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 7, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 34, "segment_span": [0, 9], "characterOffsetBegin": 30, "originalText": "will", "ArgType": null, "before": "  "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 37, "segment_span": [0, 9], "characterOffsetBegin": 35, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "written", "is_pass": true, "lemma": "write", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 45, "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 38, "originalText": "written", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [9, 18], "characterOffsetBegin": 46, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "replace", "lemma": "replace", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 56, "segment_span": [9, 18], "tense": "B", "characterOffsetBegin": 49, "originalText": "replace", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 58, "segment_span": [9, 18], "characterOffsetBegin": 57, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [9, 18], "characterOffsetBegin": 59, "originalText": "T", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 62, "segment_span": [9, 18], "characterOffsetBegin": 61, "originalText": ",", "ArgType": null, "before": " "}, {"index": 15, "word": "Lambda", "lemma": "Lambda", "after": " ", "pos": "NNP", "characterOffsetEnd": 69, "segment_span": [9, 18], "characterOffsetBegin": 63, "originalText": "Lambda", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 71, "segment_span": [9, 18], "characterOffsetBegin": 70, "originalText": ",", "ArgType": null, "before": " "}, {"index": 17, "word": "Rho", "lemma": "rho", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [9, 18], "characterOffsetBegin": 72, "originalText": "Rho", "ArgType": null, "before": " "}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 77, "segment_span": [9, 18], "characterOffsetBegin": 76, "originalText": ")", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 79, "characterOffsetBegin": 78, "originalText": ".", "ArgType": null, "before": " "}], "text": "A rule of the form equation will be written as replace ( T , Lambda , Rho ) ."}, {"tokens": [{"index": 1, "word": "Rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 5, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "Rules", "ArgType": null, "before": ""}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 8, "segment_span": [0, 13], "characterOffsetBegin": 6, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 13], "characterOffsetBegin": 9, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 17, "segment_span": [0, 13], "characterOffsetBegin": 13, "originalText": "more", "ArgType": null, "before": " "}, {"index": 5, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 25, "segment_span": [0, 13], "characterOffsetBegin": 18, "originalText": "general", "ArgType": null, "before": " "}, {"index": 6, "word": "form", "lemma": "form", "after": "  ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 13], "characterOffsetBegin": 26, "originalText": "form", "ArgType": null, "before": " "}, {"index": 7, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 13], "characterOffsetBegin": 32, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 8, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 46, "segment_span": [0, 13], "characterOffsetBegin": 42, "originalText": "will", "ArgType": null, "before": "  "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 47, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "discussed", "is_pass": true, "lemma": "discuss", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 59, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 50, "originalText": "discussed", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 13], "characterOffsetBegin": 60, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 13], "characterOffsetBegin": 64, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 13, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 75, "segment_span": [0, 13], "characterOffsetBegin": 74, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 14, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 81, "segment_span": [13, 14], "characterOffsetBegin": 77, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ".", "ArgType": null, "before": "  "}], "text": "Rules of the more general form equation will be discussed in equation ; CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 3, "word": "consists", "lemma": "consist", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 14, "originalText": "consists", "ArgType": "verb", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "nine", "lemma": "nine", "after": " ", "pos": "CD", "characterOffsetEnd": 30, "segment_span": [0, 11], "characterOffsetBegin": 26, "originalText": "nine", "ArgType": null, "before": " "}, {"index": 6, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 31, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 7, "word": "composed", "lemma": "compose", "after": " ", "pos": "VBN", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "figure", "lemma": "figure", "after": "  ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "figure", "ArgType": null, "before": " "}, {"index": 11, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 64, "segment_span": [0, 11], "characterOffsetBegin": 60, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The algorithm consists of nine steps composed as in figure CREF ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 30], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "names", "lemma": "name", "after": " ", "pos": "NNS", "characterOffsetEnd": 9, "segment_span": [0, 30], "characterOffsetBegin": 4, "originalText": "names", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 30], "characterOffsetBegin": 10, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 18, "segment_span": [0, 30], "characterOffsetBegin": 13, "originalText": "these", "ArgType": null, "before": " "}, {"index": 5, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 24, "segment_span": [0, 30], "characterOffsetBegin": 19, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 28, "segment_span": [0, 30], "characterOffsetBegin": 25, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "mostly", "lemma": "mostly", "after": " ", "pos": "RB", "characterOffsetEnd": 35, "segment_span": [0, 30], "characterOffsetBegin": 29, "originalText": "mostly", "ArgType": null, "before": " "}, {"index": 8, "word": "derived", "is_pass": true, "lemma": "derive", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 43, "segment_span": [0, 30], "tense": "N", "characterOffsetBegin": 36, "originalText": "derived", "ArgType": null, "before": " "}, {"index": 9, "word": "from", "lemma": "from", "after": "  ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [0, 30], "characterOffsetBegin": 44, "originalText": "from", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 51, "segment_span": [0, 30], "characterOffsetBegin": 50, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 11, "word": "Karttunen", "lemma": "Karttunen", "after": " ", "pos": "NNP", "characterOffsetEnd": 61, "segment_span": [0, 30], "characterOffsetBegin": 52, "originalText": "Karttunen", "ArgType": null, "before": " "}, {"index": 12, "word": "1995", "lemma": "1995", "after": " ", "pos": "CD", "characterOffsetEnd": 66, "segment_span": [0, 30], "characterOffsetBegin": 62, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [0, 30], "characterOffsetBegin": 67, "originalText": ")", "ArgType": null, "before": " "}, {"index": 14, "word": "and", "lemma": "and", "after": "  ", "pos": "CC", "characterOffsetEnd": 73, "segment_span": [0, 30], "characterOffsetBegin": 70, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 76, "segment_span": [0, 30], "characterOffsetBegin": 75, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 16, "word": "Mohri", "lemma": "Mohri", "after": " ", "pos": "NNP", "characterOffsetEnd": 82, "segment_span": [0, 30], "characterOffsetBegin": 77, "originalText": "Mohri", "ArgType": null, "before": " "}, {"index": 17, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 86, "segment_span": [0, 30], "characterOffsetBegin": 83, "originalText": "and", "ArgType": null, "before": " "}, {"index": 18, "word": "Sproat", "lemma": "Sproat", "after": " ", "pos": "NNP", "characterOffsetEnd": 93, "segment_span": [0, 30], "characterOffsetBegin": 87, "originalText": "Sproat", "ArgType": null, "before": " "}, {"index": 19, "word": "1996", "lemma": "1996", "after": " ", "pos": "CD", "characterOffsetEnd": 98, "segment_span": [0, 30], "characterOffsetBegin": 94, "originalText": "1996", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 100, "segment_span": [0, 30], "characterOffsetBegin": 99, "originalText": ")", "ArgType": null, "before": " "}, {"index": 21, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 106, "segment_span": [0, 30], "characterOffsetBegin": 102, "originalText": "even", "ArgType": null, "before": "  "}, {"index": 22, "word": "though", "lemma": "though", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [0, 30], "characterOffsetBegin": 107, "originalText": "though", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 117, "segment_span": [0, 30], "characterOffsetBegin": 114, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "transductions", "lemma": "transduction", "after": " ", "pos": "NNS", "characterOffsetEnd": 131, "segment_span": [0, 30], "characterOffsetBegin": 118, "originalText": "transductions", "ArgType": "subj", "before": " "}, {"index": 25, "word": "involved", "lemma": "involve", "after": " ", "pos": "VBN", "characterOffsetEnd": 140, "segment_span": [0, 30], "characterOffsetBegin": 132, "originalText": "involved", "ArgType": null, "before": " "}, {"index": 26, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 144, "segment_span": [0, 30], "characterOffsetBegin": 141, "originalText": "are", "ArgType": null, "before": " "}, {"index": 27, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 148, "segment_span": [0, 30], "characterOffsetBegin": 145, "originalText": "not", "ArgType": null, "before": " "}, {"index": 28, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 156, "segment_span": [0, 30], "characterOffsetBegin": 149, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 160, "segment_span": [0, 30], "characterOffsetBegin": 157, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 165, "segment_span": [0, 30], "characterOffsetBegin": 161, "originalText": "same", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 167, "characterOffsetBegin": 166, "originalText": ".", "ArgType": null, "before": " "}], "text": "The names of these steps are mostly derived from ( Karttunen 1995 ) and ( Mohri and Sproat 1996 ) even though the transductions involved are not exactly the same ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 59], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "particular", "lemma": "particular", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 59], "characterOffsetBegin": 3, "originalText": "particular", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 59], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 59], "characterOffsetBegin": 16, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 25, "segment_span": [0, 59], "characterOffsetBegin": 20, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 6, "word": "derived", "lemma": "derive", "after": " ", "pos": "VBN", "characterOffsetEnd": 33, "segment_span": [0, 59], "characterOffsetBegin": 26, "originalText": "derived", "ArgType": null, "before": " "}, {"index": 7, "word": "from", "lemma": "from", "after": "  ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [0, 59], "characterOffsetBegin": 34, "originalText": "from", "ArgType": null, "before": " "}, {"index": 8, "word": "Mohri", "lemma": "Mohri", "after": " ", "pos": "NNP", "characterOffsetEnd": 45, "segment_span": [0, 59], "characterOffsetBegin": 40, "originalText": "Mohri", "ArgType": null, "before": "  "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 47, "segment_span": [0, 59], "characterOffsetBegin": 46, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 51, "segment_span": [0, 59], "characterOffsetBegin": 47, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 52, "segment_span": [0, 59], "characterOffsetBegin": 51, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 55, "segment_span": [0, 59], "characterOffsetBegin": 54, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 13, "word": "Sproat", "lemma": "Sproat", "after": " ", "pos": "NNP", "characterOffsetEnd": 63, "segment_span": [0, 59], "characterOffsetBegin": 57, "originalText": "Sproat", "ArgType": null, "before": "  "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 65, "segment_span": [0, 59], "characterOffsetBegin": 64, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 69, "segment_span": [0, 59], "characterOffsetBegin": 65, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 70, "segment_span": [0, 59], "characterOffsetBegin": 69, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 73, "segment_span": [0, 59], "characterOffsetBegin": 72, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 18, "word": "r", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [0, 59], "characterOffsetBegin": 74, "originalText": "r", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 77, "segment_span": [0, 59], "characterOffsetBegin": 76, "originalText": ",", "ArgType": null, "before": " "}, {"index": 20, "word": "f", "lemma": "f", "after": " ", "pos": "FW", "characterOffsetEnd": 79, "segment_span": [0, 59], "characterOffsetBegin": 78, "originalText": "f", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 81, "segment_span": [0, 59], "characterOffsetBegin": 80, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "l1", "lemma": "l1", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 59], "characterOffsetBegin": 82, "originalText": "l1", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 88, "segment_span": [0, 59], "characterOffsetBegin": 85, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "l2", "lemma": "l2", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 59], "characterOffsetBegin": 89, "originalText": "l2", "ArgType": null, "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 93, "segment_span": [0, 59], "characterOffsetBegin": 92, "originalText": ")", "ArgType": null, "before": " "}, {"index": 26, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 98, "segment_span": [0, 59], "characterOffsetBegin": 94, "originalText": "will", "ArgType": null, "before": " "}, {"index": 27, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 102, "segment_span": [0, 59], "characterOffsetBegin": 99, "originalText": "all", "ArgType": null, "before": " "}, {"index": 28, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 105, "segment_span": [0, 59], "characterOffsetBegin": 103, "originalText": "be", "ArgType": null, "before": " "}, {"index": 29, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "characterOffsetEnd": 113, "segment_span": [0, 59], "characterOffsetBegin": 106, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 30, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 116, "segment_span": [0, 59], "characterOffsetBegin": 114, "originalText": "in", "ArgType": null, "before": " "}, {"index": 31, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 122, "segment_span": [0, 59], "characterOffsetBegin": 117, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 32, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 125, "segment_span": [0, 59], "characterOffsetBegin": 123, "originalText": "of", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 129, "segment_span": [0, 59], "characterOffsetBegin": 126, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 136, "segment_span": [0, 59], "characterOffsetBegin": 130, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 35, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 142, "segment_span": [0, 59], "characterOffsetBegin": 137, "originalText": "state", "ArgType": null, "before": " "}, {"index": 36, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [0, 59], "characterOffsetBegin": 143, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 37, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 154, "segment_span": [36, 47], "characterOffsetBegin": 152, "originalText": "as", "ArgType": null, "before": " "}, {"index": 38, "word": "opposed", "lemma": "oppose", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 162, "segment_span": [36, 47], "tense": "N", "characterOffsetBegin": 155, "originalText": "opposed", "ArgType": null, "before": " "}, {"index": 39, "word": "to", "lemma": "to", "after": "  ", "pos": "TO", "characterOffsetEnd": 165, "segment_span": [36, 47], "characterOffsetBegin": 163, "originalText": "to", "ArgType": null, "before": " "}, {"index": 40, "word": "Mohri", "lemma": "Mohri", "after": " ", "pos": "NNP", "characterOffsetEnd": 172, "segment_span": [36, 47], "characterOffsetBegin": 167, "originalText": "Mohri", "ArgType": null, "before": "  "}, {"index": 41, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 174, "segment_span": [36, 47], "characterOffsetBegin": 173, "originalText": "(", "ArgType": null, "before": " "}, {"index": 42, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 178, "segment_span": [36, 47], "characterOffsetBegin": 174, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 43, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 179, "segment_span": [36, 47], "characterOffsetBegin": 178, "originalText": ")", "ArgType": null, "before": ""}, {"index": 44, "word": "&", "lemma": "&", "after": "  ", "pos": "CC", "characterOffsetEnd": 182, "segment_span": [36, 47], "characterOffsetBegin": 181, "originalText": "&", "ArgType": null, "before": "  "}, {"index": 45, "word": "Sproat", "lemma": "Sproat", "after": " ", "pos": "NNP", "characterOffsetEnd": 190, "segment_span": [36, 47], "characterOffsetBegin": 184, "originalText": "Sproat", "ArgType": null, "before": "  "}, {"index": 46, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 192, "segment_span": [36, 47], "characterOffsetBegin": 191, "originalText": "(", "ArgType": null, "before": " "}, {"index": 47, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 196, "segment_span": [36, 47], "characterOffsetBegin": 192, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 48, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 197, "segment_span": [0, 59], "characterOffsetBegin": 196, "originalText": ")", "ArgType": null, "before": ""}, {"index": 49, "word": "'", "lemma": "'", "after": " ", "pos": "''", "characterOffsetEnd": 200, "segment_span": [0, 59], "characterOffsetBegin": 199, "originalText": "'", "ArgType": null, "before": "  "}, {"index": 50, "word": "s", "lemma": "s", "after": " ", "pos": "NNS", "characterOffsetEnd": 202, "segment_span": [0, 59], "characterOffsetBegin": 201, "originalText": "s", "ArgType": null, "before": " "}, {"index": 51, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 211, "segment_span": [0, 59], "characterOffsetBegin": 203, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 52, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 214, "segment_span": [0, 59], "characterOffsetBegin": 212, "originalText": "of", "ArgType": null, "before": " "}, {"index": 53, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 220, "segment_span": [0, 59], "characterOffsetBegin": 215, "originalText": "using", "ArgType": null, "before": " "}, {"index": 54, "word": "low-level", "lemma": "low-level", "after": " ", "pos": "JJ", "characterOffsetEnd": 230, "segment_span": [0, 59], "characterOffsetBegin": 221, "originalText": "low-level", "ArgType": null, "before": " "}, {"index": 55, "word": "manipulation", "lemma": "manipulation", "after": " ", "pos": "NN", "characterOffsetEnd": 243, "segment_span": [0, 59], "characterOffsetBegin": 231, "originalText": "manipulation", "ArgType": "dobj", "before": " "}, {"index": 56, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 246, "segment_span": [0, 59], "characterOffsetBegin": 244, "originalText": "of", "ArgType": null, "before": " "}, {"index": 57, "word": "states", "lemma": "state", "after": " ", "pos": "NNS", "characterOffsetEnd": 253, "segment_span": [0, 59], "characterOffsetBegin": 247, "originalText": "states", "ArgType": null, "before": " "}, {"index": 58, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 257, "segment_span": [0, 59], "characterOffsetBegin": 254, "originalText": "and", "ArgType": null, "before": " "}, {"index": 59, "word": "transitions", "lemma": "transition", "after": " ", "pos": "NNS", "characterOffsetEnd": 269, "segment_span": [0, 59], "characterOffsetBegin": 258, "originalText": "transitions", "ArgType": null, "before": " "}, {"index": 60, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 271, "characterOffsetBegin": 270, "originalText": ".", "ArgType": null, "before": " "}], "text": "In particular , the steps derived from Mohri ( 0000 ) & Sproat ( 0000 ) ( r , f , l1 and l2 ) will all be defined in terms of the finite state calculus as opposed to Mohri ( 0000 ) & Sproat ( 0000 ) ' s approach of using low-level manipulation of states and transitions ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "first", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 10], "characterOffsetBegin": 10, "originalText": "step", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 16, "segment_span": [0, 10], "characterOffsetBegin": 15, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "non_markers", "lemma": "non_markers", "after": " ", "pos": "NNS", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 17, "originalText": "non_markers", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 30, "segment_span": [0, 10], "characterOffsetBegin": 29, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "was", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 34, "segment_span": [0, 10], "characterOffsetBegin": 31, "originalText": "was", "ArgType": null, "before": " "}, {"index": 8, "word": "already", "lemma": "already", "after": " ", "pos": "RB", "characterOffsetEnd": 42, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "already", "ArgType": null, "before": " "}, {"index": 9, "word": "defined", "is_pass": true, "lemma": "define", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 50, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 43, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 10, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [0, 10], "characterOffsetBegin": 51, "originalText": "above", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 58, "characterOffsetBegin": 57, "originalText": ".", "ArgType": null, "before": " "}], "text": "The first step , non_markers , was already defined above ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 12], "characterOffsetBegin": 8, "originalText": "second", "ArgType": null, "before": " "}, {"index": 4, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 12], "characterOffsetBegin": 15, "originalText": "step", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [0, 12], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 24, "segment_span": [0, 12], "characterOffsetBegin": 22, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "first", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 30, "segment_span": [0, 12], "characterOffsetBegin": 25, "originalText": "first", "ArgType": null, "before": " "}, {"index": 8, "word": "consider", "lemma": "consider", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 39, "segment_span": [0, 12], "tense": "B", "characterOffsetBegin": 31, "originalText": "consider", "ArgType": "verb", "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 41, "segment_span": [0, 12], "characterOffsetBegin": 40, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 48, "segment_span": [0, 12], "characterOffsetBegin": 42, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 11, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [0, 12], "characterOffsetBegin": 49, "originalText": "special", "ArgType": null, "before": " "}, {"index": 12, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 12], "characterOffsetBegin": 57, "originalText": "case", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 63, "characterOffsetBegin": 62, "originalText": ".", "ArgType": null, "before": " "}], "text": "For the second step , we first consider a simple special case ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 11], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 11], "characterOffsetBegin": 7, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 4, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 11], "characterOffsetBegin": 13, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [0, 11], "characterOffsetBegin": 26, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 11], "characterOffsetBegin": 30, "originalText": "language", "ArgType": null, "before": " "}, {"index": 9, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 39, "originalText": "described", "ArgType": null, "before": " "}, {"index": 10, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "by", "ArgType": null, "before": " "}, {"index": 11, "word": "Right", "lemma": "right", "after": " ", "pos": "RB", "characterOffsetEnd": 57, "segment_span": [0, 11], "characterOffsetBegin": 52, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 59, "segment_span": [11, 25], "characterOffsetBegin": 58, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 64, "segment_span": [11, 25], "characterOffsetBegin": 60, "originalText": "then", "ArgType": null, "before": " "}, {"index": 14, "word": "r", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [11, 25], "characterOffsetBegin": 65, "originalText": "r", "ArgType": "subj", "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 68, "segment_span": [11, 25], "characterOffsetBegin": 67, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "Right", "lemma": "right", "after": " ", "pos": "RB", "characterOffsetEnd": 74, "segment_span": [11, 25], "characterOffsetBegin": 69, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 76, "segment_span": [11, 25], "characterOffsetBegin": 75, "originalText": ")", "ArgType": null, "before": " "}, {"index": 18, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 83, "segment_span": [11, 25], "characterOffsetBegin": 77, "originalText": "should", "ArgType": null, "before": " "}, {"index": 19, "word": "insert", "lemma": "insert", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 90, "segment_span": [11, 25], "tense": "B", "characterOffsetBegin": 84, "originalText": "insert", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 20, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [11, 25], "characterOffsetBegin": 91, "originalText": "an", "ArgType": null, "before": " "}, {"index": 21, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [11, 25], "characterOffsetBegin": 94, "originalText": "rb2", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [11, 25], "characterOffsetBegin": 98, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 106, "segment_span": [11, 25], "characterOffsetBegin": 101, "originalText": "every", "ArgType": null, "before": " "}, {"index": 24, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [11, 25], "characterOffsetBegin": 107, "originalText": "string", "ArgType": null, "before": " "}, {"index": 25, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [11, 25], "characterOffsetBegin": 114, "originalText": "position", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 124, "characterOffsetBegin": 123, "originalText": ".", "ArgType": null, "before": " "}], "text": "If the empty string is in the language described by Right , then r ( Right ) should insert an rb2 in every string position ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "definition", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [0, 13], "characterOffsetBegin": 15, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "r", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 13], "characterOffsetBegin": 18, "originalText": "r", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 21, "segment_span": [0, 13], "characterOffsetBegin": 20, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "Right", "lemma": "right", "after": " ", "pos": "RB", "characterOffsetEnd": 27, "segment_span": [0, 13], "characterOffsetBegin": 22, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 29, "segment_span": [0, 13], "characterOffsetBegin": 28, "originalText": ")", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 32, "segment_span": [0, 13], "characterOffsetBegin": 30, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 37, "segment_span": [0, 13], "characterOffsetBegin": 33, "originalText": "both", "ArgType": null, "before": " "}, {"index": 10, "word": "simpler", "lemma": "simpler", "after": " ", "pos": "JJR", "characterOffsetEnd": 45, "segment_span": [0, 13], "characterOffsetBegin": 38, "originalText": "simpler", "ArgType": "verb", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 46, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 54, "segment_span": [0, 13], "characterOffsetBegin": 50, "originalText": "more", "ArgType": null, "before": " "}, {"index": 13, "word": "efficient", "lemma": "efficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 64, "segment_span": [0, 13], "characterOffsetBegin": 55, "originalText": "efficient", "ArgType": null, "before": " "}, {"index": 14, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [13, 21], "characterOffsetBegin": 65, "originalText": "if", "ArgType": null, "before": " "}, {"index": 15, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 72, "segment_span": [13, 21], "characterOffsetBegin": 68, "originalText": "this", "ArgType": null, "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 75, "segment_span": [13, 21], "characterOffsetBegin": 73, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "treated", "is_pass": true, "lemma": "treat", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 83, "segment_span": [13, 21], "tense": "N", "characterOffsetBegin": 76, "originalText": "treated", "ArgType": null, "before": " "}, {"index": 18, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [13, 21], "characterOffsetBegin": 84, "originalText": "as", "ArgType": null, "before": " "}, {"index": 19, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [13, 21], "characterOffsetBegin": 87, "originalText": "a", "ArgType": null, "before": " "}, {"index": 20, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [13, 21], "characterOffsetBegin": 89, "originalText": "special", "ArgType": null, "before": " "}, {"index": 21, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [13, 21], "characterOffsetBegin": 97, "originalText": "case", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 103, "characterOffsetBegin": 102, "originalText": ".", "ArgType": null, "before": " "}], "text": "The definition of r ( Right ) is both simpler and more efficient if this is treated as a special case ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "insert", "lemma": "insert", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 9, "segment_span": [0, 9], "tense": "B", "characterOffsetBegin": 3, "originalText": "insert", "ArgType": null, "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 9], "characterOffsetBegin": 10, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "bracket", "lemma": "bracket", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 9], "characterOffsetBegin": 12, "originalText": "bracket", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 9], "characterOffsetBegin": 20, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 23, "originalText": "every", "ArgType": null, "before": " "}, {"index": 7, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 9], "characterOffsetBegin": 29, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 8, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 9], "characterOffsetBegin": 38, "originalText": "string", "ArgType": null, "before": " "}, {"index": 9, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 9], "characterOffsetBegin": 45, "originalText": "position", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 55, "segment_span": [9, 12], "characterOffsetBegin": 54, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 58, "segment_span": [9, 12], "characterOffsetBegin": 56, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 12, "word": "use", "lemma": "use", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 62, "segment_span": [9, 12], "tense": "P", "characterOffsetBegin": 59, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 13, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 64, "characterOffsetBegin": 63, "originalText": ":", "ArgType": null, "before": " "}], "text": "To insert a bracket in every possible string position , we use :"}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 8], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 8], "characterOffsetBegin": 7, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 4, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 8], "characterOffsetBegin": 13, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 20, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 26, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "not", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 8], "characterOffsetBegin": 27, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "Right", "lemma": "right", "after": " ", "pos": "RB", "characterOffsetEnd": 35, "segment_span": [0, 8], "characterOffsetBegin": 30, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 37, "segment_span": [8, 23], "characterOffsetBegin": 36, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 42, "segment_span": [8, 23], "characterOffsetBegin": 38, "originalText": "then", "ArgType": null, "before": " "}, {"index": 11, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 45, "segment_span": [8, 23], "characterOffsetBegin": 43, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 12, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 50, "segment_span": [8, 23], "characterOffsetBegin": 46, "originalText": "must", "ArgType": null, "before": " "}, {"index": 13, "word": "use", "lemma": "use", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 54, "segment_span": [8, 23], "tense": "B", "characterOffsetBegin": 51, "originalText": "use", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 14, "word": "intro", "lemma": "intro", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [8, 23], "characterOffsetBegin": 55, "originalText": "intro", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 62, "segment_span": [8, 23], "characterOffsetBegin": 61, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [8, 23], "characterOffsetBegin": 63, "originalText": "rb2", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [8, 23], "characterOffsetBegin": 67, "originalText": ")", "ArgType": null, "before": " "}, {"index": 18, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 71, "segment_span": [17, 22], "characterOffsetBegin": 69, "originalText": "to", "ArgType": null, "before": " "}, {"index": 19, "word": "introduce", "lemma": "introduce", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 81, "segment_span": [17, 22], "tense": "B", "characterOffsetBegin": 72, "originalText": "introduce", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [17, 22], "characterOffsetBegin": 82, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [17, 22], "characterOffsetBegin": 86, "originalText": "marker", "ArgType": null, "before": " "}, {"index": 22, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [17, 22], "characterOffsetBegin": 93, "originalText": "rb2", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [8, 23], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 107, "segment_span": [23, 28], "tense": "N", "characterOffsetBegin": 99, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [23, 28], "characterOffsetBegin": 108, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "l_iff_r", "lemma": "l_iff_r", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [23, 28], "characterOffsetBegin": 111, "originalText": "l_iff_r", "ArgType": null, "before": " "}, {"index": 27, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 121, "segment_span": [23, 28], "characterOffsetBegin": 119, "originalText": "to", "ArgType": null, "before": " "}, {"index": 28, "word": "ensure", "lemma": "ensure", "after": " ", "pos": "VB", "characterOffsetEnd": 128, "segment_span": [23, 28], "characterOffsetBegin": 122, "originalText": "ensure", "ArgType": null, "before": " "}, {"index": 29, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 133, "segment_span": [28, 47], "characterOffsetBegin": 129, "originalText": "that", "ArgType": null, "before": " "}, {"index": 30, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 138, "segment_span": [28, 47], "characterOffsetBegin": 134, "originalText": "such", "ArgType": null, "before": " "}, {"index": 31, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 146, "segment_span": [28, 47], "characterOffsetBegin": 139, "originalText": "markers", "ArgType": null, "before": " "}, {"index": 32, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 150, "segment_span": [28, 47], "characterOffsetBegin": 147, "originalText": "are", "ArgType": null, "before": " "}, {"index": 33, "word": "immediately", "lemma": "immediately", "after": " ", "pos": "RB", "characterOffsetEnd": 162, "segment_span": [28, 47], "characterOffsetBegin": 151, "originalText": "immediately", "ArgType": null, "before": " "}, {"index": 34, "word": "followed", "is_pass": true, "lemma": "follow", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 171, "segment_span": [28, 47], "tense": "N", "characterOffsetBegin": 163, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 35, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 174, "segment_span": [28, 47], "characterOffsetBegin": 172, "originalText": "by", "ArgType": null, "before": " "}, {"index": 36, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 176, "segment_span": [28, 47], "characterOffsetBegin": 175, "originalText": "a", "ArgType": null, "before": " "}, {"index": 37, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [28, 47], "characterOffsetBegin": 177, "originalText": "string", "ArgType": null, "before": " "}, {"index": 38, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 186, "segment_span": [28, 47], "characterOffsetBegin": 184, "originalText": "in", "ArgType": null, "before": " "}, {"index": 39, "word": "Right", "lemma": "Right", "after": " ", "pos": "NNP", "characterOffsetEnd": 192, "segment_span": [28, 47], "characterOffsetBegin": 187, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 194, "segment_span": [28, 47], "characterOffsetBegin": 193, "originalText": ",", "ArgType": null, "before": " "}, {"index": 41, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 197, "segment_span": [28, 47], "characterOffsetBegin": 195, "originalText": "or", "ArgType": null, "before": " "}, {"index": 42, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 202, "segment_span": [28, 47], "characterOffsetBegin": 198, "originalText": "more", "ArgType": null, "before": " "}, {"index": 43, "word": "precisely", "lemma": "precisely", "after": " ", "pos": "RB", "characterOffsetEnd": 212, "segment_span": [28, 47], "characterOffsetBegin": 203, "originalText": "precisely", "ArgType": null, "before": " "}, {"index": 44, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 214, "segment_span": [28, 47], "characterOffsetBegin": 213, "originalText": "a", "ArgType": null, "before": " "}, {"index": 45, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 221, "segment_span": [28, 47], "characterOffsetBegin": 215, "originalText": "string", "ArgType": null, "before": " "}, {"index": 46, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 224, "segment_span": [28, 47], "characterOffsetBegin": 222, "originalText": "in", "ArgType": null, "before": " "}, {"index": 47, "word": "Right", "lemma": "Right", "after": " ", "pos": "NNP", "characterOffsetEnd": 230, "segment_span": [28, 47], "characterOffsetBegin": 225, "originalText": "Right", "ArgType": null, "before": " "}, {"index": 48, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 236, "segment_span": [47, 62], "characterOffsetBegin": 231, "originalText": "where", "ArgType": null, "before": " "}, {"index": 49, "word": "additional", "lemma": "additional", "after": " ", "pos": "JJ", "characterOffsetEnd": 247, "segment_span": [47, 62], "characterOffsetBegin": 237, "originalText": "additional", "ArgType": null, "before": " "}, {"index": 50, "word": "instances", "lemma": "instance", "after": " ", "pos": "NNS", "characterOffsetEnd": 257, "segment_span": [47, 62], "characterOffsetBegin": 248, "originalText": "instances", "ArgType": null, "before": " "}, {"index": 51, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 260, "segment_span": [47, 62], "characterOffsetBegin": 258, "originalText": "of", "ArgType": null, "before": " "}, {"index": 52, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 264, "segment_span": [47, 62], "characterOffsetBegin": 261, "originalText": "rb2", "ArgType": null, "before": " "}, {"index": 53, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 268, "segment_span": [47, 62], "characterOffsetBegin": 265, "originalText": "are", "ArgType": null, "before": " "}, {"index": 54, "word": "freely", "lemma": "freely", "after": " ", "pos": "RB", "characterOffsetEnd": 275, "segment_span": [47, 62], "characterOffsetBegin": 269, "originalText": "freely", "ArgType": null, "before": " "}, {"index": 55, "word": "inserted", "is_pass": true, "lemma": "insert", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 284, "segment_span": [47, 62], "tense": "N", "characterOffsetBegin": 276, "originalText": "inserted", "ArgType": null, "before": " "}, {"index": 56, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 287, "segment_span": [47, 62], "characterOffsetBegin": 285, "originalText": "in", "ArgType": null, "before": " "}, {"index": 57, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 291, "segment_span": [47, 62], "characterOffsetBegin": 288, "originalText": "any", "ArgType": null, "before": " "}, {"index": 58, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 300, "segment_span": [47, 62], "characterOffsetBegin": 292, "originalText": "position", "ArgType": null, "before": " "}, {"index": 59, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 306, "segment_span": [47, 62], "characterOffsetBegin": 301, "originalText": "other", "ArgType": null, "before": " "}, {"index": 60, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 311, "segment_span": [47, 62], "characterOffsetBegin": 307, "originalText": "than", "ArgType": null, "before": " "}, {"index": 61, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 315, "segment_span": [47, 62], "characterOffsetBegin": 312, "originalText": "the", "ArgType": null, "before": " "}, {"index": 62, "word": "beginning", "lemma": "beginning", "after": " ", "pos": "NN", "characterOffsetEnd": 325, "segment_span": [47, 62], "characterOffsetBegin": 316, "originalText": "beginning", "ArgType": null, "before": " "}, {"index": 63, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 327, "characterOffsetBegin": 326, "originalText": ".", "ArgType": null, "before": " "}], "text": "If the empty string is not in Right , then we must use intro ( rb2 ) to introduce the marker rb2 , followed by l_iff_r to ensure that such markers are immediately followed by a string in Right , or more precisely a string in Right where additional instances of rb2 are freely inserted in any position other than the beginning ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 5], "characterOffsetBegin": 5, "originalText": "expression", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 18, "segment_span": [0, 5], "characterOffsetBegin": 16, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "written", "is_pass": true, "lemma": "write", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 19, "originalText": "written", "ArgType": null, "before": " "}, {"index": 5, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 5], "characterOffsetBegin": 27, "originalText": "as", "ArgType": null, "before": " "}, {"index": 6, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 31, "characterOffsetBegin": 30, "originalText": ":", "ArgType": null, "before": " "}], "text": "This expression is written as :"}, {"tokens": [{"index": 1, "word": "Putting", "lemma": "put", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 9], "tense": "G", "characterOffsetBegin": 0, "originalText": "Putting", "ArgType": null, "before": ""}, {"index": 2, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 8, "originalText": "these", "ArgType": null, "before": " "}, {"index": 3, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 17, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "two", "ArgType": null, "before": " "}, {"index": 4, "word": "pieces", "lemma": "piece", "after": " ", "pos": "NNS", "characterOffsetEnd": 24, "segment_span": [0, 9], "characterOffsetBegin": 18, "originalText": "pieces", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "together", "lemma": "together", "after": " ", "pos": "RB", "characterOffsetEnd": 33, "segment_span": [0, 9], "characterOffsetBegin": 25, "originalText": "together", "ArgType": null, "before": " "}, {"index": 6, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 34, "originalText": "with", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 42, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "conditional", "lemma": "conditional", "after": " ", "pos": "JJ", "characterOffsetEnd": 54, "segment_span": [0, 9], "characterOffsetBegin": 43, "originalText": "conditional", "ArgType": null, "before": " "}, {"index": 9, "word": "yields", "lemma": "yield", "after": " ", "pos": "NNS", "characterOffsetEnd": 61, "segment_span": [0, 9], "characterOffsetBegin": 55, "originalText": "yields", "ArgType": null, "before": " "}, {"index": 10, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 63, "characterOffsetBegin": 62, "originalText": ":", "ArgType": null, "before": " "}], "text": "Putting these two pieces together with the conditional yields :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "third", "lemma": "third", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 14], "characterOffsetBegin": 4, "originalText": "third", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 14], "characterOffsetBegin": 10, "originalText": "step", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 16, "segment_span": [0, 14], "characterOffsetBegin": 15, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "f", "lemma": "f", "after": " ", "pos": "FW", "characterOffsetEnd": 18, "segment_span": [0, 14], "characterOffsetBegin": 17, "originalText": "f", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 20, "segment_span": [0, 14], "characterOffsetBegin": 19, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [0, 14], "characterOffsetBegin": 21, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 29, "segment_span": [0, 14], "characterOffsetBegin": 28, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 14], "characterOffsetBegin": 30, "originalText": "T", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 33, "segment_span": [0, 14], "characterOffsetBegin": 32, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 35, "segment_span": [0, 14], "characterOffsetBegin": 34, "originalText": ")", "ArgType": null, "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 38, "segment_span": [0, 14], "characterOffsetBegin": 36, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 50, "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 39, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 14, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [0, 14], "characterOffsetBegin": 51, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 55, "characterOffsetBegin": 54, "originalText": ":", "ArgType": null, "before": " "}], "text": "The third step , f ( domain ( T ) ) is implemented as :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 6], "characterOffsetBegin": 4, "originalText": "lb2", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 10, "segment_span": [0, 6], "characterOffsetBegin": 8, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 16, "segment_span": [0, 6], "characterOffsetBegin": 11, "originalText": "first", "ArgType": null, "before": " "}, {"index": 5, "word": "introduced", "is_pass": true, "lemma": "introduce", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 27, "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 17, "originalText": "introduced", "ArgType": null, "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 31, "segment_span": [0, 6], "characterOffsetBegin": 28, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 36, "segment_span": [6, 30], "characterOffsetBegin": 32, "originalText": "then", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 38, "segment_span": [6, 30], "characterOffsetBegin": 37, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 44, "segment_span": [6, 30], "tense": "G", "characterOffsetBegin": 39, "originalText": "using", "ArgType": null, "before": " "}, {"index": 10, "word": "l_iff_r", "lemma": "l_iff_r", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [6, 30], "characterOffsetBegin": 45, "originalText": "l_iff_r", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [6, 30], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": " "}, {"index": 12, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 57, "segment_span": [6, 30], "characterOffsetBegin": 55, "originalText": "it", "ArgType": null, "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 60, "segment_span": [6, 30], "characterOffsetBegin": 58, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "constrained", "is_pass": true, "lemma": "constrain", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 72, "segment_span": [6, 30], "tense": "N", "characterOffsetBegin": 61, "originalText": "constrained", "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 75, "segment_span": [6, 30], "characterOffsetBegin": 73, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "occur", "lemma": "occur", "after": " ", "pos": "VB", "characterOffsetEnd": 81, "segment_span": [6, 30], "characterOffsetBegin": 76, "originalText": "occur", "ArgType": null, "before": " "}, {"index": 17, "word": "immediately", "lemma": "immediately", "after": " ", "pos": "RB", "characterOffsetEnd": 93, "segment_span": [6, 30], "characterOffsetBegin": 82, "originalText": "immediately", "ArgType": null, "before": " "}, {"index": 18, "word": "before", "lemma": "before", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [6, 30], "characterOffsetBegin": 94, "originalText": "before", "ArgType": null, "before": " "}, {"index": 19, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 106, "segment_span": [6, 30], "characterOffsetBegin": 101, "originalText": "every", "ArgType": null, "before": " "}, {"index": 20, "word": "instance", "lemma": "instance", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [6, 30], "characterOffsetBegin": 107, "originalText": "instance", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [6, 30], "characterOffsetBegin": 116, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 120, "segment_span": [6, 30], "characterOffsetBegin": 119, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "ignoring", "lemma": "ignore", "after": " ", "pos": "VBG", "characterOffsetEnd": 129, "segment_span": [6, 30], "characterOffsetBegin": 121, "originalText": "ignoring", "ArgType": null, "before": " "}, {"index": 24, "word": "complexities", "lemma": "complexity", "after": " ", "pos": "NNS", "characterOffsetEnd": 142, "segment_span": [6, 30], "characterOffsetBegin": 130, "originalText": "complexities", "ArgType": "dobj", "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 144, "segment_span": [6, 30], "characterOffsetBegin": 143, "originalText": ")", "ArgType": null, "before": " "}, {"index": 26, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 148, "segment_span": [6, 30], "characterOffsetBegin": 145, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 27, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 157, "segment_span": [6, 30], "characterOffsetBegin": 149, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 28, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 160, "segment_span": [6, 30], "characterOffsetBegin": 158, "originalText": "by", "ArgType": null, "before": " "}, {"index": 29, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 163, "segment_span": [6, 30], "characterOffsetBegin": 161, "originalText": "an", "ArgType": null, "before": " "}, {"index": 30, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [6, 30], "characterOffsetBegin": 164, "originalText": "rb2", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 169, "characterOffsetBegin": 168, "originalText": ".", "ArgType": null, "before": " "}], "text": "The lb2 is first introduced and then , using l_iff_r , it is constrained to occur immediately before every instance of ( ignoring complexities ) Phi followed by an rb2 ."}, {"tokens": [{"index": 1, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 3, "segment_span": [0, 29], "characterOffsetBegin": 0, "originalText": "Phi", "ArgType": "subj", "before": ""}, {"index": 2, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "characterOffsetEnd": 9, "segment_span": [0, 29], "characterOffsetBegin": 4, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 12, "segment_span": [0, 29], "characterOffsetBegin": 10, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 15, "segment_span": [0, 29], "characterOffsetBegin": 13, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "marked", "lemma": "mark", "after": " ", "pos": "VBN", "characterOffsetEnd": 22, "segment_span": [0, 29], "characterOffsetBegin": 16, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 6, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 29], "characterOffsetBegin": 23, "originalText": "as", "ArgType": null, "before": " "}, {"index": 7, "word": "normal", "lemma": "normal", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 29], "characterOffsetBegin": 26, "originalText": "normal", "ArgType": null, "before": " "}, {"index": 8, "word": "text", "lemma": "text", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 29], "characterOffsetBegin": 33, "originalText": "text", "ArgType": null, "before": " "}, {"index": 9, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 43, "segment_span": [0, 29], "characterOffsetBegin": 38, "originalText": "using", "ArgType": null, "before": " "}, {"index": 10, "word": "non_markers", "lemma": "non_markers", "after": " ", "pos": "NNS", "characterOffsetEnd": 55, "segment_span": [0, 29], "characterOffsetBegin": 44, "originalText": "non_markers", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 59, "segment_span": [0, 29], "characterOffsetBegin": 56, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 64, "segment_span": [0, 29], "characterOffsetBegin": 60, "originalText": "then", "ArgType": null, "before": " "}, {"index": 13, "word": "xign_x", "lemma": "xign_x", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 29], "characterOffsetBegin": 65, "originalText": "xign_x", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 74, "segment_span": [0, 29], "characterOffsetBegin": 72, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 79, "segment_span": [0, 29], "tense": "N", "characterOffsetBegin": 75, "originalText": "used", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 82, "segment_span": [0, 29], "characterOffsetBegin": 80, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "allow", "lemma": "allow", "after": " ", "pos": "VB", "characterOffsetEnd": 88, "segment_span": [0, 29], "characterOffsetBegin": 83, "originalText": "allow", "ArgType": null, "before": " "}, {"index": 18, "word": "freely", "lemma": "freely", "after": " ", "pos": "RB", "characterOffsetEnd": 95, "segment_span": [0, 29], "characterOffsetBegin": 89, "originalText": "freely", "ArgType": null, "before": " "}, {"index": 19, "word": "inserted", "lemma": "insert", "after": " ", "pos": "VBN", "characterOffsetEnd": 104, "segment_span": [0, 29], "characterOffsetBegin": 96, "originalText": "inserted", "ArgType": null, "before": " "}, {"index": 20, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [0, 29], "characterOffsetBegin": 105, "originalText": "lb2", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 112, "segment_span": [0, 29], "characterOffsetBegin": 109, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 116, "segment_span": [0, 29], "characterOffsetBegin": 113, "originalText": "rb2", "ArgType": null, "before": " "}, {"index": 23, "word": "anywhere", "lemma": "anywhere", "after": " ", "pos": "RB", "characterOffsetEnd": 125, "segment_span": [0, 29], "characterOffsetBegin": 117, "originalText": "anywhere", "ArgType": null, "before": " "}, {"index": 24, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 132, "segment_span": [0, 29], "characterOffsetBegin": 126, "originalText": "except", "ArgType": null, "before": " "}, {"index": 25, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [0, 29], "characterOffsetBegin": 133, "originalText": "at", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 139, "segment_span": [0, 29], "characterOffsetBegin": 136, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "beginning", "lemma": "beginning", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [0, 29], "characterOffsetBegin": 140, "originalText": "beginning", "ArgType": null, "before": " "}, {"index": 28, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 153, "segment_span": [0, 29], "characterOffsetBegin": 150, "originalText": "and", "ArgType": null, "before": " "}, {"index": 29, "word": "end", "lemma": "end", "after": " ", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [0, 29], "characterOffsetBegin": 154, "originalText": "end", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 159, "characterOffsetBegin": 158, "originalText": ".", "ArgType": null, "before": " "}], "text": "Phi needs to be marked as normal text using non_markers and then xign_x is used to allow freely inserted lb2 and rb2 anywhere except at the beginning and end ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "The", "ArgType": "subj", "before": ""}, {"index": 2, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "following", "ArgType": null, "before": " "}, {"index": 3, "word": "lb2", "lemma": "lb2", "after": "", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "lb2", "ArgType": null, "before": " "}, {"index": 4, "word": "^", "lemma": "^", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 9], "characterOffsetBegin": 17, "originalText": "^", "ArgType": null, "before": ""}, {"index": 5, "word": "allows", "lemma": "allow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 25, "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 19, "originalText": "allows", "ArgType": "verb", "before": " "}, {"index": 6, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 26, "originalText": "an", "ArgType": null, "before": " "}, {"index": 7, "word": "optional", "lemma": "optional", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 9], "characterOffsetBegin": 29, "originalText": "optional", "ArgType": null, "before": " "}, {"index": 8, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 9], "characterOffsetBegin": 38, "originalText": "lb2", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 43, "segment_span": [0, 9], "characterOffsetBegin": 42, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 49, "segment_span": [9, 11], "characterOffsetBegin": 44, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 11, "word": "occurs", "lemma": "occur", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 56, "segment_span": [9, 11], "tense": "Z", "characterOffsetBegin": 50, "originalText": "occurs", "ArgType": null, "before": " "}, {"index": 12, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 61, "segment_span": [11, 18], "characterOffsetBegin": 57, "originalText": "when", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 65, "segment_span": [11, 18], "characterOffsetBegin": 62, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [11, 18], "characterOffsetBegin": 66, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 15, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [11, 18], "characterOffsetBegin": 72, "originalText": "string", "ArgType": "subj", "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 81, "segment_span": [11, 18], "characterOffsetBegin": 79, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [11, 18], "characterOffsetBegin": 82, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 88, "segment_span": [11, 18], "characterOffsetBegin": 85, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 90, "characterOffsetBegin": 89, "originalText": ".", "ArgType": null, "before": " "}], "text": "The following lb2 ^ allows an optional lb2 , which occurs when the empty string is in Phi ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "fourth", "lemma": "fourth", "after": " ", "pos": "JJ", "characterOffsetEnd": 10, "segment_span": [0, 7], "characterOffsetBegin": 4, "originalText": "fourth", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 7], "characterOffsetBegin": 11, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 18, "segment_span": [0, 7], "characterOffsetBegin": 16, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 19, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "guessing", "lemma": "guess", "after": " ", "pos": "VBG", "characterOffsetEnd": 29, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "guessing", "ArgType": null, "before": " "}, {"index": 7, "word": "component", "lemma": "component", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 7], "characterOffsetBegin": 30, "originalText": "component", "ArgType": "verb", "before": " "}, {"index": 8, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 45, "segment_span": [7, 22], "characterOffsetBegin": 40, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 47, "segment_span": [7, 22], "characterOffsetBegin": 46, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "ignoring", "lemma": "ignore", "after": " ", "pos": "VBG", "characterOffsetEnd": 56, "segment_span": [7, 22], "characterOffsetBegin": 48, "originalText": "ignoring", "ArgType": null, "before": " "}, {"index": 11, "word": "complexities", "lemma": "complexity", "after": " ", "pos": "NNS", "characterOffsetEnd": 69, "segment_span": [7, 22], "characterOffsetBegin": 57, "originalText": "complexities", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 71, "segment_span": [7, 22], "characterOffsetBegin": 70, "originalText": ")", "ArgType": null, "before": " "}, {"index": 13, "word": "looks", "lemma": "look", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 77, "segment_span": [7, 22], "tense": "Z", "characterOffsetBegin": 72, "originalText": "looks", "ArgType": null, "before": " "}, {"index": 14, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [7, 22], "characterOffsetBegin": 78, "originalText": "for", "ArgType": null, "before": " "}, {"index": 15, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 91, "segment_span": [7, 22], "characterOffsetBegin": 82, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [7, 22], "characterOffsetBegin": 92, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [7, 22], "characterOffsetBegin": 95, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [7, 22], "characterOffsetBegin": 99, "originalText": "form", "ArgType": null, "before": " "}, {"index": 19, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [7, 22], "characterOffsetBegin": 104, "originalText": "lb2", "ArgType": null, "before": " "}, {"index": 20, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 111, "segment_span": [7, 22], "characterOffsetBegin": 108, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 21, "word": "rb2", "lemma": "rb2", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [7, 22], "characterOffsetBegin": 112, "originalText": "rb2", "ArgType": null, "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 119, "segment_span": [7, 22], "characterOffsetBegin": 116, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "converts", "lemma": "convert", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 128, "segment_span": [22, 31], "tense": "Z", "characterOffsetBegin": 120, "originalText": "converts", "ArgType": null, "before": " "}, {"index": 24, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 133, "segment_span": [22, 31], "characterOffsetBegin": 129, "originalText": "some", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [22, 31], "characterOffsetBegin": 134, "originalText": "of", "ArgType": null, "before": " "}, {"index": 26, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 142, "segment_span": [22, 31], "characterOffsetBegin": 137, "originalText": "these", "ArgType": null, "before": " "}, {"index": 27, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 147, "segment_span": [22, 31], "characterOffsetBegin": 143, "originalText": "into", "ArgType": null, "before": " "}, {"index": 28, "word": "lb1", "lemma": "lb1", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [22, 31], "characterOffsetBegin": 148, "originalText": "lb1", "ArgType": null, "before": " "}, {"index": 29, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 155, "segment_span": [22, 31], "characterOffsetBegin": 152, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 30, "word": "rb1", "lemma": "rb1", "after": " ", "pos": "NN", "characterOffsetEnd": 159, "segment_span": [22, 31], "characterOffsetBegin": 156, "originalText": "rb1", "ArgType": null, "before": " "}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 161, "segment_span": [22, 31], "characterOffsetBegin": 160, "originalText": ",", "ArgType": null, "before": " "}, {"index": 32, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 167, "segment_span": [31, 36], "characterOffsetBegin": 162, "originalText": "where", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 171, "segment_span": [31, 36], "characterOffsetBegin": 168, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "b1", "lemma": "b1", "after": " ", "pos": "NN", "characterOffsetEnd": 174, "segment_span": [31, 36], "characterOffsetBegin": 172, "originalText": "b1", "ArgType": "subj", "before": " "}, {"index": 35, "word": "marking", "lemma": "mark", "after": " ", "pos": "VBG", "characterOffsetEnd": 182, "segment_span": [31, 36], "characterOffsetBegin": 175, "originalText": "marking", "ArgType": null, "before": " "}, {"index": 36, "word": "indicates", "lemma": "indicate", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 192, "segment_span": [31, 36], "tense": "Z", "characterOffsetBegin": 183, "originalText": "indicates", "ArgType": null, "before": " "}, {"index": 37, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 197, "segment_span": [36, 44], "characterOffsetBegin": 193, "originalText": "that", "ArgType": null, "before": " "}, {"index": 38, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 201, "segment_span": [36, 44], "characterOffsetBegin": 198, "originalText": "the", "ArgType": null, "before": " "}, {"index": 39, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 210, "segment_span": [36, 44], "characterOffsetBegin": 202, "originalText": "sequence", "ArgType": "subj", "before": " "}, {"index": 40, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 213, "segment_span": [36, 44], "characterOffsetBegin": 211, "originalText": "is", "ArgType": null, "before": " "}, {"index": 41, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 215, "segment_span": [36, 44], "characterOffsetBegin": 214, "originalText": "a", "ArgType": null, "before": " "}, {"index": 42, "word": "candidate", "lemma": "candidate", "after": " ", "pos": "NN", "characterOffsetEnd": 225, "segment_span": [36, 44], "characterOffsetBegin": 216, "originalText": "candidate", "ArgType": null, "before": " "}, {"index": 43, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 229, "segment_span": [36, 44], "characterOffsetBegin": 226, "originalText": "for", "ArgType": null, "before": " "}, {"index": 44, "word": "replacement", "lemma": "replacement", "after": " ", "pos": "NN", "characterOffsetEnd": 241, "segment_span": [36, 44], "characterOffsetBegin": 230, "originalText": "replacement", "ArgType": null, "before": " "}, {"index": 45, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 243, "characterOffsetBegin": 242, "originalText": ".", "ArgType": null, "before": " "}], "text": "The fourth step is a guessing component which ( ignoring complexities ) looks for sequences of the form lb2 Phi rb2 and converts some of these into lb1 Phi rb1 , where the b1 marking indicates that the sequence is a candidate for replacement ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "complication", "lemma": "complication", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 3], "characterOffsetBegin": 4, "originalText": "complication", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 19, "segment_span": [0, 3], "tense": "Z", "characterOffsetBegin": 17, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [3, 25], "characterOffsetBegin": 20, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 28, "segment_span": [3, 25], "characterOffsetBegin": 25, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 30, "segment_span": [3, 25], "characterOffsetBegin": 29, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 33, "segment_span": [3, 25], "characterOffsetBegin": 31, "originalText": "as", "ArgType": null, "before": " "}, {"index": 8, "word": "always", "lemma": "always", "after": " ", "pos": "RB", "characterOffsetEnd": 40, "segment_span": [3, 25], "characterOffsetBegin": 34, "originalText": "always", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 42, "segment_span": [3, 25], "characterOffsetBegin": 41, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 47, "segment_span": [3, 25], "characterOffsetBegin": 43, "originalText": "must", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 50, "segment_span": [3, 25], "characterOffsetBegin": 48, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "converted", "is_pass": true, "lemma": "convert", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 60, "segment_span": [3, 25], "tense": "N", "characterOffsetBegin": 51, "originalText": "converted", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 63, "segment_span": [3, 25], "characterOffsetBegin": 61, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "non_markers", "lemma": "non_markers", "after": " ", "pos": "NNS", "characterOffsetEnd": 75, "segment_span": [3, 25], "characterOffsetBegin": 64, "originalText": "non_markers", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 77, "segment_span": [3, 25], "characterOffsetBegin": 76, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 81, "segment_span": [3, 25], "characterOffsetBegin": 78, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 83, "segment_span": [3, 25], "characterOffsetBegin": 82, "originalText": ")", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 87, "segment_span": [3, 25], "characterOffsetBegin": 84, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "instances", "lemma": "instance", "after": " ", "pos": "NNS", "characterOffsetEnd": 97, "segment_span": [3, 25], "characterOffsetBegin": 88, "originalText": "instances", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [3, 25], "characterOffsetBegin": 98, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "b2", "lemma": "b2", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [3, 25], "characterOffsetBegin": 101, "originalText": "b2", "ArgType": null, "before": " "}, {"index": 22, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "characterOffsetEnd": 108, "segment_span": [3, 25], "characterOffsetBegin": 104, "originalText": "need", "ArgType": null, "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 111, "segment_span": [3, 25], "characterOffsetBegin": 109, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 114, "segment_span": [3, 25], "characterOffsetBegin": 112, "originalText": "be", "ArgType": null, "before": " "}, {"index": 25, "word": "ignored", "lemma": "ignore", "after": " ", "pos": "VBN", "characterOffsetEnd": 122, "segment_span": [3, 25], "characterOffsetBegin": 115, "originalText": "ignored", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 124, "characterOffsetBegin": 123, "originalText": ".", "ArgType": null, "before": " "}], "text": "The complication is that Phi , as always , must be converted to non_markers ( Phi ) and instances of b2 need to be ignored ."}, {"tokens": [{"index": 1, "word": "Furthermore", "lemma": "furthermore", "after": " ", "pos": "RB", "characterOffsetEnd": 11, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "Furthermore", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 14], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 21, "segment_span": [0, 14], "characterOffsetBegin": 14, "originalText": "between", "ArgType": null, "before": " "}, {"index": 4, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 27, "segment_span": [0, 14], "characterOffsetBegin": 22, "originalText": "pairs", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 14], "characterOffsetBegin": 28, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "lb1", "lemma": "lb1", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 14], "characterOffsetBegin": 31, "originalText": "lb1", "ArgType": null, "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 38, "segment_span": [0, 14], "characterOffsetBegin": 35, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "rb1", "lemma": "rb1", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 14], "characterOffsetBegin": 39, "originalText": "rb1", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 44, "segment_span": [0, 14], "characterOffsetBegin": 43, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "instances", "lemma": "instance", "after": " ", "pos": "NNS", "characterOffsetEnd": 54, "segment_span": [0, 14], "characterOffsetBegin": 45, "originalText": "instances", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 14], "characterOffsetBegin": 55, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 14], "characterOffsetBegin": 58, "originalText": "lb2", "ArgType": null, "before": " "}, {"index": 13, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 65, "segment_span": [0, 14], "characterOffsetBegin": 62, "originalText": "are", "ArgType": null, "before": " "}, {"index": 14, "word": "deleted", "is_pass": true, "lemma": "delete", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 73, "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 66, "originalText": "deleted", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 75, "characterOffsetBegin": 74, "originalText": ".", "ArgType": null, "before": " "}], "text": "Furthermore , between pairs of lb1 and rb1 , instances of lb2 are deleted ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 5, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "These", "ArgType": null, "before": ""}, {"index": 2, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 8], "characterOffsetBegin": 6, "originalText": "lb2", "ArgType": null, "before": " "}, {"index": 3, "word": "markers", "lemma": "marker", "after": " ", "pos": "NNS", "characterOffsetEnd": 17, "segment_span": [0, 8], "characterOffsetBegin": 10, "originalText": "markers", "ArgType": "subj", "before": " "}, {"index": 4, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 18, "originalText": "have", "ArgType": null, "before": " "}, {"index": 5, "word": "done", "lemma": "do", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 27, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 23, "originalText": "done", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 33, "segment_span": [0, 8], "characterOffsetBegin": 28, "originalText": "their", "ArgType": null, "before": " "}, {"index": 7, "word": "job", "lemma": "job", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 8], "characterOffsetBegin": 34, "originalText": "job", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 41, "segment_span": [0, 8], "characterOffsetBegin": 38, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 45, "segment_span": [8, 12], "characterOffsetBegin": 42, "originalText": "are", "ArgType": null, "before": " "}, {"index": 10, "word": "no", "lemma": "no", "after": " ", "pos": "RB", "characterOffsetEnd": 48, "segment_span": [8, 12], "characterOffsetBegin": 46, "originalText": "no", "ArgType": null, "before": " "}, {"index": 11, "word": "longer", "lemma": "longer", "after": " ", "pos": "RB", "characterOffsetEnd": 55, "segment_span": [8, 12], "characterOffsetBegin": 49, "originalText": "longer", "ArgType": null, "before": " "}, {"index": 12, "word": "needed", "is_pass": true, "lemma": "need", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 62, "segment_span": [8, 12], "tense": "N", "characterOffsetBegin": 56, "originalText": "needed", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 64, "characterOffsetBegin": 63, "originalText": ".", "ArgType": null, "before": " "}], "text": "These lb2 markers have done their job and are no longer needed ."}, {"tokens": [{"index": 1, "word": "Putting", "lemma": "put", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 1], "tense": "G", "characterOffsetBegin": 0, "originalText": "Putting", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [1, 8], "characterOffsetBegin": 8, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 3, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 16, "segment_span": [1, 8], "characterOffsetBegin": 13, "originalText": "all", "ArgType": null, "before": " "}, {"index": 4, "word": "together", "lemma": "together", "after": " ", "pos": "RB", "characterOffsetEnd": 25, "segment_span": [1, 8], "characterOffsetBegin": 17, "originalText": "together", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 27, "segment_span": [1, 8], "characterOffsetBegin": 26, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [1, 8], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [1, 8], "characterOffsetBegin": 32, "originalText": "definition", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 45, "segment_span": [1, 8], "tense": "Z", "characterOffsetBegin": 43, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 47, "characterOffsetBegin": 46, "originalText": ":", "ArgType": null, "before": " "}], "text": "Putting this all together , the definition is :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "fifth", "lemma": "fifth", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 12], "characterOffsetBegin": 4, "originalText": "fifth", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 12], "characterOffsetBegin": 10, "originalText": "step", "ArgType": null, "before": " "}, {"index": 4, "word": "filters", "lemma": "filter", "after": " ", "pos": "NNS", "characterOffsetEnd": 22, "segment_span": [0, 12], "characterOffsetBegin": 15, "originalText": "filters", "ArgType": null, "before": " "}, {"index": 5, "word": "out", "lemma": "out", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 12], "characterOffsetBegin": 23, "originalText": "out", "ArgType": null, "before": " "}, {"index": 6, "word": "non-longest", "lemma": "non-longest", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 12], "characterOffsetBegin": 27, "originalText": "non-longest", "ArgType": null, "before": " "}, {"index": 7, "word": "matches", "lemma": "match", "after": " ", "pos": "NNS", "characterOffsetEnd": 46, "segment_span": [0, 12], "characterOffsetBegin": 39, "originalText": "matches", "ArgType": null, "before": " "}, {"index": 8, "word": "produced", "lemma": "produce", "after": " ", "pos": "VBN", "characterOffsetEnd": 55, "segment_span": [0, 12], "characterOffsetBegin": 47, "originalText": "produced", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [0, 12], "characterOffsetBegin": 56, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 62, "segment_span": [0, 12], "characterOffsetBegin": 59, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [0, 12], "characterOffsetBegin": 63, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 12, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [0, 12], "characterOffsetBegin": 72, "originalText": "step", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 78, "characterOffsetBegin": 77, "originalText": ".", "ArgType": null, "before": " "}], "text": "The fifth step filters out non-longest matches produced in the previous step ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 32], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 32], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 13, "segment_span": [0, 32], "characterOffsetBegin": 12, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 17, "segment_span": [0, 32], "characterOffsetBegin": 14, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "simplifying", "lemma": "simplify", "after": " ", "pos": "VBG", "characterOffsetEnd": 29, "segment_span": [0, 32], "characterOffsetBegin": 18, "originalText": "simplifying", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 32], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "bit", "lemma": "bit", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 32], "characterOffsetBegin": 32, "originalText": "bit", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 37, "segment_span": [0, 32], "characterOffsetBegin": 36, "originalText": ")", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 39, "segment_span": [0, 32], "characterOffsetBegin": 38, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 32], "characterOffsetBegin": 40, "originalText": "if", "ArgType": null, "before": " "}, {"index": 11, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 46, "segment_span": [0, 32], "characterOffsetBegin": 43, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 49, "segment_span": [0, 32], "characterOffsetBegin": 47, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "ab", "lemma": "ab", "after": "", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 32], "characterOffsetBegin": 50, "originalText": "ab", "ArgType": null, "before": " "}, {"index": 14, "word": "*", "lemma": "*", "after": " ", "pos": "SYM", "characterOffsetEnd": 53, "segment_span": [0, 32], "characterOffsetBegin": 52, "originalText": "*", "ArgType": null, "before": ""}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 55, "segment_span": [0, 32], "characterOffsetBegin": 54, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 60, "segment_span": [0, 32], "characterOffsetBegin": 56, "originalText": "then", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 62, "segment_span": [0, 32], "characterOffsetBegin": 61, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [0, 32], "characterOffsetBegin": 63, "originalText": "string", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 32], "characterOffsetBegin": 70, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 76, "segment_span": [0, 32], "characterOffsetBegin": 73, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "form", "lemma": "form", "after": "  ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 32], "characterOffsetBegin": 77, "originalText": "form", "ArgType": null, "before": " "}, {"index": 22, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 32], "characterOffsetBegin": 83, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 23, "word": "rb1", "lemma": "rb1", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [0, 32], "characterOffsetBegin": 93, "originalText": "rb1", "ArgType": null, "before": "  "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [0, 32], "characterOffsetBegin": 97, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "b", "lemma": "b", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [0, 32], "characterOffsetBegin": 99, "originalText": "b", "ArgType": null, "before": " "}, {"index": 26, "word": "lb1", "lemma": "lb1", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [0, 32], "characterOffsetBegin": 101, "originalText": "lb1", "ArgType": null, "before": " "}, {"index": 27, "word": "b", "lemma": "b", "after": "  ", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [0, 32], "characterOffsetBegin": 105, "originalText": "b", "ArgType": null, "before": " "}, {"index": 28, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 116, "segment_span": [0, 32], "characterOffsetBegin": 108, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 29, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 124, "segment_span": [0, 32], "characterOffsetBegin": 118, "originalText": "should", "ArgType": null, "before": "  "}, {"index": 30, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 127, "segment_span": [0, 32], "characterOffsetBegin": 125, "originalText": "be", "ArgType": null, "before": " "}, {"index": 31, "word": "ruled", "lemma": "rule", "after": " ", "pos": "VBN", "characterOffsetEnd": 133, "segment_span": [0, 32], "characterOffsetBegin": 128, "originalText": "ruled", "ArgType": null, "before": " "}, {"index": 32, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 137, "segment_span": [0, 32], "characterOffsetBegin": 134, "originalText": "out", "ArgType": null, "before": " "}, {"index": 33, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 143, "segment_span": [32, 39], "characterOffsetBegin": 138, "originalText": "since", "ArgType": null, "before": " "}, {"index": 34, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 149, "segment_span": [32, 39], "characterOffsetBegin": 144, "originalText": "there", "ArgType": null, "before": " "}, {"index": 35, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 152, "segment_span": [32, 39], "tense": "Z", "characterOffsetBegin": 150, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 36, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 155, "segment_span": [32, 39], "characterOffsetBegin": 153, "originalText": "an", "ArgType": null, "before": " "}, {"index": 37, "word": "instance", "lemma": "instance", "after": " ", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [32, 39], "characterOffsetBegin": 156, "originalText": "instance", "ArgType": "subj", "before": " "}, {"index": 38, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 167, "segment_span": [32, 39], "characterOffsetBegin": 165, "originalText": "of", "ArgType": null, "before": " "}, {"index": 39, "word": "Phi", "lemma": "Phi", "after": " ", "pos": "NNP", "characterOffsetEnd": 171, "segment_span": [32, 39], "characterOffsetBegin": 168, "originalText": "Phi", "ArgType": null, "before": " "}, {"index": 40, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 173, "segment_span": [39, 47], "characterOffsetBegin": 172, "originalText": "(", "ArgType": null, "before": " "}, {"index": 41, "word": "ignoring", "lemma": "ignore", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 182, "segment_span": [39, 47], "tense": "G", "characterOffsetBegin": 174, "originalText": "ignoring", "ArgType": null, "before": " "}, {"index": 42, "word": "brackets", "lemma": "bracket", "after": " ", "pos": "NNS", "characterOffsetEnd": 191, "segment_span": [39, 47], "characterOffsetBegin": 183, "originalText": "brackets", "ArgType": "dobj", "before": " "}, {"index": 43, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 198, "segment_span": [42, 46], "characterOffsetBegin": 192, "originalText": "except", "ArgType": null, "before": " "}, {"index": 44, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 201, "segment_span": [42, 46], "characterOffsetBegin": 199, "originalText": "at", "ArgType": null, "before": " "}, {"index": 45, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 205, "segment_span": [42, 46], "characterOffsetBegin": 202, "originalText": "the", "ArgType": null, "before": " "}, {"index": 46, "word": "end", "lemma": "end", "after": " ", "pos": "NN", "characterOffsetEnd": 209, "segment_span": [42, 46], "characterOffsetBegin": 206, "originalText": "end", "ArgType": null, "before": " "}, {"index": 47, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 211, "segment_span": [39, 47], "characterOffsetBegin": 210, "originalText": ")", "ArgType": null, "before": " "}, {"index": 48, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 217, "segment_span": [47, 53], "characterOffsetBegin": 212, "originalText": "where", "ArgType": null, "before": " "}, {"index": 49, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 223, "segment_span": [47, 53], "characterOffsetBegin": 218, "originalText": "there", "ArgType": null, "before": " "}, {"index": 50, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 226, "segment_span": [47, 53], "tense": "Z", "characterOffsetBegin": 224, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 51, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 229, "segment_span": [47, 53], "characterOffsetBegin": 227, "originalText": "an", "ArgType": null, "before": " "}, {"index": 52, "word": "internal", "lemma": "internal", "after": " ", "pos": "JJ", "characterOffsetEnd": 238, "segment_span": [47, 53], "characterOffsetBegin": 230, "originalText": "internal", "ArgType": null, "before": " "}, {"index": 53, "word": "lb1", "lemma": "lb1", "after": " ", "pos": "NN", "characterOffsetEnd": 242, "segment_span": [47, 53], "characterOffsetBegin": 239, "originalText": "lb1", "ArgType": "subj", "before": " "}, {"index": 54, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 244, "characterOffsetBegin": 243, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example ( and simplifying a bit ) , if Phi is ab * , then a string of the form equation rb1 a b lb1 b equation should be ruled out since there is an instance of Phi ( ignoring brackets except at the end ) where there is an internal lb1 ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 7, "segment_span": [0, 4], "characterOffsetBegin": 5, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 19, "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 8, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 4, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 4], "characterOffsetBegin": 20, "originalText": "as", "ArgType": null, "before": " "}, {"index": 5, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 24, "characterOffsetBegin": 23, "originalText": ":", "ArgType": null, "before": " "}], "text": "This is implemented as :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "sixth", "lemma": "sixth", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "sixth", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 9], "characterOffsetBegin": 10, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 4, "word": "performs", "lemma": "perform", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 23, "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 15, "originalText": "performs", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [0, 9], "characterOffsetBegin": 24, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "transduction", "lemma": "transduction", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 9], "characterOffsetBegin": 28, "originalText": "transduction", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 50, "segment_span": [0, 9], "characterOffsetBegin": 41, "originalText": "described", "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [0, 9], "characterOffsetBegin": 51, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 9], "characterOffsetBegin": 54, "originalText": "T", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 57, "characterOffsetBegin": 56, "originalText": ".", "ArgType": null, "before": " "}], "text": "The sixth step performs the transduction described by T ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 6], "characterOffsetBegin": 5, "originalText": "step", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 12, "segment_span": [0, 6], "characterOffsetBegin": 10, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "straightforwardly", "lemma": "straightforwardly", "after": " ", "pos": "RB", "characterOffsetEnd": 30, "segment_span": [0, 6], "characterOffsetBegin": 13, "originalText": "straightforwardly", "ArgType": null, "before": " "}, {"index": 5, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 42, "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 31, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 44, "segment_span": [0, 6], "characterOffsetBegin": 43, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 50, "segment_span": [6, 20], "characterOffsetBegin": 45, "originalText": "where", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [6, 20], "characterOffsetBegin": 51, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "main", "lemma": "main", "after": " ", "pos": "JJ", "characterOffsetEnd": 59, "segment_span": [6, 20], "characterOffsetBegin": 55, "originalText": "main", "ArgType": null, "before": " "}, {"index": 10, "word": "difficulty", "lemma": "difficulty", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [6, 20], "characterOffsetBegin": 60, "originalText": "difficulty", "ArgType": "subj", "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 73, "segment_span": [6, 20], "characterOffsetBegin": 71, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "getting", "lemma": "get", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 81, "segment_span": [6, 20], "tense": "G", "characterOffsetBegin": 74, "originalText": "getting", "has_aux": true, "ArgType": null, "before": " "}, {"index": 13, "word": "T", "lemma": "t", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [6, 20], "characterOffsetBegin": 82, "originalText": "T", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 86, "segment_span": [6, 20], "characterOffsetBegin": 84, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "apply", "lemma": "apply", "after": " ", "pos": "VB", "characterOffsetEnd": 92, "segment_span": [6, 20], "characterOffsetBegin": 87, "originalText": "apply", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 95, "segment_span": [6, 20], "characterOffsetBegin": 93, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 99, "segment_span": [6, 20], "characterOffsetBegin": 96, "originalText": "our", "ArgType": null, "before": " "}, {"index": 18, "word": "specially", "lemma": "specially", "after": " ", "pos": "RB", "characterOffsetEnd": 109, "segment_span": [6, 20], "characterOffsetBegin": 100, "originalText": "specially", "ArgType": null, "before": " "}, {"index": 19, "word": "marked", "lemma": "marked", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [6, 20], "characterOffsetBegin": 110, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 20, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [6, 20], "characterOffsetBegin": 117, "originalText": "string", "ArgType": null, "before": " "}, {"index": 21, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 125, "characterOffsetBegin": 124, "originalText": ":", "ArgType": null, "before": " "}], "text": "This step is straightforwardly implemented , where the main difficulty is getting T to apply to our specially marked string :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "seventh", "lemma": "seventh", "after": " ", "pos": "JJ", "characterOffsetEnd": 11, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "seventh", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 4], "characterOffsetBegin": 12, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 4, "word": "ensures", "lemma": "ensure", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 24, "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 17, "originalText": "ensures", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [4, 13], "characterOffsetBegin": 25, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "lb1", "lemma": "lb1", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [4, 13], "characterOffsetBegin": 30, "originalText": "lb1", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 36, "segment_span": [4, 13], "characterOffsetBegin": 34, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "preceded", "is_pass": true, "lemma": "precede", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 45, "segment_span": [4, 13], "tense": "N", "characterOffsetBegin": 37, "originalText": "preceded", "ArgType": null, "before": " "}, {"index": 9, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [4, 13], "characterOffsetBegin": 46, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 50, "segment_span": [4, 13], "characterOffsetBegin": 49, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [4, 13], "characterOffsetBegin": 51, "originalText": "string", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [4, 13], "characterOffsetBegin": 58, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "Left", "lemma": "leave", "after": " ", "pos": "VBN", "characterOffsetEnd": 65, "segment_span": [4, 13], "characterOffsetBegin": 61, "originalText": "Left", "ArgType": null, "before": " "}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ":", "ArgType": null, "before": " "}], "text": "The seventh step ensures that lb1 is preceded by a string in Left :"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "eighth", "lemma": "eighth", "after": " ", "pos": "JJ", "characterOffsetEnd": 10, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "eighth", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 4], "characterOffsetBegin": 11, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 4, "word": "ensures", "lemma": "ensure", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 23, "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 16, "originalText": "ensures", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [4, 14], "characterOffsetBegin": 24, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "lb2", "lemma": "lb2", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [4, 14], "characterOffsetBegin": 29, "originalText": "lb2", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 35, "segment_span": [4, 14], "characterOffsetBegin": 33, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 39, "segment_span": [4, 14], "characterOffsetBegin": 36, "originalText": "not", "ArgType": null, "before": " "}, {"index": 9, "word": "preceded", "is_pass": true, "lemma": "precede", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 48, "segment_span": [4, 14], "tense": "N", "characterOffsetBegin": 40, "originalText": "preceded", "ArgType": null, "before": " "}, {"index": 10, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [4, 14], "characterOffsetBegin": 49, "originalText": "by", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 53, "segment_span": [4, 14], "characterOffsetBegin": 52, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [4, 14], "characterOffsetBegin": 54, "originalText": "string", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [4, 14], "characterOffsetBegin": 61, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "Left", "lemma": "leave", "after": " ", "pos": "VBN", "characterOffsetEnd": 68, "segment_span": [4, 14], "characterOffsetBegin": 64, "originalText": "Left", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 70, "characterOffsetBegin": 69, "originalText": ".", "ArgType": null, "before": " "}], "text": "The eighth step ensures that lb2 is not preceded by a string in Left ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 7, "segment_span": [0, 8], "characterOffsetBegin": 5, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "implemented", "is_pass": true, "lemma": "implement", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 19, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 8, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 4, "word": "similarly", "lemma": "similarly", "after": " ", "pos": "RB", "characterOffsetEnd": 29, "segment_span": [0, 8], "characterOffsetBegin": 20, "originalText": "similarly", "ArgType": null, "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 30, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [0, 8], "characterOffsetBegin": 37, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 8, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 8], "characterOffsetBegin": 46, "originalText": "step", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 52, "characterOffsetBegin": 51, "originalText": ":", "ArgType": null, "before": " "}], "text": "This is implemented similarly to the previous step :"}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 27], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 27], "characterOffsetBegin": 8, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "ninth", "lemma": "ninth", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 27], "characterOffsetBegin": 12, "originalText": "ninth", "ArgType": null, "before": " "}, {"index": 4, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 27], "characterOffsetBegin": 18, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 24, "segment_span": [0, 27], "characterOffsetBegin": 23, "originalText": ",", "ArgType": null, "before": " "}, {"index": 6, "word": "inverse", "lemma": "inverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 27], "characterOffsetBegin": 25, "originalText": "inverse", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 34, "segment_span": [0, 27], "characterOffsetBegin": 33, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "non_markers", "lemma": "non_markers", "after": " ", "pos": "NNS", "characterOffsetEnd": 46, "segment_span": [0, 27], "characterOffsetBegin": 35, "originalText": "non_markers", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 48, "segment_span": [0, 27], "characterOffsetBegin": 47, "originalText": ")", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 50, "segment_span": [0, 27], "characterOffsetBegin": 49, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "removes", "lemma": "remove", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 58, "segment_span": [0, 27], "tense": "Z", "characterOffsetBegin": 51, "originalText": "removes", "ArgType": "verb", "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 62, "segment_span": [0, 27], "characterOffsetBegin": 59, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "0", "lemma": "0", "after": "", "pos": "CD", "characterOffsetEnd": 64, "segment_span": [0, 27], "characterOffsetBegin": 63, "originalText": "0", "ArgType": null, "before": " "}, {"index": 14, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 66, "segment_span": [0, 27], "characterOffsetBegin": 64, "originalText": "'s", "ArgType": null, "before": ""}, {"index": 15, "word": "so", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 69, "segment_span": [0, 27], "characterOffsetBegin": 67, "originalText": "so", "ArgType": null, "before": " "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 74, "segment_span": [0, 27], "characterOffsetBegin": 70, "originalText": "that", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [0, 27], "characterOffsetBegin": 75, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 84, "segment_span": [0, 27], "characterOffsetBegin": 79, "originalText": "final", "ArgType": null, "before": " "}, {"index": 19, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 27], "characterOffsetBegin": 85, "originalText": "result", "ArgType": null, "before": " "}, {"index": 20, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [0, 27], "characterOffsetBegin": 92, "originalText": "in", "ArgType": null, "before": " "}, {"index": 21, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 98, "segment_span": [0, 27], "characterOffsetBegin": 95, "originalText": "not", "ArgType": null, "before": " "}, {"index": 22, "word": "marked", "lemma": "mark", "after": " ", "pos": "VBN", "characterOffsetEnd": 105, "segment_span": [0, 27], "characterOffsetBegin": 99, "originalText": "marked", "ArgType": null, "before": " "}, {"index": 23, "word": "up", "lemma": "up", "after": " ", "pos": "RP", "characterOffsetEnd": 108, "segment_span": [0, 27], "characterOffsetBegin": 106, "originalText": "up", "ArgType": null, "before": " "}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 111, "segment_span": [0, 27], "characterOffsetBegin": 109, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 115, "segment_span": [0, 27], "characterOffsetBegin": 112, "originalText": "any", "ArgType": null, "before": " "}, {"index": 26, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 123, "segment_span": [0, 27], "characterOffsetBegin": 116, "originalText": "special", "ArgType": null, "before": " "}, {"index": 27, "word": "way", "lemma": "way", "after": " ", "pos": "NN", "characterOffsetEnd": 127, "segment_span": [0, 27], "characterOffsetBegin": 124, "originalText": "way", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally the ninth step , inverse ( non_markers ) , removes the 0 's so that the final result in not marked up in any special way ."}]}], "title": "The Algorithm"}, {"num": 2, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "As", "ArgType": null, "before": ""}, {"index": 2, "word": "discussed", "lemma": "discuss", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 3, "originalText": "discussed", "ArgType": null, "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 5], "characterOffsetBegin": 13, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 5], "characterOffsetBegin": 17, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 5, "word": ";", "lemma": ";", "after": "  ", "pos": ":", "characterOffsetEnd": 28, "segment_span": [0, 5], "characterOffsetBegin": 27, "originalText": ";", "ArgType": null, "before": "  "}, {"index": 6, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 34, "segment_span": [5, 10], "characterOffsetBegin": 30, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [5, 10], "characterOffsetBegin": 36, "originalText": "the", "ArgType": null, "before": "  "}, {"index": 8, "word": "POSIX", "lemma": "POSIX", "after": " ", "pos": "NNP", "characterOffsetEnd": 45, "segment_span": [5, 10], "characterOffsetBegin": 40, "originalText": "POSIX", "ArgType": null, "before": " "}, {"index": 9, "word": "standard", "lemma": "standard", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [5, 10], "characterOffsetBegin": 46, "originalText": "standard", "ArgType": "subj", "before": " "}, {"index": 10, "word": "requires", "lemma": "require", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 63, "segment_span": [5, 10], "tense": "Z", "characterOffsetBegin": 55, "originalText": "requires", "ArgType": null, "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [10, 18], "characterOffsetBegin": 64, "originalText": "that", "ArgType": null, "before": " "}, {"index": 12, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [10, 18], "characterOffsetBegin": 69, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 13, "word": "captures", "lemma": "capture", "after": " ", "pos": "NNS", "characterOffsetEnd": 86, "segment_span": [10, 18], "characterOffsetBegin": 78, "originalText": "captures", "ArgType": "subj", "before": " "}, {"index": 14, "word": "follow", "lemma": "follow", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 93, "segment_span": [10, 18], "tense": "P", "characterOffsetBegin": 87, "originalText": "follow", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 95, "segment_span": [10, 18], "characterOffsetBegin": 94, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 103, "segment_span": [10, 18], "characterOffsetBegin": 96, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 17, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [10, 18], "characterOffsetBegin": 104, "originalText": "match", "ArgType": null, "before": " "}, {"index": 18, "word": "strategy", "lemma": "strategy", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [10, 18], "characterOffsetBegin": 110, "originalText": "strategy", "ArgType": "dobj", "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 120, "characterOffsetBegin": 119, "originalText": ".", "ArgType": null, "before": " "}], "text": "As discussed in equation ; CREF the POSIX standard requires that multiple captures follow a longest match strategy ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 17], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 17], "characterOffsetBegin": 4, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 3, "word": "captures", "lemma": "capture", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [0, 17], "characterOffsetBegin": 13, "originalText": "captures", "ArgType": null, "before": " "}, {"index": 4, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 17], "characterOffsetBegin": 22, "originalText": "as", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 17], "characterOffsetBegin": 25, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": "  ", "pos": "-LRB-", "characterOffsetEnd": 29, "segment_span": [0, 17], "characterOffsetBegin": 28, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "CREF", "lemma": "cref", "after": "  ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 17], "characterOffsetBegin": 31, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 38, "segment_span": [0, 17], "characterOffsetBegin": 37, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 40, "segment_span": [0, 17], "characterOffsetBegin": 39, "originalText": ",", "ArgType": null, "before": " "}, {"index": 10, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 44, "segment_span": [0, 17], "characterOffsetBegin": 41, "originalText": "one", "ArgType": "subj", "before": " "}, {"index": 11, "word": "establishes", "lemma": "establish", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 56, "segment_span": [0, 17], "tense": "Z", "characterOffsetBegin": 45, "originalText": "establishes", "ArgType": "verb", "before": " "}, {"index": 12, "word": "first", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 62, "segment_span": [0, 17], "characterOffsetBegin": 57, "originalText": "first", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [0, 17], "characterOffsetBegin": 63, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 72, "segment_span": [0, 17], "characterOffsetBegin": 65, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 15, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 17], "characterOffsetBegin": 73, "originalText": "match", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "for", "lemma": "for", "after": "  ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [0, 17], "characterOffsetBegin": 79, "originalText": "for", "ArgType": null, "before": " "}, {"index": 17, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 17], "characterOffsetBegin": 84, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 95, "characterOffsetBegin": 94, "originalText": ".", "ArgType": null, "before": "  "}], "text": "For multiple captures as in ( CREF ) , one establishes first a longest match for equation ."}, {"tokens": [{"index": 1, "word": "Then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "Then", "ArgType": null, "before": ""}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 7, "segment_span": [0, 3], "characterOffsetBegin": 5, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "ensure", "lemma": "ensure", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 14, "segment_span": [0, 3], "tense": "B", "characterOffsetBegin": 8, "originalText": "ensure", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 19, "segment_span": [3, 30], "characterOffsetBegin": 15, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 24, "segment_span": [3, 30], "characterOffsetBegin": 20, "originalText": "each", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [3, 30], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [3, 30], "characterOffsetBegin": 28, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 36, "segment_span": [3, 30], "characterOffsetBegin": 35, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "Ti", "lemma": "ti", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [3, 30], "characterOffsetBegin": 37, "originalText": "Ti", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 41, "segment_span": [3, 30], "characterOffsetBegin": 40, "originalText": ")", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [3, 30], "characterOffsetBegin": 42, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "turn", "lemma": "turn", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [3, 30], "characterOffsetBegin": 45, "originalText": "turn", "ArgType": null, "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 52, "segment_span": [3, 30], "characterOffsetBegin": 50, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "required", "is_pass": true, "lemma": "require", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 61, "segment_span": [3, 30], "tense": "N", "characterOffsetBegin": 53, "originalText": "required", "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 64, "segment_span": [3, 30], "characterOffsetBegin": 62, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "match", "lemma": "match", "after": " ", "pos": "VB", "characterOffsetEnd": 70, "segment_span": [3, 30], "characterOffsetBegin": 65, "originalText": "match", "ArgType": null, "before": " "}, {"index": 17, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [3, 30], "characterOffsetBegin": 71, "originalText": "as", "ArgType": null, "before": " "}, {"index": 18, "word": "long", "lemma": "long", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [3, 30], "characterOffsetBegin": 74, "originalText": "long", "ArgType": null, "before": " "}, {"index": 19, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [3, 30], "characterOffsetBegin": 79, "originalText": "as", "ArgType": null, "before": " "}, {"index": 20, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [3, 30], "characterOffsetBegin": 82, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 92, "segment_span": [3, 30], "characterOffsetBegin": 91, "originalText": ",", "ArgType": null, "before": " "}, {"index": 22, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 97, "segment_span": [3, 30], "characterOffsetBegin": 93, "originalText": "with", "ArgType": null, "before": " "}, {"index": 23, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 102, "segment_span": [3, 30], "characterOffsetBegin": 98, "originalText": "each", "ArgType": null, "before": " "}, {"index": 24, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 106, "segment_span": [3, 30], "characterOffsetBegin": 103, "originalText": "one", "ArgType": null, "before": " "}, {"index": 25, "word": "having", "lemma": "have", "after": " ", "pos": "VBG", "characterOffsetEnd": 113, "segment_span": [3, 30], "characterOffsetBegin": 107, "originalText": "having", "ArgType": null, "before": " "}, {"index": 26, "word": "priority", "lemma": "priority", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [3, 30], "characterOffsetBegin": 114, "originalText": "priority", "ArgType": "dobj", "before": " "}, {"index": 27, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 127, "segment_span": [3, 30], "characterOffsetBegin": 123, "originalText": "over", "ArgType": null, "before": " "}, {"index": 28, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 131, "segment_span": [3, 30], "characterOffsetBegin": 128, "originalText": "its", "ArgType": null, "before": " "}, {"index": 29, "word": "rightward", "lemma": "rightward", "after": " ", "pos": "JJ", "characterOffsetEnd": 141, "segment_span": [3, 30], "characterOffsetBegin": 132, "originalText": "rightward", "ArgType": null, "before": " "}, {"index": 30, "word": "neighbors", "lemma": "neighbor", "after": " ", "pos": "NNS", "characterOffsetEnd": 151, "segment_span": [3, 30], "characterOffsetBegin": 142, "originalText": "neighbors", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 153, "characterOffsetBegin": 152, "originalText": ".", "ArgType": null, "before": " "}], "text": "Then we ensure that each of domain ( Ti ) in turn is required to match as long as possible , with each one having priority over its rightward neighbors ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "implement", "lemma": "implement", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 3], "tense": "B", "characterOffsetBegin": 3, "originalText": "implement", "ArgType": null, "before": " "}, {"index": 3, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 3], "characterOffsetBegin": 13, "originalText": "this", "ArgType": "dobj", "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 19, "segment_span": [3, 13], "characterOffsetBegin": 18, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 22, "segment_span": [3, 13], "characterOffsetBegin": 20, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "define", "lemma": "define", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 29, "segment_span": [3, 13], "tense": "P", "characterOffsetBegin": 23, "originalText": "define", "ArgType": "verb", "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [3, 13], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [3, 13], "characterOffsetBegin": 32, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 9, "word": "lm_concat", "lemma": "lm_concat", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [3, 13], "characterOffsetBegin": 38, "originalText": "lm_concat", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 49, "segment_span": [3, 13], "characterOffsetBegin": 48, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "Ts", "lemma": "ts", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [3, 13], "characterOffsetBegin": 50, "originalText": "Ts", "ArgType": null, "before": " "}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 54, "segment_span": [3, 13], "characterOffsetBegin": 53, "originalText": ")", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 58, "segment_span": [3, 13], "characterOffsetBegin": 55, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "use", "lemma": "use", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 62, "segment_span": [13, 16], "tense": "B", "characterOffsetBegin": 59, "originalText": "use", "ArgType": null, "before": " "}, {"index": 15, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 65, "segment_span": [13, 16], "characterOffsetBegin": 63, "originalText": "it", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [13, 16], "characterOffsetBegin": 66, "originalText": "as", "ArgType": null, "before": " "}, {"index": 17, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 70, "characterOffsetBegin": 69, "originalText": ":", "ArgType": null, "before": " "}], "text": "To implement this , we define a macro lm_concat ( Ts ) and use it as :"}, {"tokens": [{"index": 1, "word": "Ensuring", "lemma": "ensure", "after": " ", "pos": "VBG", "characterOffsetEnd": 8, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Ensuring", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 20], "characterOffsetBegin": 9, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 20, "segment_span": [0, 20], "characterOffsetBegin": 13, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 4, "word": "overall", "lemma": "overall", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 20], "characterOffsetBegin": 21, "originalText": "overall", "ArgType": null, "before": " "}, {"index": 5, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 20], "characterOffsetBegin": 29, "originalText": "match", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 37, "segment_span": [0, 20], "characterOffsetBegin": 35, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "delegated", "is_pass": true, "lemma": "delegate", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 47, "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 38, "originalText": "delegated", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 50, "segment_span": [0, 20], "characterOffsetBegin": 48, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 20], "characterOffsetBegin": 51, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "replace", "lemma": "replace", "after": " ", "pos": "VB", "characterOffsetEnd": 62, "segment_span": [0, 20], "characterOffsetBegin": 55, "originalText": "replace", "ArgType": null, "before": " "}, {"index": 11, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 20], "characterOffsetBegin": 63, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 70, "segment_span": [0, 20], "characterOffsetBegin": 69, "originalText": ",", "ArgType": null, "before": " "}, {"index": 13, "word": "so", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 73, "segment_span": [0, 20], "characterOffsetBegin": 71, "originalText": "so", "ArgType": null, "before": " "}, {"index": 14, "word": "lm_concat", "lemma": "lm_concat", "after": " ", "pos": "JJ", "characterOffsetEnd": 83, "segment_span": [0, 20], "characterOffsetBegin": 74, "originalText": "lm_concat", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 85, "segment_span": [0, 20], "characterOffsetBegin": 84, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "Ts", "lemma": "ts", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [0, 20], "characterOffsetBegin": 86, "originalText": "Ts", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 90, "segment_span": [0, 20], "characterOffsetBegin": 89, "originalText": ")", "ArgType": null, "before": " "}, {"index": 18, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "characterOffsetEnd": 96, "segment_span": [0, 20], "characterOffsetBegin": 91, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 19, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 101, "segment_span": [0, 20], "characterOffsetBegin": 97, "originalText": "only", "ArgType": null, "before": " "}, {"index": 20, "word": "ensure", "lemma": "ensure", "after": " ", "pos": "VB", "characterOffsetEnd": 108, "segment_span": [0, 20], "characterOffsetBegin": 102, "originalText": "ensure", "ArgType": null, "before": " "}, {"index": 21, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [20, 33], "characterOffsetBegin": 109, "originalText": "that", "ArgType": null, "before": " "}, {"index": 22, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [20, 33], "characterOffsetBegin": 114, "originalText": "each", "ArgType": null, "before": " "}, {"index": 23, "word": "individual", "lemma": "individual", "after": " ", "pos": "JJ", "characterOffsetEnd": 129, "segment_span": [20, 33], "characterOffsetBegin": 119, "originalText": "individual", "ArgType": null, "before": " "}, {"index": 24, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 140, "segment_span": [20, 33], "characterOffsetBegin": 130, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 25, "word": "within", "lemma": "within", "after": " ", "pos": "IN", "characterOffsetEnd": 147, "segment_span": [20, 33], "characterOffsetBegin": 141, "originalText": "within", "ArgType": null, "before": " "}, {"index": 26, "word": "Ts", "lemma": "ts", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [20, 33], "characterOffsetBegin": 148, "originalText": "Ts", "ArgType": null, "before": " "}, {"index": 27, "word": "gets", "lemma": "get", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 155, "segment_span": [20, 33], "tense": "Z", "characterOffsetBegin": 151, "originalText": "gets", "ArgType": null, "before": " "}, {"index": 28, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 159, "segment_span": [20, 33], "characterOffsetBegin": 156, "originalText": "its", "ArgType": null, "before": " "}, {"index": 29, "word": "proper", "lemma": "proper", "after": " ", "pos": "JJ", "characterOffsetEnd": 166, "segment_span": [20, 33], "characterOffsetBegin": 160, "originalText": "proper", "ArgType": null, "before": " "}, {"index": 30, "word": "left-to-right", "lemma": "left-to-right", "after": " ", "pos": "JJ", "characterOffsetEnd": 180, "segment_span": [20, 33], "characterOffsetBegin": 167, "originalText": "left-to-right", "ArgType": null, "before": " "}, {"index": 31, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 188, "segment_span": [20, 33], "characterOffsetBegin": 181, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 32, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 197, "segment_span": [20, 33], "characterOffsetBegin": 189, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 33, "word": "priority", "lemma": "priority", "after": " ", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [20, 33], "characterOffsetBegin": 198, "originalText": "priority", "ArgType": "dobj", "before": " "}, {"index": 34, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 208, "characterOffsetBegin": 207, "originalText": ".", "ArgType": null, "before": " "}], "text": "Ensuring the longest overall match is delegated to the replace macro , so lm_concat ( Ts ) needs only ensure that each individual transducer within Ts gets its proper left-to-right longest matching priority ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 19], "characterOffsetBegin": 5, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 15, "segment_span": [0, 19], "characterOffsetBegin": 13, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "mostly", "lemma": "mostly", "after": " ", "pos": "RB", "characterOffsetEnd": 22, "segment_span": [0, 19], "characterOffsetBegin": 16, "originalText": "mostly", "ArgType": null, "before": " "}, {"index": 5, "word": "solved", "is_pass": true, "lemma": "solve", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 19], "tense": "N", "characterOffsetBegin": 23, "originalText": "solved", "ArgType": null, "before": " "}, {"index": 6, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 19], "characterOffsetBegin": 30, "originalText": "by", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [0, 19], "characterOffsetBegin": 33, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 41, "segment_span": [0, 19], "characterOffsetBegin": 37, "originalText": "same", "ArgType": null, "before": " "}, {"index": 9, "word": "techniques", "lemma": "technique", "after": " ", "pos": "NNS", "characterOffsetEnd": 52, "segment_span": [0, 19], "characterOffsetBegin": 42, "originalText": "techniques", "ArgType": null, "before": " "}, {"index": 10, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 57, "segment_span": [0, 19], "characterOffsetBegin": 53, "originalText": "used", "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 60, "segment_span": [0, 19], "characterOffsetBegin": 58, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "ensure", "lemma": "ensure", "after": " ", "pos": "VB", "characterOffsetEnd": 67, "segment_span": [0, 19], "characterOffsetBegin": 61, "originalText": "ensure", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [0, 19], "characterOffsetBegin": 68, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 79, "segment_span": [0, 19], "characterOffsetBegin": 72, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 15, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [0, 19], "characterOffsetBegin": 80, "originalText": "match", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "within", "lemma": "within", "after": " ", "pos": "IN", "characterOffsetEnd": 92, "segment_span": [0, 19], "characterOffsetBegin": 86, "originalText": "within", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 96, "segment_span": [0, 19], "characterOffsetBegin": 93, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "replace", "lemma": "replace", "after": " ", "pos": "VB", "characterOffsetEnd": 104, "segment_span": [0, 19], "characterOffsetBegin": 97, "originalText": "replace", "ArgType": null, "before": " "}, {"index": 19, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 19], "characterOffsetBegin": 105, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 112, "characterOffsetBegin": 111, "originalText": ".", "ArgType": null, "before": " "}], "text": "This problem is mostly solved by the same techniques used to ensure the longest match within the replace macro ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "only", "lemma": "only", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 5], "characterOffsetBegin": 4, "originalText": "only", "ArgType": null, "before": " "}, {"index": 3, "word": "complication", "lemma": "complication", "after": " ", "pos": "NN", "characterOffsetEnd": 21, "segment_span": [0, 5], "characterOffsetBegin": 9, "originalText": "complication", "ArgType": "subj", "before": " "}, {"index": 4, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 26, "segment_span": [0, 5], "characterOffsetBegin": 22, "originalText": "here", "ArgType": null, "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 5], "tense": "Z", "characterOffsetBegin": 27, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [5, 12], "characterOffsetBegin": 30, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "Ts", "lemma": "t", "after": " ", "pos": "NNS", "characterOffsetEnd": 37, "segment_span": [5, 12], "characterOffsetBegin": 35, "originalText": "Ts", "ArgType": "subj", "before": " "}, {"index": 8, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 41, "segment_span": [5, 12], "characterOffsetBegin": 38, "originalText": "can", "ArgType": null, "before": " "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 44, "segment_span": [5, 12], "characterOffsetBegin": 42, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [5, 12], "characterOffsetBegin": 45, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "unbounded", "lemma": "unbounded", "after": " ", "pos": "JJ", "characterOffsetEnd": 57, "segment_span": [5, 12], "characterOffsetBegin": 48, "originalText": "unbounded", "ArgType": null, "before": " "}, {"index": 12, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [5, 12], "has_aux": true, "characterOffsetBegin": 58, "originalText": "length", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 66, "characterOffsetBegin": 65, "originalText": ".", "ArgType": null, "before": " "}], "text": "The only complication here is that Ts can be of unbounded length ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "So", "ArgType": null, "before": ""}, {"index": 2, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 5, "segment_span": [0, 15], "characterOffsetBegin": 3, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 8, "segment_span": [0, 15], "characterOffsetBegin": 6, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 12, "segment_span": [0, 15], "characterOffsetBegin": 9, "originalText": "not", "ArgType": null, "before": " "}, {"index": 5, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 21, "segment_span": [0, 15], "characterOffsetBegin": 13, "originalText": "possible", "ArgType": "verb", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 24, "segment_span": [0, 15], "characterOffsetBegin": 22, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "have", "lemma": "have", "after": " ", "pos": "VB", "characterOffsetEnd": 29, "segment_span": [0, 15], "characterOffsetBegin": 25, "originalText": "have", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 15], "characterOffsetBegin": 30, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 15], "characterOffsetBegin": 32, "originalText": "single", "ArgType": null, "before": " "}, {"index": 10, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 15], "characterOffsetBegin": 39, "originalText": "expression", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 15], "characterOffsetBegin": 50, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 56, "segment_span": [0, 15], "characterOffsetBegin": 53, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [0, 15], "characterOffsetBegin": 57, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 14, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [0, 15], "characterOffsetBegin": 64, "originalText": "state", "ArgType": null, "before": " "}, {"index": 15, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 15], "characterOffsetBegin": 70, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 83, "segment_span": [15, 21], "characterOffsetBegin": 79, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 17, "word": "applies", "lemma": "apply", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 91, "segment_span": [15, 21], "tense": "Z", "characterOffsetBegin": 84, "originalText": "applies", "ArgType": null, "before": " "}, {"index": 18, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 94, "segment_span": [15, 21], "characterOffsetBegin": 92, "originalText": "to", "ArgType": null, "before": " "}, {"index": 19, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [15, 21], "characterOffsetBegin": 95, "originalText": "all", "ArgType": null, "before": " "}, {"index": 20, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 107, "segment_span": [15, 21], "characterOffsetBegin": 99, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 21, "word": "lenghts", "lemma": "lenght", "after": " ", "pos": "NNS", "characterOffsetEnd": 115, "segment_span": [15, 21], "characterOffsetBegin": 108, "originalText": "lenghts", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 117, "characterOffsetBegin": 116, "originalText": ".", "ArgType": null, "before": " "}], "text": "So it is not possible to have a single expression in the finite state calculus that applies to all possible lenghts ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "means", "lemma": "mean", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 10, "segment_span": [0, 2], "tense": "Z", "characterOffsetBegin": 5, "originalText": "means", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [2, 22], "characterOffsetBegin": 11, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [2, 22], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "need", "lemma": "need", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 23, "segment_span": [2, 22], "tense": "P", "characterOffsetBegin": 19, "originalText": "need", "ArgType": null, "before": " "}, {"index": 6, "word": "something", "lemma": "something", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [2, 22], "characterOffsetBegin": 24, "originalText": "something", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [2, 22], "characterOffsetBegin": 34, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "little", "lemma": "little", "after": " ", "pos": "RB", "characterOffsetEnd": 42, "segment_span": [2, 22], "characterOffsetBegin": 36, "originalText": "little", "ArgType": null, "before": " "}, {"index": 9, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 47, "segment_span": [2, 22], "characterOffsetBegin": 43, "originalText": "more", "ArgType": null, "before": " "}, {"index": 10, "word": "powerful", "lemma": "powerful", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [2, 22], "characterOffsetBegin": 48, "originalText": "powerful", "ArgType": null, "before": " "}, {"index": 11, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 61, "segment_span": [2, 22], "characterOffsetBegin": 57, "originalText": "than", "ArgType": null, "before": " "}, {"index": 12, "word": "mere", "lemma": "mere", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [2, 22], "characterOffsetBegin": 62, "originalText": "mere", "ArgType": null, "before": " "}, {"index": 13, "word": "macro", "lemma": "macro", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [2, 22], "characterOffsetBegin": 67, "originalText": "macro", "ArgType": null, "before": " "}, {"index": 14, "word": "expansion", "lemma": "expansion", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [2, 22], "characterOffsetBegin": 73, "originalText": "expansion", "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 85, "segment_span": [2, 22], "characterOffsetBegin": 83, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "construct", "lemma": "construct", "after": " ", "pos": "VB", "characterOffsetEnd": 95, "segment_span": [2, 22], "characterOffsetBegin": 86, "originalText": "construct", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 99, "segment_span": [2, 22], "characterOffsetBegin": 96, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "proper", "lemma": "proper", "after": " ", "pos": "JJ", "characterOffsetEnd": 106, "segment_span": [2, 22], "characterOffsetBegin": 100, "originalText": "proper", "ArgType": null, "before": " "}, {"index": 19, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 113, "segment_span": [2, 22], "characterOffsetBegin": 107, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 20, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [2, 22], "characterOffsetBegin": 114, "originalText": "state", "ArgType": null, "before": " "}, {"index": 21, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [2, 22], "characterOffsetBegin": 120, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 22, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [2, 22], "characterOffsetBegin": 129, "originalText": "expression", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 141, "characterOffsetBegin": 140, "originalText": ".", "ArgType": null, "before": " "}], "text": "This means that we need something a little more powerful than mere macro expansion to construct the proper finite state calculus expression ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "FSA", "lemma": "FSA", "after": " ", "pos": "NNP", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "FSA", "ArgType": null, "before": " "}, {"index": 3, "word": "Utilities", "lemma": "Utilities", "after": " ", "pos": "NNP", "characterOffsetEnd": 17, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "Utilities", "ArgType": "subj", "before": " "}, {"index": 4, "word": "provides", "lemma": "provide", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 18, "originalText": "provides", "ArgType": "verb", "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "Prolog", "lemma": "Prolog", "after": " ", "pos": "NNP", "characterOffsetEnd": 35, "segment_span": [0, 10], "characterOffsetBegin": 29, "originalText": "Prolog", "ArgType": null, "before": " "}, {"index": 7, "word": "hook", "lemma": "hook", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 36, "originalText": "hook", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 44, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [0, 10], "characterOffsetBegin": 45, "originalText": "this", "ArgType": null, "before": " "}, {"index": 10, "word": "purpose", "lemma": "purpose", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [0, 10], "characterOffsetBegin": 50, "originalText": "purpose", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 59, "characterOffsetBegin": 58, "originalText": ".", "ArgType": null, "before": " "}], "text": "The FSA Utilities provides a Prolog hook for this purpose ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 3, "word": "definition", "lemma": "definition", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "definition", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "lm_concat", "lemma": "lm_concat", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 10], "characterOffsetBegin": 28, "originalText": "lm_concat", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 38, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "given", "is_pass": true, "lemma": "give", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 46, "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 41, "originalText": "given", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [0, 10], "characterOffsetBegin": 47, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "figure", "lemma": "figure", "after": "  ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 10], "characterOffsetBegin": 50, "originalText": "figure", "ArgType": null, "before": " "}, {"index": 10, "word": "CREF", "lemma": "CREF", "after": "  ", "pos": "NNP", "characterOffsetEnd": 62, "segment_span": [0, 10], "characterOffsetBegin": 58, "originalText": "CREF", "ArgType": null, "before": "  "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 65, "characterOffsetBegin": 64, "originalText": ".", "ArgType": null, "before": "  "}], "text": "The resulting definition of lm_concat is given in figure CREF ."}, {"tokens": [{"index": 1, "word": "Suppose", "lemma": "suppose", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 7, "segment_span": [0, 24], "tense": "B", "characterOffsetBegin": 0, "originalText": "Suppose", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 9, "segment_span": [0, 24], "characterOffsetBegin": 8, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 24], "characterOffsetBegin": 10, "originalText": "as", "ArgType": null, "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 24], "characterOffsetBegin": 13, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 18, "segment_span": [0, 24], "characterOffsetBegin": 17, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 6, "word": "Friedl", "lemma": "Friedl", "after": " ", "pos": "NNP", "characterOffsetEnd": 25, "segment_span": [0, 24], "characterOffsetBegin": 19, "originalText": "Friedl", "ArgType": null, "before": " "}, {"index": 7, "word": "1997", "lemma": "1997", "after": " ", "pos": "CD", "characterOffsetEnd": 30, "segment_span": [0, 24], "characterOffsetBegin": 26, "originalText": "1997", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 32, "segment_span": [0, 24], "characterOffsetBegin": 31, "originalText": ")", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 35, "segment_span": [0, 24], "characterOffsetBegin": 34, "originalText": ")", "ArgType": null, "before": "  "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 37, "segment_span": [0, 24], "characterOffsetBegin": 36, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 40, "segment_span": [0, 24], "characterOffsetBegin": 38, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 12, "word": "want", "lemma": "want", "after": " ", "pos": "VBP", "characterOffsetEnd": 45, "segment_span": [0, 24], "characterOffsetBegin": 41, "originalText": "want", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 48, "segment_span": [0, 24], "characterOffsetBegin": 46, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "match", "lemma": "match", "after": " ", "pos": "VB", "characterOffsetEnd": 54, "segment_span": [0, 24], "characterOffsetBegin": 49, "originalText": "match", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 24], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 68, "segment_span": [0, 24], "characterOffsetBegin": 59, "originalText": "following", "ArgType": null, "before": " "}, {"index": 17, "word": "list", "lemma": "list", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 24], "characterOffsetBegin": 69, "originalText": "list", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [0, 24], "characterOffsetBegin": 74, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "recognizers", "lemma": "recognizer", "after": " ", "pos": "NNS", "characterOffsetEnd": 88, "segment_span": [0, 24], "characterOffsetBegin": 77, "originalText": "recognizers", "ArgType": null, "before": " "}, {"index": 20, "word": "against", "lemma": "against", "after": " ", "pos": "IN", "characterOffsetEnd": 96, "segment_span": [0, 24], "characterOffsetBegin": 89, "originalText": "against", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [0, 24], "characterOffsetBegin": 97, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [0, 24], "characterOffsetBegin": 101, "originalText": "string", "ArgType": null, "before": " "}, {"index": 23, "word": "topological", "lemma": "topological", "after": " ", "pos": "JJ", "characterOffsetEnd": 119, "segment_span": [0, 24], "characterOffsetBegin": 108, "originalText": "topological", "ArgType": null, "before": " "}, {"index": 24, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 123, "segment_span": [0, 24], "characterOffsetBegin": 120, "originalText": "and", "ArgType": null, "before": " "}, {"index": 25, "word": "insert", "lemma": "insert", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 130, "segment_span": [24, 31], "tense": "B", "characterOffsetBegin": 124, "originalText": "insert", "ArgType": null, "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 132, "segment_span": [24, 31], "characterOffsetBegin": 131, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "marker", "lemma": "marker", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [24, 31], "characterOffsetBegin": 133, "originalText": "marker", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 142, "segment_span": [24, 31], "characterOffsetBegin": 140, "originalText": "in", "ArgType": null, "before": " "}, {"index": 29, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 147, "segment_span": [24, 31], "characterOffsetBegin": 143, "originalText": "each", "ArgType": null, "before": " "}, {"index": 30, "word": "boundary", "lemma": "boundary", "after": " ", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [24, 31], "characterOffsetBegin": 148, "originalText": "boundary", "ArgType": null, "before": " "}, {"index": 31, "word": "position", "lemma": "position", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [24, 31], "characterOffsetBegin": 157, "originalText": "position", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 167, "characterOffsetBegin": 166, "originalText": ".", "ArgType": null, "before": " "}], "text": "Suppose ( as in ( Friedl 1997 ) ) , we want to match the following list of recognizers against the string topological and insert a marker in each boundary position ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "reduces", "lemma": "reduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 12, "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 5, "originalText": "reduces", "ArgType": "verb", "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 15, "segment_span": [0, 4], "characterOffsetBegin": 13, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "applying", "lemma": "apply", "after": " ", "pos": "VBG", "characterOffsetEnd": 24, "segment_span": [0, 4], "characterOffsetBegin": 16, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 5, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 26, "characterOffsetBegin": 25, "originalText": ":", "ArgType": null, "before": " "}], "text": "This reduces to applying :"}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "expression", "lemma": "expression", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 15], "characterOffsetBegin": 5, "originalText": "expression", "ArgType": "subj", "before": " "}, {"index": 3, "word": "transduces", "lemma": "transduce", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 26, "segment_span": [0, 15], "tense": "Z", "characterOffsetBegin": 16, "originalText": "transduces", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 15], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 15], "characterOffsetBegin": 31, "originalText": "string", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "topological", "lemma": "topological", "after": " ", "pos": "JJ", "characterOffsetEnd": 49, "segment_span": [0, 15], "characterOffsetBegin": 38, "originalText": "topological", "ArgType": null, "before": " "}, {"index": 7, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 54, "segment_span": [0, 15], "characterOffsetBegin": 50, "originalText": "only", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 57, "segment_span": [0, 15], "characterOffsetBegin": 55, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 61, "segment_span": [0, 15], "characterOffsetBegin": 58, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 15], "characterOffsetBegin": 62, "originalText": "string", "ArgType": null, "before": " "}, {"index": 11, "word": "top", "lemma": "top", "after": " ", "pos": "JJ", "characterOffsetEnd": 72, "segment_span": [0, 15], "characterOffsetBegin": 69, "originalText": "top", "ArgType": null, "before": " "}, {"index": 12, "word": "equation", "lemma": "equation", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 15], "characterOffsetBegin": 73, "originalText": "equation", "ArgType": null, "before": " "}, {"index": 13, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 83, "segment_span": [0, 15], "characterOffsetBegin": 82, "originalText": "o", "ArgType": null, "before": " "}, {"index": 14, "word": "equation", "lemma": "equation", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 15], "characterOffsetBegin": 84, "originalText": "equation", "ArgType": null, "before": " "}, {"index": 15, "word": "logical", "lemma": "logical", "after": " ", "pos": "JJ", "characterOffsetEnd": 100, "segment_span": [0, 15], "characterOffsetBegin": 93, "originalText": "logical", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 102, "characterOffsetBegin": 101, "originalText": ".", "ArgType": null, "before": " "}], "text": "This expression transduces the string topological only to the string top equation o equation logical ."}]}], "title": "Longest Match Capturing"}, {"num": 3, "subsections": [{"title": "", "num": 0, "sentences": [{"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 8], "characterOffsetBegin": 4, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 3, "word": "presented", "lemma": "present", "after": " ", "pos": "VBN", "characterOffsetEnd": 23, "segment_span": [0, 8], "characterOffsetBegin": 14, "originalText": "presented", "ArgType": null, "before": " "}, {"index": 4, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 28, "segment_span": [0, 8], "characterOffsetBegin": 24, "originalText": "here", "ArgType": null, "before": " "}, {"index": 5, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 29, "originalText": "has", "ArgType": null, "before": " "}, {"index": 6, "word": "extended", "lemma": "extend", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 41, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 33, "originalText": "extended", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 50, "segment_span": [0, 8], "characterOffsetBegin": 42, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 8, "word": "algorithms", "lemma": "algorithm", "after": " ", "pos": "NNS", "characterOffsetEnd": 61, "segment_span": [0, 8], "characterOffsetBegin": 51, "originalText": "algorithms", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [8, 11], "characterOffsetBegin": 62, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 73, "segment_span": [8, 11], "tense": "P", "characterOffsetBegin": 66, "originalText": "rewrite", "ArgType": null, "before": " "}, {"index": 11, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 79, "segment_span": [8, 11], "characterOffsetBegin": 74, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [11, 18], "characterOffsetBegin": 80, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "adding", "lemma": "add", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 89, "segment_span": [11, 18], "tense": "G", "characterOffsetBegin": 83, "originalText": "adding", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 91, "segment_span": [11, 18], "characterOffsetBegin": 90, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "limited", "lemma": "limited", "after": " ", "pos": "JJ", "characterOffsetEnd": 99, "segment_span": [11, 18], "characterOffsetBegin": 92, "originalText": "limited", "ArgType": null, "before": " "}, {"index": 16, "word": "version", "lemma": "version", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [11, 18], "characterOffsetBegin": 100, "originalText": "version", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [11, 18], "characterOffsetBegin": 108, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "backreferencing", "lemma": "backreferencing", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [11, 18], "characterOffsetBegin": 111, "originalText": "backreferencing", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 128, "characterOffsetBegin": 127, "originalText": ".", "ArgType": null, "before": " "}], "text": "The algorithm presented here has extended previous algorithms for rewrite rules by adding a limited version of backreferencing ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 15], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "allows", "lemma": "allow", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 11, "segment_span": [0, 15], "tense": "Z", "characterOffsetBegin": 5, "originalText": "allows", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 15], "characterOffsetBegin": 12, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 15], "characterOffsetBegin": 16, "originalText": "output", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 25, "segment_span": [0, 15], "characterOffsetBegin": 23, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "rewriting", "lemma": "rewrite", "after": " ", "pos": "VBG", "characterOffsetEnd": 35, "segment_span": [0, 15], "characterOffsetBegin": 26, "originalText": "rewriting", "ArgType": null, "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 38, "segment_span": [0, 15], "characterOffsetBegin": 36, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 41, "segment_span": [0, 15], "characterOffsetBegin": 39, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "dependent", "lemma": "dependent", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 15], "characterOffsetBegin": 42, "originalText": "dependent", "ArgType": null, "before": " "}, {"index": 10, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 15], "characterOffsetBegin": 52, "originalText": "on", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 15], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 15], "characterOffsetBegin": 59, "originalText": "form", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 15], "characterOffsetBegin": 64, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [0, 15], "characterOffsetBegin": 67, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 78, "segment_span": [0, 15], "characterOffsetBegin": 71, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 16, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 84, "segment_span": [15, 18], "characterOffsetBegin": 79, "originalText": "which", "ArgType": null, "before": " "}, {"index": 17, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 88, "segment_span": [15, 18], "characterOffsetBegin": 85, "originalText": "are", "ArgType": null, "before": " "}, {"index": 18, "word": "rewritten", "is_pass": true, "lemma": "rewrite", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 98, "segment_span": [15, 18], "tense": "N", "characterOffsetBegin": 89, "originalText": "rewritten", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 100, "characterOffsetBegin": 99, "originalText": ".", "ArgType": null, "before": " "}], "text": "This allows the output of rewriting to be dependent on the form of the strings which are rewritten ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 16], "characterOffsetBegin": 5, "originalText": "new", "ArgType": null, "before": " "}, {"index": 3, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 16], "characterOffsetBegin": 9, "originalText": "feature", "ArgType": "subj", "before": " "}, {"index": 4, "word": "brings", "lemma": "bring", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 23, "segment_span": [0, 16], "tense": "Z", "characterOffsetBegin": 17, "originalText": "brings", "ArgType": "verb", "before": " "}, {"index": 5, "word": "techniques", "lemma": "technique", "after": " ", "pos": "NNS", "characterOffsetEnd": 34, "segment_span": [0, 16], "characterOffsetBegin": 24, "originalText": "techniques", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 39, "segment_span": [0, 16], "characterOffsetBegin": 35, "originalText": "used", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 16], "characterOffsetBegin": 40, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "Perl", "lemma": "Perl", "after": " ", "pos": "NNP", "characterOffsetEnd": 47, "segment_span": [0, 16], "characterOffsetBegin": 43, "originalText": "Perl", "ArgType": null, "before": " "}, {"index": 9, "word": "-", "lemma": "-", "after": " ", "pos": ":", "characterOffsetEnd": 49, "segment_span": [0, 16], "characterOffsetBegin": 48, "originalText": "-", "ArgType": null, "before": " "}, {"index": 10, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 16], "characterOffsetBegin": 50, "originalText": "like", "ArgType": null, "before": " "}, {"index": 11, "word": "languages", "lemma": "language", "after": " ", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 16], "characterOffsetBegin": 55, "originalText": "languages", "ArgType": null, "before": " "}, {"index": 12, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [0, 16], "characterOffsetBegin": 65, "originalText": "into", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 73, "segment_span": [0, 16], "characterOffsetBegin": 70, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 80, "segment_span": [0, 16], "characterOffsetBegin": 74, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 15, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 16], "characterOffsetBegin": 81, "originalText": "state", "ArgType": null, "before": " "}, {"index": 16, "word": "calculus", "lemma": "calculus", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [0, 16], "characterOffsetBegin": 87, "originalText": "calculus", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 97, "characterOffsetBegin": 96, "originalText": ".", "ArgType": null, "before": " "}], "text": "This new feature brings techniques used in Perl - like languages into the finite state calculus ."}, {"tokens": [{"index": 1, "word": "Such", "lemma": "such", "after": " ", "pos": "PDT", "characterOffsetEnd": 4, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "Such", "ArgType": null, "before": ""}, {"index": 2, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 8], "characterOffsetBegin": 5, "originalText": "an", "ArgType": null, "before": " "}, {"index": 3, "word": "integration", "lemma": "integration", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 8], "characterOffsetBegin": 8, "originalText": "integration", "ArgType": null, "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 20, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "needed", "is_pass": true, "lemma": "need", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 29, "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 23, "originalText": "needed", "ArgType": null, "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 30, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "practical", "lemma": "practical", "after": " ", "pos": "JJ", "characterOffsetEnd": 42, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": "practical", "ArgType": null, "before": " "}, {"index": 8, "word": "applications", "lemma": "application", "after": " ", "pos": "NNS", "characterOffsetEnd": 55, "segment_span": [0, 8], "characterOffsetBegin": 43, "originalText": "applications", "ArgType": null, "before": " "}, {"index": 9, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 61, "segment_span": [8, 22], "characterOffsetBegin": 56, "originalText": "where", "ArgType": null, "before": " "}, {"index": 10, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 68, "segment_span": [8, 22], "characterOffsetBegin": 62, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 11, "word": "text", "lemma": "text", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [8, 22], "characterOffsetBegin": 69, "originalText": "text", "ArgType": null, "before": " "}, {"index": 12, "word": "processing", "lemma": "processing", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [8, 22], "characterOffsetBegin": 74, "originalText": "processing", "ArgType": "subj", "before": " "}, {"index": 13, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 90, "segment_span": [8, 22], "tense": "Z", "characterOffsetBegin": 85, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 93, "segment_span": [8, 22], "characterOffsetBegin": 91, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 96, "segment_span": [8, 22], "characterOffsetBegin": 94, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "combined", "lemma": "combine", "after": " ", "pos": "VBN", "characterOffsetEnd": 105, "segment_span": [8, 22], "characterOffsetBegin": 97, "originalText": "combined", "ArgType": null, "before": " "}, {"index": 17, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [8, 22], "characterOffsetBegin": 106, "originalText": "with", "ArgType": null, "before": " "}, {"index": 18, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 115, "segment_span": [8, 22], "characterOffsetBegin": 111, "originalText": "more", "ArgType": null, "before": " "}, {"index": 19, "word": "sophisticated", "lemma": "sophisticated", "after": " ", "pos": "JJ", "characterOffsetEnd": 129, "segment_span": [8, 22], "characterOffsetBegin": 116, "originalText": "sophisticated", "ArgType": null, "before": " "}, {"index": 20, "word": "computational", "lemma": "computational", "after": " ", "pos": "JJ", "characterOffsetEnd": 143, "segment_span": [8, 22], "characterOffsetBegin": 130, "originalText": "computational", "ArgType": null, "before": " "}, {"index": 21, "word": "linguistics", "lemma": "linguistics", "after": " ", "pos": "NNS", "characterOffsetEnd": 155, "segment_span": [8, 22], "characterOffsetBegin": 144, "originalText": "linguistics", "ArgType": null, "before": " "}, {"index": 22, "word": "techniques", "lemma": "technique", "after": " ", "pos": "NNS", "characterOffsetEnd": 166, "segment_span": [8, 22], "characterOffsetBegin": 156, "originalText": "techniques", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 168, "characterOffsetBegin": 167, "originalText": ".", "ArgType": null, "before": " "}], "text": "Such an integration is needed in practical applications where simple text processing needs to be combined with more sophisticated computational linguistics techniques ."}, {"tokens": [{"index": 1, "word": "One", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 3, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "One", "ArgType": null, "before": ""}, {"index": 2, "word": "particularly", "lemma": "particularly", "after": " ", "pos": "RB", "characterOffsetEnd": 16, "segment_span": [0, 4], "characterOffsetBegin": 4, "originalText": "particularly", "ArgType": null, "before": " "}, {"index": 3, "word": "interesting", "lemma": "interesting", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 4], "characterOffsetBegin": 17, "originalText": "interesting", "ArgType": null, "before": " "}, {"index": 4, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 4], "characterOffsetBegin": 29, "originalText": "example", "ArgType": null, "before": " "}, {"index": 5, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 42, "segment_span": [4, 41], "characterOffsetBegin": 37, "originalText": "where", "ArgType": null, "before": " "}, {"index": 6, "word": "backreferences", "lemma": "backreference", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [4, 41], "characterOffsetBegin": 43, "originalText": "backreferences", "ArgType": "subj", "before": " "}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 61, "segment_span": [4, 41], "characterOffsetBegin": 58, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "essential", "lemma": "essential", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [4, 41], "characterOffsetBegin": 62, "originalText": "essential", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 74, "segment_span": [4, 41], "characterOffsetBegin": 72, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "cascaded", "lemma": "cascade", "after": " ", "pos": "VBN", "characterOffsetEnd": 83, "segment_span": [4, 41], "characterOffsetBegin": 75, "originalText": "cascaded", "ArgType": null, "before": " "}, {"index": 11, "word": "deterministic", "lemma": "deterministic", "after": " ", "pos": "JJ", "characterOffsetEnd": 97, "segment_span": [4, 41], "characterOffsetBegin": 84, "originalText": "deterministic", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 99, "segment_span": [4, 41], "characterOffsetBegin": 98, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "longest", "lemma": "longest", "after": " ", "pos": "JJS", "characterOffsetEnd": 107, "segment_span": [4, 41], "characterOffsetBegin": 100, "originalText": "longest", "ArgType": null, "before": " "}, {"index": 14, "word": "match", "lemma": "match", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [4, 41], "characterOffsetBegin": 108, "originalText": "match", "ArgType": null, "before": " "}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 115, "segment_span": [4, 41], "characterOffsetBegin": 114, "originalText": ")", "ArgType": null, "before": " "}, {"index": 16, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 122, "segment_span": [4, 41], "characterOffsetBegin": 116, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 17, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [4, 41], "characterOffsetBegin": 123, "originalText": "state", "ArgType": null, "before": " "}, {"index": 18, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [4, 41], "characterOffsetBegin": 129, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 19, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [4, 41], "characterOffsetBegin": 137, "originalText": "as", "ArgType": null, "before": " "}, {"index": 20, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 149, "segment_span": [4, 41], "characterOffsetBegin": 140, "originalText": "described", "ArgType": null, "before": " "}, {"index": 21, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 153, "segment_span": [4, 41], "characterOffsetBegin": 150, "originalText": "for", "ArgType": null, "before": " "}, {"index": 22, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [4, 41], "characterOffsetBegin": 154, "originalText": "example", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 164, "segment_span": [4, 41], "characterOffsetBegin": 162, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "Abney", "lemma": "Abney", "after": " ", "pos": "NNP", "characterOffsetEnd": 171, "segment_span": [4, 41], "characterOffsetBegin": 166, "originalText": "Abney", "ArgType": null, "before": "  "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 173, "segment_span": [4, 41], "characterOffsetBegin": 172, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "0000", "lemma": "0000", "after": "", "pos": "CD", "characterOffsetEnd": 177, "segment_span": [4, 41], "characterOffsetBegin": 173, "originalText": "0000", "ArgType": null, "before": ""}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": "   ", "pos": "-RRB-", "characterOffsetEnd": 178, "segment_span": [4, 41], "characterOffsetBegin": 177, "originalText": ")", "ArgType": null, "before": ""}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 182, "segment_span": [4, 41], "characterOffsetBegin": 181, "originalText": "(", "ArgType": null, "before": "   "}, {"index": 29, "word": "Abney", "lemma": "Abney", "after": " ", "pos": "NNP", "characterOffsetEnd": 188, "segment_span": [4, 41], "characterOffsetBegin": 183, "originalText": "Abney", "ArgType": null, "before": " "}, {"index": 30, "word": "1990", "lemma": "1990", "after": " ", "pos": "CD", "characterOffsetEnd": 193, "segment_span": [4, 41], "characterOffsetBegin": 189, "originalText": "1990", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 195, "segment_span": [4, 41], "characterOffsetBegin": 194, "originalText": ")", "ArgType": null, "before": " "}, {"index": 32, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 200, "segment_span": [4, 41], "characterOffsetBegin": 197, "originalText": "and", "ArgType": null, "before": "  "}, {"index": 33, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 208, "segment_span": [4, 41], "characterOffsetBegin": 201, "originalText": "various", "ArgType": null, "before": " "}, {"index": 34, "word": "papers", "lemma": "papers", "after": " ", "pos": "NNS", "characterOffsetEnd": 215, "segment_span": [4, 41], "characterOffsetBegin": 209, "originalText": "papers", "ArgType": null, "before": " "}, {"index": 35, "word": "in", "lemma": "in", "after": "  ", "pos": "IN", "characterOffsetEnd": 218, "segment_span": [4, 41], "characterOffsetBegin": 216, "originalText": "in", "ArgType": null, "before": " "}, {"index": 36, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 221, "segment_span": [4, 41], "characterOffsetBegin": 220, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 37, "word": "Roche", "lemma": "Roche", "after": " ", "pos": "NNP", "characterOffsetEnd": 227, "segment_span": [4, 41], "characterOffsetBegin": 222, "originalText": "Roche", "ArgType": null, "before": " "}, {"index": 38, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 231, "segment_span": [4, 41], "characterOffsetBegin": 228, "originalText": "and", "ArgType": null, "before": " "}, {"index": 39, "word": "Schabes", "lemma": "Schabes", "after": " ", "pos": "NNP", "characterOffsetEnd": 239, "segment_span": [4, 41], "characterOffsetBegin": 232, "originalText": "Schabes", "ArgType": null, "before": " "}, {"index": 40, "word": "1997a", "lemma": "1997a", "after": " ", "pos": "NN", "characterOffsetEnd": 245, "segment_span": [4, 41], "characterOffsetBegin": 240, "originalText": "1997a", "ArgType": null, "before": " "}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 247, "segment_span": [4, 41], "characterOffsetBegin": 246, "originalText": ")", "ArgType": null, "before": " "}, {"index": 42, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 250, "characterOffsetBegin": 249, "originalText": ".", "ArgType": null, "before": "  "}], "text": "One particularly interesting example where backreferences are essential is cascaded deterministic ( longest match ) finite state parsing as described for example in Abney ( 0000 ) ( Abney 1990 ) and various papers in ( Roche and Schabes 1997a ) ."}, {"tokens": [{"index": 1, "word": "Clearly", "lemma": "clearly", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "Clearly", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 12], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 12], "characterOffsetBegin": 10, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "standard", "lemma": "standard", "after": " ", "pos": "NN", "characterOffsetEnd": 22, "segment_span": [0, 12], "characterOffsetBegin": 14, "originalText": "standard", "ArgType": "subj", "before": " "}, {"index": 5, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VB", "characterOffsetEnd": 30, "segment_span": [0, 12], "characterOffsetBegin": 23, "originalText": "rewrite", "ArgType": null, "before": " "}, {"index": 6, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [0, 12], "characterOffsetBegin": 31, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 39, "segment_span": [0, 12], "characterOffsetBegin": 37, "originalText": "do", "ArgType": null, "before": " "}, {"index": 8, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [0, 12], "characterOffsetBegin": 40, "originalText": "not", "ArgType": null, "before": " "}, {"index": 9, "word": "apply", "lemma": "apply", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 49, "segment_span": [0, 12], "tense": "B", "characterOffsetBegin": 44, "originalText": "apply", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 12], "characterOffsetBegin": 50, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 53, "originalText": "this", "ArgType": null, "before": " "}, {"index": 12, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [0, 12], "characterOffsetBegin": 58, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 66, "characterOffsetBegin": 65, "originalText": ".", "ArgType": null, "before": " "}], "text": "Clearly , the standard rewrite rules do not apply in this domain ."}, {"tokens": [{"index": 1, "word": "If", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "If", "ArgType": null, "before": ""}, {"index": 2, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 5, "segment_span": [0, 6], "characterOffsetBegin": 3, "originalText": "NP", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 8, "segment_span": [0, 6], "characterOffsetBegin": 6, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 6], "characterOffsetBegin": 9, "originalText": "an", "ArgType": null, "before": " "}, {"index": 5, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 6], "characterOffsetBegin": 12, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 6, "word": "recognizer", "lemma": "recognizer", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 6], "characterOffsetBegin": 15, "originalText": "recognizer", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 27, "segment_span": [6, 17], "characterOffsetBegin": 26, "originalText": ",", "ArgType": null, "before": " "}, {"index": 8, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 30, "segment_span": [6, 17], "characterOffsetBegin": 28, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 9, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 36, "segment_span": [6, 17], "characterOffsetBegin": 31, "originalText": "would", "ArgType": null, "before": " "}, {"index": 10, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 40, "segment_span": [6, 17], "characterOffsetBegin": 37, "originalText": "not", "ArgType": null, "before": " "}, {"index": 11, "word": "do", "lemma": "do", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 43, "segment_span": [6, 17], "tense": "B", "characterOffsetBegin": 41, "originalText": "do", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 46, "segment_span": [6, 17], "characterOffsetBegin": 44, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "say", "lemma": "say", "after": " ", "pos": "VB", "characterOffsetEnd": 50, "segment_span": [6, 17], "characterOffsetBegin": 47, "originalText": "say", "ArgType": null, "before": " "}, {"index": 14, "word": "NP", "lemma": "np", "after": "  ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [6, 17], "characterOffsetBegin": 51, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 15, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [6, 17], "characterOffsetBegin": 55, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 16, "word": "NP", "lemma": "np", "after": "  ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [6, 17], "characterOffsetBegin": 65, "originalText": "NP", "ArgType": null, "before": "  "}, {"index": 17, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [6, 17], "characterOffsetBegin": 69, "originalText": "equation", "ArgType": "dobj", "before": "  "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 80, "characterOffsetBegin": 79, "originalText": ".", "ArgType": null, "before": "  "}], "text": "If NP is an NP recognizer , it would not do to say NP equation NP equation ."}, {"tokens": [{"index": 1, "word": "Nothing", "lemma": "nothing", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 32], "characterOffsetBegin": 0, "originalText": "Nothing", "ArgType": "subj", "before": ""}, {"index": 2, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 13, "segment_span": [0, 32], "characterOffsetBegin": 8, "originalText": "would", "ArgType": null, "before": " "}, {"index": 3, "word": "force", "lemma": "force", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 19, "segment_span": [0, 32], "tense": "B", "characterOffsetBegin": 14, "originalText": "force", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [0, 32], "characterOffsetBegin": 20, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 32], "characterOffsetBegin": 24, "originalText": "string", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "matched", "lemma": "match", "after": " ", "pos": "VBN", "characterOffsetEnd": 38, "segment_span": [0, 32], "characterOffsetBegin": 31, "originalText": "matched", "ArgType": null, "before": " "}, {"index": 7, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 41, "segment_span": [0, 32], "characterOffsetBegin": 39, "originalText": "by", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [0, 32], "characterOffsetBegin": 42, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 32], "characterOffsetBegin": 46, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 51, "segment_span": [0, 32], "characterOffsetBegin": 49, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [0, 32], "characterOffsetBegin": 52, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "left", "lemma": "left", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 32], "characterOffsetBegin": 56, "originalText": "left", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 32], "characterOffsetBegin": 61, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 67, "segment_span": [0, 32], "characterOffsetBegin": 64, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "arrow", "lemma": "arrow", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 32], "characterOffsetBegin": 68, "originalText": "arrow", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 76, "segment_span": [0, 32], "characterOffsetBegin": 74, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 79, "segment_span": [0, 32], "characterOffsetBegin": 77, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 83, "segment_span": [0, 32], "characterOffsetBegin": 80, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 88, "segment_span": [0, 32], "characterOffsetBegin": 84, "originalText": "same", "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [0, 32], "characterOffsetBegin": 89, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 95, "segment_span": [0, 32], "characterOffsetBegin": 92, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [0, 32], "characterOffsetBegin": 96, "originalText": "string", "ArgType": null, "before": " "}, {"index": 23, "word": "matched", "lemma": "match", "after": " ", "pos": "VBN", "characterOffsetEnd": 110, "segment_span": [0, 32], "characterOffsetBegin": 103, "originalText": "matched", "ArgType": null, "before": " "}, {"index": 24, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 113, "segment_span": [0, 32], "characterOffsetBegin": 111, "originalText": "by", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 117, "segment_span": [0, 32], "characterOffsetBegin": 114, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [0, 32], "characterOffsetBegin": 118, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 27, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 123, "segment_span": [0, 32], "characterOffsetBegin": 121, "originalText": "to", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 127, "segment_span": [0, 32], "characterOffsetBegin": 124, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "right", "lemma": "right", "after": " ", "pos": "NN", "characterOffsetEnd": 133, "segment_span": [0, 32], "characterOffsetBegin": 128, "originalText": "right", "ArgType": null, "before": " "}, {"index": 30, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 136, "segment_span": [0, 32], "characterOffsetBegin": 134, "originalText": "of", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 140, "segment_span": [0, 32], "characterOffsetBegin": 137, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "arrow", "lemma": "arrow", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [0, 32], "characterOffsetBegin": 141, "originalText": "arrow", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 148, "characterOffsetBegin": 147, "originalText": ".", "ArgType": null, "before": " "}], "text": "Nothing would force the string matched by the NP to the left of the arrow to be the same as the string matched by the NP to the right of the arrow ."}, {"tokens": [{"index": 1, "word": "One", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "One", "ArgType": null, "before": ""}, {"index": 2, "word": "advantage", "lemma": "advantage", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "advantage", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 11], "characterOffsetBegin": 14, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 17, "originalText": "using", "ArgType": null, "before": " "}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 26, "segment_span": [0, 11], "characterOffsetBegin": 23, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 27, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 37, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 47, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 9, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 11], "characterOffsetBegin": 48, "originalText": "state", "ArgType": null, "before": " "}, {"index": 10, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 11], "characterOffsetBegin": 54, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 64, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 62, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 12, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [11, 25], "characterOffsetBegin": 65, "originalText": "that", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 73, "segment_span": [11, 25], "characterOffsetBegin": 70, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "left", "lemma": "left", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [11, 25], "characterOffsetBegin": 74, "originalText": "left", "ArgType": null, "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 82, "segment_span": [11, 25], "characterOffsetBegin": 79, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "right", "lemma": "right", "after": " ", "pos": "JJ", "characterOffsetEnd": 88, "segment_span": [11, 25], "characterOffsetBegin": 83, "originalText": "right", "ArgType": null, "before": " "}, {"index": 17, "word": "contexts", "lemma": "context", "after": " ", "pos": "NNS", "characterOffsetEnd": 97, "segment_span": [11, 25], "characterOffsetBegin": 89, "originalText": "contexts", "ArgType": null, "before": " "}, {"index": 18, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 101, "segment_span": [11, 25], "characterOffsetBegin": 98, "originalText": "may", "ArgType": null, "before": " "}, {"index": 19, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 104, "segment_span": [11, 25], "characterOffsetBegin": 102, "originalText": "be", "ArgType": null, "before": " "}, {"index": 20, "word": "used", "is_pass": true, "lemma": "use", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 109, "segment_span": [11, 25], "tense": "N", "characterOffsetBegin": 105, "originalText": "used", "has_aux": true, "ArgType": null, "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 112, "segment_span": [11, 25], "characterOffsetBegin": 110, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "bring", "lemma": "bring", "after": " ", "pos": "VB", "characterOffsetEnd": 118, "segment_span": [11, 25], "characterOffsetBegin": 113, "originalText": "bring", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "RP", "characterOffsetEnd": 121, "segment_span": [11, 25], "characterOffsetBegin": 119, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "top-down", "lemma": "top-down", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [11, 25], "characterOffsetBegin": 122, "originalText": "top-down", "ArgType": null, "before": " "}, {"index": 25, "word": "filtering", "lemma": "filter", "after": " ", "pos": "VBG", "characterOffsetEnd": 140, "segment_span": [11, 25], "characterOffsetBegin": 131, "originalText": "filtering", "ArgType": "dobj", "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 142, "characterOffsetBegin": 141, "originalText": ".", "ArgType": null, "before": " "}], "text": "One advantage of using our algorithm for finite state parsing is that the left and right contexts may be used to bring in top-down filtering ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "An", "ArgType": null, "before": ""}, {"index": 2, "word": "often", "lemma": "often", "after": " ", "pos": "RB", "characterOffsetEnd": 8, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "often", "ArgType": null, "before": " "}, {"index": 3, "word": "cited", "lemma": "cite", "after": " ", "pos": "VBN", "characterOffsetEnd": 14, "segment_span": [0, 10], "characterOffsetBegin": 9, "originalText": "cited", "ArgType": null, "before": " "}, {"index": 4, "word": "advantage", "lemma": "advantage", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 15, "originalText": "advantage", "ArgType": "subj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 27, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 34, "segment_span": [0, 10], "characterOffsetBegin": 28, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 7, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "state", "ArgType": null, "before": " "}, {"index": 8, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 51, "segment_span": [0, 10], "characterOffsetBegin": 49, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "robustness", "lemma": "robustness", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [0, 10], "characterOffsetBegin": 52, "originalText": "robustness", "ArgType": "verb", "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 64, "characterOffsetBegin": 63, "originalText": ".", "ArgType": null, "before": " "}], "text": "An often cited advantage of finite state parsing is robustness ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 13], "characterOffsetBegin": 2, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 16, "segment_span": [0, 13], "characterOffsetBegin": 14, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "found", "is_pass": true, "lemma": "find", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 22, "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 17, "originalText": "found", "ArgType": null, "before": " "}, {"index": 5, "word": "bottom", "lemma": "bottom", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 13], "characterOffsetBegin": 23, "originalText": "bottom", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "up", "lemma": "up", "after": " ", "pos": "RB", "characterOffsetEnd": 32, "segment_span": [0, 13], "characterOffsetBegin": 30, "originalText": "up", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 35, "segment_span": [0, 13], "characterOffsetBegin": 33, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 38, "segment_span": [0, 13], "characterOffsetBegin": 36, "originalText": "an", "ArgType": null, "before": " "}, {"index": 9, "word": "early", "lemma": "early", "after": " ", "pos": "JJ", "characterOffsetEnd": 44, "segment_span": [0, 13], "characterOffsetBegin": 39, "originalText": "early", "ArgType": null, "before": " "}, {"index": 10, "word": "level", "lemma": "level", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 13], "characterOffsetBegin": 45, "originalText": "level", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [0, 13], "characterOffsetBegin": 51, "originalText": "in", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 57, "segment_span": [0, 13], "characterOffsetBegin": 54, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "cascade", "lemma": "cascade", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 13], "characterOffsetBegin": 58, "originalText": "cascade", "ArgType": null, "before": " "}, {"index": 14, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 70, "segment_span": [13, 31], "characterOffsetBegin": 66, "originalText": "even", "ArgType": null, "before": " "}, {"index": 15, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [13, 31], "characterOffsetBegin": 71, "originalText": "if", "ArgType": null, "before": " "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 78, "segment_span": [13, 31], "characterOffsetBegin": 74, "originalText": "that", "ArgType": null, "before": " "}, {"index": 17, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [13, 31], "characterOffsetBegin": 79, "originalText": "constituent", "ArgType": "subj", "before": " "}, {"index": 18, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 95, "segment_span": [13, 31], "characterOffsetBegin": 91, "originalText": "does", "ArgType": null, "before": " "}, {"index": 19, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 99, "segment_span": [13, 31], "characterOffsetBegin": 96, "originalText": "not", "ArgType": null, "before": " "}, {"index": 20, "word": "ultimately", "lemma": "ultimately", "after": " ", "pos": "RB", "characterOffsetEnd": 110, "segment_span": [13, 31], "characterOffsetBegin": 100, "originalText": "ultimately", "ArgType": null, "before": " "}, {"index": 21, "word": "contribute", "lemma": "contribute", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 121, "segment_span": [13, 31], "tense": "B", "characterOffsetBegin": 111, "originalText": "contribute", "has_aux": true, "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 124, "segment_span": [13, 31], "characterOffsetBegin": 122, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 127, "segment_span": [13, 31], "characterOffsetBegin": 125, "originalText": "an", "ArgType": null, "before": " "}, {"index": 24, "word": "S", "lemma": "s", "after": " ", "pos": "NN", "characterOffsetEnd": 129, "segment_span": [13, 31], "characterOffsetBegin": 128, "originalText": "S", "ArgType": null, "before": " "}, {"index": 25, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 132, "segment_span": [13, 31], "characterOffsetBegin": 130, "originalText": "in", "ArgType": null, "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 134, "segment_span": [13, 31], "characterOffsetBegin": 133, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "later", "lemma": "later", "after": " ", "pos": "JJ", "characterOffsetEnd": 140, "segment_span": [13, 31], "characterOffsetBegin": 135, "originalText": "later", "ArgType": null, "before": " "}, {"index": 28, "word": "level", "lemma": "level", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [13, 31], "characterOffsetBegin": 141, "originalText": "level", "ArgType": null, "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 149, "segment_span": [13, 31], "characterOffsetBegin": 147, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 153, "segment_span": [13, 31], "characterOffsetBegin": 150, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "cascade", "lemma": "cascade", "after": " ", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [13, 31], "characterOffsetBegin": 154, "originalText": "cascade", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 163, "characterOffsetBegin": 162, "originalText": ".", "ArgType": null, "before": " "}], "text": "A constituent is found bottom up in an early level in the cascade even if that constituent does not ultimately contribute to an S in a later level of the cascade ."}, {"tokens": [{"index": 1, "word": "While", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 5, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "While", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 9], "characterOffsetBegin": 6, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 13, "segment_span": [0, 9], "characterOffsetBegin": 11, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "undoubtedly", "lemma": "undoubtedly", "after": " ", "pos": "RB", "characterOffsetEnd": 25, "segment_span": [0, 9], "characterOffsetBegin": 14, "originalText": "undoubtedly", "ArgType": null, "before": " "}, {"index": 5, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 28, "segment_span": [0, 9], "characterOffsetBegin": 26, "originalText": "an", "ArgType": null, "before": " "}, {"index": 6, "word": "advantage", "lemma": "advantage", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 29, "originalText": "advantage", "ArgType": null, "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "certain", "lemma": "certain", "after": " ", "pos": "JJ", "characterOffsetEnd": 50, "segment_span": [0, 9], "characterOffsetBegin": 43, "originalText": "certain", "ArgType": null, "before": " "}, {"index": 9, "word": "applications", "lemma": "application", "after": " ", "pos": "NNS", "characterOffsetEnd": 63, "segment_span": [0, 9], "characterOffsetBegin": 51, "originalText": "applications", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 65, "segment_span": [9, 20], "characterOffsetBegin": 64, "originalText": ",", "ArgType": null, "before": " "}, {"index": 11, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 69, "segment_span": [9, 20], "characterOffsetBegin": 66, "originalText": "our", "ArgType": null, "before": " "}, {"index": 12, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [9, 20], "characterOffsetBegin": 70, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 13, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 84, "segment_span": [9, 20], "characterOffsetBegin": 79, "originalText": "would", "ArgType": null, "before": " "}, {"index": 14, "word": "allow", "lemma": "allow", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 90, "segment_span": [9, 20], "tense": "B", "characterOffsetBegin": 85, "originalText": "allow", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 94, "segment_span": [9, 20], "characterOffsetBegin": 91, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "introduction", "lemma": "introduction", "after": " ", "pos": "NN", "characterOffsetEnd": 107, "segment_span": [9, 20], "characterOffsetBegin": 95, "originalText": "introduction", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [9, 20], "characterOffsetBegin": 108, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 115, "segment_span": [9, 20], "characterOffsetBegin": 111, "originalText": "some", "ArgType": null, "before": " "}, {"index": 19, "word": "top-down", "lemma": "top-down", "after": " ", "pos": "JJ", "characterOffsetEnd": 124, "segment_span": [9, 20], "characterOffsetBegin": 116, "originalText": "top-down", "ArgType": null, "before": " "}, {"index": 20, "word": "filtering", "lemma": "filter", "after": " ", "pos": "VBG", "characterOffsetEnd": 134, "segment_span": [9, 20], "characterOffsetBegin": 125, "originalText": "filtering", "ArgType": null, "before": " "}, {"index": 21, "word": "while", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 140, "segment_span": [20, 28], "characterOffsetBegin": 135, "originalText": "while", "ArgType": null, "before": " "}, {"index": 22, "word": "maintaining", "lemma": "maintain", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 152, "segment_span": [20, 28], "tense": "G", "characterOffsetBegin": 141, "originalText": "maintaining", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 156, "segment_span": [20, 28], "characterOffsetBegin": 153, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "robustness", "lemma": "robustness", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [20, 28], "characterOffsetBegin": 157, "originalText": "robustness", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 170, "segment_span": [20, 28], "characterOffsetBegin": 168, "originalText": "of", "ArgType": null, "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 172, "segment_span": [20, 28], "characterOffsetBegin": 171, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "bottom-up", "lemma": "bottom-up", "after": " ", "pos": "JJ", "characterOffsetEnd": 182, "segment_span": [20, 28], "characterOffsetBegin": 173, "originalText": "bottom-up", "ArgType": null, "before": " "}, {"index": 28, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 191, "segment_span": [20, 28], "characterOffsetBegin": 183, "originalText": "approach", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 193, "characterOffsetBegin": 192, "originalText": ".", "ArgType": null, "before": " "}], "text": "While this is undoubtedly an advantage for certain applications , our approach would allow the introduction of some top-down filtering while maintaining the robustness of a bottom-up approach ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 9], "characterOffsetBegin": 2, "originalText": "second", "ArgType": null, "before": " "}, {"index": 3, "word": "advantage", "lemma": "advantage", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 9], "characterOffsetBegin": 9, "originalText": "advantage", "ArgType": "subj", "before": " "}, {"index": 4, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 9], "characterOffsetBegin": 19, "originalText": "for", "ArgType": null, "before": " "}, {"index": 5, "word": "robust", "lemma": "robust", "after": " ", "pos": "JJ", "characterOffsetEnd": 29, "segment_span": [0, 9], "characterOffsetBegin": 23, "originalText": "robust", "ArgType": null, "before": " "}, {"index": 6, "word": "finite", "lemma": "finite", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [0, 9], "characterOffsetBegin": 30, "originalText": "finite", "ArgType": null, "before": " "}, {"index": 7, "word": "state", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 9], "characterOffsetBegin": 37, "originalText": "state", "ArgType": null, "before": " "}, {"index": 8, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 9], "characterOffsetBegin": 43, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 53, "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 51, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 10, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [9, 22], "characterOffsetBegin": 54, "originalText": "that", "ArgType": null, "before": " "}, {"index": 11, "word": "bracketing", "lemma": "bracket", "after": " ", "pos": "VBG", "characterOffsetEnd": 69, "segment_span": [9, 22], "characterOffsetBegin": 59, "originalText": "bracketing", "ArgType": "subj", "before": " "}, {"index": 12, "word": "could", "lemma": "could", "after": " ", "pos": "MD", "characterOffsetEnd": 75, "segment_span": [9, 22], "characterOffsetBegin": 70, "originalText": "could", "ArgType": null, "before": " "}, {"index": 13, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 80, "segment_span": [9, 22], "characterOffsetBegin": 76, "originalText": "also", "ArgType": null, "before": " "}, {"index": 14, "word": "include", "lemma": "include", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 88, "segment_span": [9, 22], "tense": "B", "characterOffsetBegin": 81, "originalText": "include", "has_aux": true, "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 92, "segment_span": [9, 22], "characterOffsetBegin": 89, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "notion", "lemma": "notion", "after": " ", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [9, 22], "characterOffsetBegin": 93, "originalText": "notion", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [9, 22], "characterOffsetBegin": 100, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "``", "lemma": "``", "after": " ", "pos": "``", "characterOffsetEnd": 105, "segment_span": [9, 22], "characterOffsetBegin": 103, "originalText": "``", "ArgType": null, "before": " "}, {"index": 19, "word": "repair", "lemma": "repair", "after": " ", "pos": "NN", "characterOffsetEnd": 112, "segment_span": [9, 22], "characterOffsetBegin": 106, "originalText": "repair", "ArgType": null, "before": " "}, {"index": 20, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 115, "segment_span": [9, 22], "characterOffsetBegin": 113, "originalText": "''", "ArgType": null, "before": " "}, {"index": 21, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [9, 22], "characterOffsetBegin": 116, "originalText": "as", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [9, 22], "characterOffsetBegin": 119, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 123, "characterOffsetBegin": 122, "originalText": ".", "ArgType": null, "before": " "}], "text": "A second advantage for robust finite state parsing is that bracketing could also include the notion of `` repair '' as in ."}, {"tokens": [{"index": 1, "word": "One", "lemma": "one", "after": " ", "pos": "NN", "characterOffsetEnd": 3, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "One", "ArgType": "subj", "before": ""}, {"index": 2, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 9, "segment_span": [0, 13], "characterOffsetBegin": 4, "originalText": "might", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 11, "segment_span": [0, 13], "characterOffsetBegin": 10, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 13], "characterOffsetBegin": 12, "originalText": "for", "ArgType": null, "before": " "}, {"index": 5, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 13], "characterOffsetBegin": 16, "originalText": "example", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 25, "segment_span": [0, 13], "characterOffsetBegin": 24, "originalText": ",", "ArgType": null, "before": " "}, {"index": 7, "word": "want", "lemma": "want", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 30, "segment_span": [0, 13], "tense": "P", "characterOffsetBegin": 26, "originalText": "want", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 33, "segment_span": [0, 13], "characterOffsetBegin": 31, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "say", "lemma": "say", "after": " ", "pos": "VB", "characterOffsetEnd": 37, "segment_span": [0, 13], "characterOffsetBegin": 34, "originalText": "say", "ArgType": null, "before": " "}, {"index": 10, "word": "something", "lemma": "something", "after": " ", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 13], "characterOffsetBegin": 38, "originalText": "something", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 13], "characterOffsetBegin": 48, "originalText": "like", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": "  ", "pos": ":", "characterOffsetEnd": 54, "segment_span": [0, 13], "characterOffsetBegin": 53, "originalText": ":", "ArgType": null, "before": " "}, {"index": 13, "word": "equation", "lemma": "equation", "after": "  ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [0, 13], "characterOffsetBegin": 56, "originalText": "equation", "ArgType": null, "before": "  "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [13, 30], "characterOffsetBegin": 66, "originalText": "that", "ArgType": null, "before": "  "}, {"index": 15, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 73, "segment_span": [13, 30], "characterOffsetBegin": 71, "originalText": "an", "ArgType": null, "before": " "}, {"index": 16, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 76, "segment_span": [13, 30], "characterOffsetBegin": 74, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 17, "word": "could", "lemma": "could", "after": " ", "pos": "MD", "characterOffsetEnd": 82, "segment_span": [13, 30], "characterOffsetBegin": 77, "originalText": "could", "ArgType": null, "before": " "}, {"index": 18, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 85, "segment_span": [13, 30], "characterOffsetBegin": 83, "originalText": "be", "ArgType": null, "before": " "}, {"index": 19, "word": "parsed", "is_pass": true, "lemma": "parse", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 92, "segment_span": [13, 30], "tense": "N", "characterOffsetBegin": 86, "originalText": "parsed", "has_aux": true, "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [13, 30], "characterOffsetBegin": 93, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 97, "segment_span": [13, 30], "characterOffsetBegin": 96, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "slightly", "lemma": "slightly", "after": " ", "pos": "RB", "characterOffsetEnd": 106, "segment_span": [13, 30], "characterOffsetBegin": 98, "originalText": "slightly", "ArgType": null, "before": " "}, {"index": 23, "word": "malformed", "lemma": "malformed", "after": " ", "pos": "JJ", "characterOffsetEnd": 116, "segment_span": [13, 30], "characterOffsetBegin": 107, "originalText": "malformed", "ArgType": null, "before": " "}, {"index": 24, "word": "Det", "lemma": "det", "after": " ", "pos": "NN", "characterOffsetEnd": 120, "segment_span": [13, 30], "characterOffsetBegin": 117, "originalText": "Det", "ArgType": null, "before": " "}, {"index": 25, "word": "followed", "lemma": "follow", "after": " ", "pos": "VBN", "characterOffsetEnd": 129, "segment_span": [13, 30], "characterOffsetBegin": 121, "originalText": "followed", "ArgType": null, "before": " "}, {"index": 26, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 132, "segment_span": [13, 30], "characterOffsetBegin": 130, "originalText": "by", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 134, "segment_span": [13, 30], "characterOffsetBegin": 133, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "slightly", "lemma": "slightly", "after": " ", "pos": "RB", "characterOffsetEnd": 143, "segment_span": [13, 30], "characterOffsetBegin": 135, "originalText": "slightly", "ArgType": null, "before": " "}, {"index": 29, "word": "malformed", "lemma": "malformed", "after": " ", "pos": "JJ", "characterOffsetEnd": 153, "segment_span": [13, 30], "characterOffsetBegin": 144, "originalText": "malformed", "ArgType": null, "before": " "}, {"index": 30, "word": "N", "lemma": "n", "after": " ", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [13, 30], "characterOffsetBegin": 154, "originalText": "N", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 157, "characterOffsetBegin": 156, "originalText": ".", "ArgType": null, "before": " "}], "text": "One might , for example , want to say something like : equation that an NP could be parsed as a slightly malformed Det followed by a slightly malformed N ."}, {"tokens": [{"index": 1, "word": "RepairDet", "lemma": "RepairDet", "after": " ", "pos": "NNP", "characterOffsetEnd": 9, "segment_span": [0, 41], "characterOffsetBegin": 0, "originalText": "RepairDet", "ArgType": "subj", "before": ""}, {"index": 2, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 13, "segment_span": [0, 41], "characterOffsetBegin": 10, "originalText": "and", "ArgType": null, "before": " "}, {"index": 3, "word": "RepairN", "lemma": "RepairN", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 41], "characterOffsetBegin": 14, "originalText": "RepairN", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 23, "segment_span": [0, 41], "characterOffsetBegin": 22, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 41], "characterOffsetBegin": 24, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 41], "characterOffsetBegin": 27, "originalText": "this", "ArgType": null, "before": " "}, {"index": 7, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 41], "characterOffsetBegin": 32, "originalText": "example", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 41, "segment_span": [0, 41], "characterOffsetBegin": 40, "originalText": ",", "ArgType": null, "before": " "}, {"index": 9, "word": "could", "lemma": "could", "after": " ", "pos": "MD", "characterOffsetEnd": 47, "segment_span": [0, 41], "characterOffsetBegin": 42, "originalText": "could", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 50, "segment_span": [0, 41], "characterOffsetBegin": 48, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "doing", "lemma": "do", "after": " ", "pos": "VBG", "is_root": true, "characterOffsetEnd": 56, "segment_span": [0, 41], "tense": "G", "characterOffsetBegin": 51, "originalText": "doing", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 41], "characterOffsetBegin": 57, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "variety", "lemma": "variety", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [0, 41], "characterOffsetBegin": 59, "originalText": "variety", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [0, 41], "characterOffsetBegin": 67, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "things", "lemma": "thing", "after": " ", "pos": "NNS", "characterOffsetEnd": 76, "segment_span": [0, 41], "characterOffsetBegin": 70, "originalText": "things", "ArgType": null, "before": " "}, {"index": 16, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [0, 41], "characterOffsetBegin": 77, "originalText": "such", "ArgType": null, "before": " "}, {"index": 17, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [0, 41], "characterOffsetBegin": 82, "originalText": "as", "ArgType": null, "before": " "}, {"index": 18, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 86, "segment_span": [0, 41], "characterOffsetBegin": 85, "originalText": ":", "ArgType": null, "before": " "}, {"index": 19, "word": "contextualized", "lemma": "contextualize", "after": " ", "pos": "VBN", "characterOffsetEnd": 101, "segment_span": [0, 41], "characterOffsetBegin": 87, "originalText": "contextualized", "ArgType": null, "before": " "}, {"index": 20, "word": "spelling", "lemma": "spelling", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 41], "characterOffsetBegin": 102, "originalText": "spelling", "ArgType": null, "before": " "}, {"index": 21, "word": "correction", "lemma": "correction", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 41], "characterOffsetBegin": 111, "originalText": "correction", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 123, "segment_span": [0, 41], "characterOffsetBegin": 122, "originalText": ",", "ArgType": null, "before": " "}, {"index": 23, "word": "reordering", "lemma": "reordering", "after": " ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [0, 41], "characterOffsetBegin": 124, "originalText": "reordering", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 137, "segment_span": [0, 41], "characterOffsetBegin": 135, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [0, 41], "characterOffsetBegin": 138, "originalText": "function", "ArgType": null, "before": " "}, {"index": 26, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 152, "segment_span": [0, 41], "characterOffsetBegin": 147, "originalText": "words", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 154, "segment_span": [0, 41], "characterOffsetBegin": 153, "originalText": ",", "ArgType": null, "before": " "}, {"index": 28, "word": "replacement", "lemma": "replacement", "after": " ", "pos": "NN", "characterOffsetEnd": 166, "segment_span": [0, 41], "characterOffsetBegin": 155, "originalText": "replacement", "ArgType": null, "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 169, "segment_span": [0, 41], "characterOffsetBegin": 167, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "phrases", "lemma": "phrase", "after": " ", "pos": "NNS", "characterOffsetEnd": 177, "segment_span": [0, 41], "characterOffsetBegin": 170, "originalText": "phrases", "ArgType": null, "before": " "}, {"index": 31, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 180, "segment_span": [0, 41], "characterOffsetBegin": 178, "originalText": "by", "ArgType": null, "before": " "}, {"index": 32, "word": "acronyms", "lemma": "acronym", "after": " ", "pos": "NNS", "characterOffsetEnd": 189, "segment_span": [0, 41], "characterOffsetBegin": 181, "originalText": "acronyms", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 191, "segment_span": [0, 41], "characterOffsetBegin": 190, "originalText": ",", "ArgType": null, "before": " "}, {"index": 34, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 194, "segment_span": [0, 41], "characterOffsetBegin": 192, "originalText": "or", "ArgType": null, "before": " "}, {"index": 35, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 198, "segment_span": [0, 41], "characterOffsetBegin": 195, "originalText": "any", "ArgType": null, "before": " "}, {"index": 36, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 204, "segment_span": [0, 41], "characterOffsetBegin": 199, "originalText": "other", "ArgType": null, "before": " "}, {"index": 37, "word": "operation", "lemma": "operation", "after": " ", "pos": "NN", "characterOffsetEnd": 214, "segment_span": [0, 41], "characterOffsetBegin": 205, "originalText": "operation", "ArgType": "subj", "before": " "}, {"index": 38, "word": "implemented", "lemma": "implement", "after": " ", "pos": "VBD", "characterOffsetEnd": 226, "segment_span": [0, 41], "characterOffsetBegin": 215, "originalText": "implemented", "ArgType": null, "before": " "}, {"index": 39, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 229, "segment_span": [0, 41], "characterOffsetBegin": 227, "originalText": "as", "ArgType": null, "before": " "}, {"index": 40, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 231, "segment_span": [0, 41], "characterOffsetBegin": 230, "originalText": "a", "ArgType": null, "before": " "}, {"index": 41, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 242, "segment_span": [0, 41], "characterOffsetBegin": 232, "originalText": "transducer", "ArgType": null, "before": " "}, {"index": 42, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 244, "characterOffsetBegin": 243, "originalText": ".", "ArgType": null, "before": " "}], "text": "RepairDet and RepairN , in this example , could be doing a variety of things such as : contextualized spelling correction , reordering of function words , replacement of phrases by acronyms , or any other operation implemented as a transducer ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "Finally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 8, "originalText": ",", "ArgType": null, "before": " "}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 12, "segment_span": [0, 9], "characterOffsetBegin": 10, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 19, "segment_span": [0, 9], "characterOffsetBegin": 13, "originalText": "should", "ArgType": null, "before": " "}, {"index": 5, "word": "mention", "lemma": "mention", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 27, "segment_span": [0, 9], "tense": "B", "characterOffsetBegin": 20, "originalText": "mention", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 9], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 9], "characterOffsetBegin": 32, "originalText": "problem", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 42, "segment_span": [0, 9], "characterOffsetBegin": 40, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "complexity", "lemma": "complexity", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 9], "characterOffsetBegin": 43, "originalText": "complexity", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 55, "characterOffsetBegin": 54, "originalText": ".", "ArgType": null, "before": " "}], "text": "Finally , we should mention the problem of complexity ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "critical", "lemma": "critical", "after": " ", "pos": "JJ", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 2, "originalText": "critical", "ArgType": null, "before": " "}, {"index": 3, "word": "reader", "lemma": "reader", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 12], "characterOffsetBegin": 11, "originalText": "reader", "ArgType": "subj", "before": " "}, {"index": 4, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 23, "segment_span": [0, 12], "characterOffsetBegin": 18, "originalText": "might", "ArgType": null, "before": " "}, {"index": 5, "word": "see", "lemma": "see", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 27, "segment_span": [0, 12], "tense": "B", "characterOffsetBegin": 24, "originalText": "see", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "nine", "lemma": "nine", "after": " ", "pos": "CD", "characterOffsetEnd": 36, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "nine", "ArgType": null, "before": " "}, {"index": 8, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 42, "segment_span": [0, 12], "characterOffsetBegin": 37, "originalText": "steps", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [0, 12], "characterOffsetBegin": 43, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 49, "segment_span": [0, 12], "characterOffsetBegin": 46, "originalText": "our", "ArgType": null, "before": " "}, {"index": 11, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 12], "characterOffsetBegin": 50, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 63, "segment_span": [0, 12], "characterOffsetBegin": 60, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "conclude", "lemma": "conclude", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 72, "segment_span": [12, 13], "tense": "P", "characterOffsetBegin": 64, "originalText": "conclude", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 77, "segment_span": [13, 19], "characterOffsetBegin": 73, "originalText": "that", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [13, 19], "characterOffsetBegin": 78, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [13, 19], "characterOffsetBegin": 82, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 17, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 94, "segment_span": [13, 19], "characterOffsetBegin": 92, "originalText": "is", "ArgType": null, "before": " "}, {"index": 18, "word": "overly", "lemma": "overly", "after": " ", "pos": "RB", "characterOffsetEnd": 101, "segment_span": [13, 19], "characterOffsetBegin": 95, "originalText": "overly", "ArgType": null, "before": " "}, {"index": 19, "word": "complex", "lemma": "complex", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [13, 19], "characterOffsetBegin": 102, "originalText": "complex", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 111, "characterOffsetBegin": 110, "originalText": ".", "ArgType": null, "before": " "}], "text": "A critical reader might see the nine steps in our algorithm and conclude that the algorithm is overly complex ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "This", "ArgType": "subj", "before": ""}, {"index": 2, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 10, "segment_span": [0, 6], "characterOffsetBegin": 5, "originalText": "would", "ArgType": null, "before": " "}, {"index": 3, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 13, "segment_span": [0, 6], "characterOffsetBegin": 11, "originalText": "be", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 15, "segment_span": [0, 6], "characterOffsetBegin": 14, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "false", "lemma": "false", "after": " ", "pos": "JJ", "characterOffsetEnd": 21, "segment_span": [0, 6], "characterOffsetBegin": 16, "originalText": "false", "ArgType": null, "before": " "}, {"index": 6, "word": "conclusion", "lemma": "conclusion", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 6], "has_aux": true, "characterOffsetBegin": 22, "originalText": "conclusion", "ArgType": "verb", "before": " "}, {"index": 7, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 34, "characterOffsetBegin": 33, "originalText": ".", "ArgType": null, "before": " "}], "text": "This would be a false conclusion ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "begin", "lemma": "begin", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 8, "segment_span": [0, 2], "tense": "B", "characterOffsetBegin": 3, "originalText": "begin", "ArgType": null, "before": " "}, {"index": 3, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 13, "segment_span": [2, 9], "characterOffsetBegin": 9, "originalText": "with", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [2, 9], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [2, 9], "characterOffsetBegin": 16, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [2, 9], "characterOffsetBegin": 20, "originalText": "problem", "ArgType": "subj", "before": " "}, {"index": 7, "word": "itself", "lemma": "itself", "after": " ", "pos": "PRP", "characterOffsetEnd": 34, "segment_span": [2, 9], "characterOffsetBegin": 28, "originalText": "itself", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 37, "segment_span": [2, 9], "characterOffsetBegin": 35, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "complex", "lemma": "complex", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [2, 9], "characterOffsetBegin": 38, "originalText": "complex", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 47, "characterOffsetBegin": 46, "originalText": ".", "ArgType": null, "before": " "}], "text": "To begin with , the problem itself is complex ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 5, "segment_span": [0, 6], "characterOffsetBegin": 3, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "easy", "lemma": "easy", "after": " ", "pos": "JJ", "characterOffsetEnd": 10, "segment_span": [0, 6], "characterOffsetBegin": 6, "originalText": "easy", "ArgType": "verb", "before": " "}, {"index": 4, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 13, "segment_span": [0, 6], "characterOffsetBegin": 11, "originalText": "to", "ArgType": null, "before": " "}, {"index": 5, "word": "create", "lemma": "create", "after": " ", "pos": "VB", "characterOffsetEnd": 20, "segment_span": [0, 6], "characterOffsetBegin": 14, "originalText": "create", "ArgType": null, "before": " "}, {"index": 6, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 29, "segment_span": [0, 6], "characterOffsetBegin": 21, "originalText": "examples", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 35, "segment_span": [6, 18], "characterOffsetBegin": 30, "originalText": "where", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 39, "segment_span": [6, 18], "characterOffsetBegin": 36, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "resulting", "lemma": "result", "after": " ", "pos": "VBG", "characterOffsetEnd": 49, "segment_span": [6, 18], "characterOffsetBegin": 40, "originalText": "resulting", "ArgType": null, "before": " "}, {"index": 10, "word": "transducer", "lemma": "transducer", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [6, 18], "characterOffsetBegin": 50, "originalText": "transducer", "ArgType": "subj", "before": " "}, {"index": 11, "word": "created", "lemma": "create", "after": " ", "pos": "VBN", "characterOffsetEnd": 68, "segment_span": [6, 18], "characterOffsetBegin": 61, "originalText": "created", "ArgType": null, "before": " "}, {"index": 12, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [6, 18], "characterOffsetBegin": 69, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [6, 18], "characterOffsetBegin": 72, "originalText": "any", "ArgType": null, "before": " "}, {"index": 14, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [6, 18], "characterOffsetBegin": 76, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 15, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 91, "segment_span": [6, 18], "characterOffsetBegin": 86, "originalText": "would", "ArgType": null, "before": " "}, {"index": 16, "word": "become", "lemma": "become", "after": " ", "pos": "VB", "is_root": true, "characterOffsetEnd": 98, "segment_span": [6, 18], "tense": "B", "characterOffsetBegin": 92, "originalText": "become", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "unmanageably", "lemma": "unmanageably", "after": " ", "pos": "RB", "characterOffsetEnd": 111, "segment_span": [6, 18], "characterOffsetBegin": 99, "originalText": "unmanageably", "ArgType": null, "before": " "}, {"index": 18, "word": "large", "lemma": "large", "after": " ", "pos": "JJ", "characterOffsetEnd": 117, "segment_span": [6, 18], "characterOffsetBegin": 112, "originalText": "large", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 119, "characterOffsetBegin": 118, "originalText": ".", "ArgType": null, "before": " "}], "text": "It is easy to create examples where the resulting transducer created by any algorithm would become unmanageably large ."}, {"tokens": [{"index": 1, "word": "But", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 3, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "But", "ArgType": null, "before": ""}, {"index": 2, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 4, "originalText": "there", "ArgType": null, "before": " "}, {"index": 3, "word": "exist", "lemma": "exist", "after": " ", "pos": "VBP", "is_root": true, "characterOffsetEnd": 15, "segment_span": [0, 9], "tense": "P", "characterOffsetBegin": 10, "originalText": "exist", "ArgType": null, "before": " "}, {"index": 4, "word": "strategies", "lemma": "strategy", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 9], "characterOffsetBegin": 16, "originalText": "strategies", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 9], "characterOffsetBegin": 27, "originalText": "for", "ArgType": null, "before": " "}, {"index": 6, "word": "keeping", "lemma": "keep", "after": " ", "pos": "VBG", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 31, "originalText": "keeping", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 42, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 54, "segment_span": [0, 9], "characterOffsetBegin": 43, "originalText": "transducers", "ArgType": "subj", "before": " "}, {"index": 9, "word": "smaller", "lemma": "smaller", "after": " ", "pos": "JJR", "characterOffsetEnd": 62, "segment_span": [0, 9], "characterOffsetBegin": 55, "originalText": "smaller", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 64, "characterOffsetBegin": 63, "originalText": ".", "ArgType": null, "before": " "}], "text": "But there exist strategies for keeping the transducers smaller ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 14], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 14], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": " "}, {"index": 4, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 16, "segment_span": [0, 14], "characterOffsetBegin": 14, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 19, "segment_span": [0, 14], "characterOffsetBegin": 17, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 23, "segment_span": [0, 14], "characterOffsetBegin": 20, "originalText": "not", "ArgType": null, "before": " "}, {"index": 7, "word": "necessary", "lemma": "necessary", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 14], "characterOffsetBegin": 24, "originalText": "necessary", "ArgType": "verb", "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [0, 14], "characterOffsetBegin": 34, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 41, "segment_span": [0, 14], "characterOffsetBegin": 38, "originalText": "all", "ArgType": null, "before": " "}, {"index": 10, "word": "nine", "lemma": "nine", "after": " ", "pos": "CD", "characterOffsetEnd": 46, "segment_span": [0, 14], "characterOffsetBegin": 42, "originalText": "nine", "ArgType": null, "before": " "}, {"index": 11, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 52, "segment_span": [0, 14], "characterOffsetBegin": 47, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 55, "segment_span": [0, 14], "characterOffsetBegin": 53, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 58, "segment_span": [0, 14], "characterOffsetBegin": 56, "originalText": "be", "ArgType": null, "before": " "}, {"index": 14, "word": "composed", "lemma": "compose", "after": " ", "pos": "VBN", "characterOffsetEnd": 67, "segment_span": [0, 14], "characterOffsetBegin": 59, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 69, "characterOffsetBegin": 68, "originalText": ".", "ArgType": null, "before": " "}], "text": "For example , it is not necessary for all nine steps to be composed ."}, {"tokens": [{"index": 1, "word": "They", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 4, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "They", "ArgType": null, "before": ""}, {"index": 2, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 8, "segment_span": [0, 5], "characterOffsetBegin": 5, "originalText": "can", "ArgType": null, "before": " "}, {"index": 3, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 13, "segment_span": [0, 5], "characterOffsetBegin": 9, "originalText": "also", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 16, "segment_span": [0, 5], "characterOffsetBegin": 14, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "cascaded", "is_pass": true, "lemma": "cascade", "after": " ", "pos": "VBN", "is_root": true, "characterOffsetEnd": 25, "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 17, "originalText": "cascaded", "has_aux": true, "ArgType": null, "before": " "}, {"index": 6, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 27, "characterOffsetBegin": 26, "originalText": ".", "ArgType": null, "before": " "}], "text": "They can also be cascaded ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 29], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 29], "characterOffsetBegin": 3, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 29], "characterOffsetBegin": 8, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 15, "segment_span": [0, 29], "characterOffsetBegin": 13, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 5, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 20, "segment_span": [0, 29], "characterOffsetBegin": 16, "originalText": "will", "ArgType": null, "before": " "}, {"index": 6, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 23, "segment_span": [0, 29], "characterOffsetBegin": 21, "originalText": "be", "ArgType": null, "before": " "}, {"index": 7, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 32, "segment_span": [0, 29], "has_aux": true, "characterOffsetBegin": 24, "originalText": "possible", "ArgType": "verb", "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 35, "segment_span": [0, 29], "characterOffsetBegin": 33, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "implement", "lemma": "implement", "after": " ", "pos": "VB", "characterOffsetEnd": 45, "segment_span": [0, 29], "characterOffsetBegin": 36, "originalText": "implement", "ArgType": null, "before": " "}, {"index": 10, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 55, "segment_span": [0, 29], "characterOffsetBegin": 46, "originalText": "different", "ArgType": null, "before": " "}, {"index": 11, "word": "steps", "lemma": "step", "after": " ", "pos": "NNS", "characterOffsetEnd": 61, "segment_span": [0, 29], "characterOffsetBegin": 56, "originalText": "steps", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 64, "segment_span": [0, 29], "characterOffsetBegin": 62, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 74, "segment_span": [0, 29], "characterOffsetBegin": 65, "originalText": "different", "ArgType": null, "before": " "}, {"index": 14, "word": "strategies", "lemma": "strategy", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [0, 29], "characterOffsetBegin": 75, "originalText": "strategies", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 87, "segment_span": [0, 29], "characterOffsetBegin": 86, "originalText": ",", "ArgType": null, "before": " "}, {"index": 16, "word": "e.g.", "lemma": "e.g.", "after": " ", "pos": "FW", "characterOffsetEnd": 92, "segment_span": [0, 29], "characterOffsetBegin": 88, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 17, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [0, 29], "characterOffsetBegin": 93, "originalText": "by", "ArgType": null, "before": " "}, {"index": 18, "word": "deterministic", "lemma": "deterministic", "after": " ", "pos": "JJ", "characterOffsetEnd": 109, "segment_span": [0, 29], "characterOffsetBegin": 96, "originalText": "deterministic", "ArgType": null, "before": " "}, {"index": 19, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 112, "segment_span": [0, 29], "characterOffsetBegin": 110, "originalText": "or", "ArgType": null, "before": " "}, {"index": 20, "word": "non-deterministic", "lemma": "non-deterministic", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [0, 29], "characterOffsetBegin": 113, "originalText": "non-deterministic", "ArgType": null, "before": " "}, {"index": 21, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 142, "segment_span": [0, 29], "characterOffsetBegin": 131, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 22, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 145, "segment_span": [0, 29], "characterOffsetBegin": 143, "originalText": "or", "ArgType": null, "before": " "}, {"index": 23, "word": "bimachines", "lemma": "bimachine", "after": "  ", "pos": "NNS", "characterOffsetEnd": 156, "segment_span": [0, 29], "characterOffsetBegin": 146, "originalText": "bimachines", "ArgType": null, "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": " ", "pos": "-LRB-", "characterOffsetEnd": 159, "segment_span": [0, 29], "characterOffsetBegin": 158, "originalText": "(", "ArgType": null, "before": "  "}, {"index": 25, "word": "Roche", "lemma": "Roche", "after": " ", "pos": "NNP", "characterOffsetEnd": 165, "segment_span": [0, 29], "characterOffsetBegin": 160, "originalText": "Roche", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 169, "segment_span": [0, 29], "characterOffsetBegin": 166, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "Schabes", "lemma": "Schabes", "after": " ", "pos": "NNP", "characterOffsetEnd": 177, "segment_span": [0, 29], "characterOffsetBegin": 170, "originalText": "Schabes", "ArgType": null, "before": " "}, {"index": 28, "word": "1997b", "lemma": "1997b", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [0, 29], "characterOffsetBegin": 178, "originalText": "1997b", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": "  ", "pos": "-RRB-", "characterOffsetEnd": 185, "segment_span": [0, 29], "characterOffsetBegin": 184, "originalText": ")", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 188, "characterOffsetBegin": 187, "originalText": ".", "ArgType": null, "before": "  "}], "text": "In that case it will be possible to implement different steps by different strategies , e.g. by deterministic or non-deterministic transducers or bimachines ( Roche and Schabes 1997b ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "range", "lemma": "range", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 11], "characterOffsetBegin": 4, "originalText": "range", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 11], "characterOffsetBegin": 10, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "possibilities", "lemma": "possibility", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 11], "characterOffsetBegin": 13, "originalText": "possibilities", "ArgType": null, "before": " "}, {"index": 5, "word": "leaves", "lemma": "leave", "after": " ", "pos": "VBZ", "is_root": true, "characterOffsetEnd": 33, "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 27, "originalText": "leaves", "ArgType": "verb", "before": " "}, {"index": 6, "word": "plenty", "lemma": "plenty", "after": " ", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 11], "characterOffsetBegin": 34, "originalText": "plenty", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 43, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "room", "lemma": "room", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 44, "originalText": "room", "ArgType": null, "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "future", "lemma": "future", "after": " ", "pos": "JJ", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "future", "ArgType": null, "before": " "}, {"index": 11, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 11], "characterOffsetBegin": 60, "originalText": "research", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 70, "characterOffsetBegin": 69, "originalText": ".", "ArgType": null, "before": " "}], "text": "The range of possibilities leaves plenty of room for future research ."}]}], "title": "Conclusions"}]}
